[{"/home/invidam/hamburger_calender/client/src/index.js":"1","/home/invidam/hamburger_calender/client/src/App.js":"2","/home/invidam/hamburger_calender/client/src/components/Header.js":"3","/home/invidam/hamburger_calender/client/src/components/Footer.js":"4","/home/invidam/hamburger_calender/client/src/components/pages/NotFoundPage.js":"5","/home/invidam/hamburger_calender/client/src/components/pages/HomePage.js":"6","/home/invidam/hamburger_calender/client/src/components/Loading.js":"7","/home/invidam/hamburger_calender/client/src/components/pages/LoginPage.js":"8","/home/invidam/hamburger_calender/client/src/components/pages/GithubLoginPage.js":"9","/home/invidam/hamburger_calender/client/src/components/pages/SignupPage.js":"10","/home/invidam/hamburger_calender/client/src/components/pages/SettingPage.js":"11","/home/invidam/hamburger_calender/client/src/hooks/user/useLogin.js":"12","/home/invidam/hamburger_calender/client/src/hooks/user/useTargetSetting.js":"13","/home/invidam/hamburger_calender/client/src/hooks/date/useSetDate.js":"14","/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptLogin.js":"15","/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptGithubLogin.js":"16","/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptSignup.js":"17","/home/invidam/hamburger_calender/client/src/hooks/user/useTargetSettingOnPage.js":"18","/home/invidam/hamburger_calender/client/src/components/calendar/CalendarTemplate.js":"19","/home/invidam/hamburger_calender/client/src/components/worklist/WorkListTemplate.js":"20","/home/invidam/hamburger_calender/client/src/components/todoList/TodoListTemplate.js":"21","/home/invidam/hamburger_calender/client/src/components/listview/ListViewTemplate.js":"22","/home/invidam/hamburger_calender/client/src/tools/LocalStorage.js":"23","/home/invidam/hamburger_calender/client/src/tools/time.js":"24","/home/invidam/hamburger_calender/client/src/tools/API.js":"25","/home/invidam/hamburger_calender/client/src/components/pages/NotLoggedInPage.js":"26","/home/invidam/hamburger_calender/client/src/components/worklist/WorkList.js":"27","/home/invidam/hamburger_calender/client/src/components/todoList/TodoList.js":"28","/home/invidam/hamburger_calender/client/src/components/listview/ListView.js":"29","/home/invidam/hamburger_calender/client/src/hooks/calendar/useDateInfo.js":"30","/home/invidam/hamburger_calender/client/src/hooks/listView/useListView.js":"31","/home/invidam/hamburger_calender/client/src/components/listview/EmptyView.js":"32","/home/invidam/hamburger_calender/client/src/components/listview/View.js":"33","/home/invidam/hamburger_calender/client/src/hooks/todolist/useTodoList.js":"34","/home/invidam/hamburger_calender/client/src/components/todoList/elements/Todo.js":"35","/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoExplain.js":"36","/home/invidam/hamburger_calender/client/src/components/worklist/element/timeBtn/TimeDisplayBtn.js":"37","/home/invidam/hamburger_calender/client/src/components/worklist/element/timeBtn/TimeRecordBtn.js":"38","/home/invidam/hamburger_calender/client/src/components/worklist/element/work/EmptyWork.js":"39","/home/invidam/hamburger_calender/client/src/components/worklist/element/work/Work.js":"40","/home/invidam/hamburger_calender/client/src/components/worklist/element/grade/WorkListGrade.js":"41","/home/invidam/hamburger_calender/client/src/hooks/workList/time/useRecordTime.js":"42","/home/invidam/hamburger_calender/client/src/hooks/workList/work/useWorkList.js":"43","/home/invidam/hamburger_calender/client/src/classes/Node.js":"44","/home/invidam/hamburger_calender/client/src/classes/Deque.js":"45","/home/invidam/hamburger_calender/client/src/components/worklist/element/grade/GradeStarList.js":"46","/home/invidam/hamburger_calender/client/src/hooks/todolist/useTodo.js":"47","/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoInput.js":"48","/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoDisplay.js":"49","/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoExpired.js":"50","/home/invidam/hamburger_calender/client/src/hooks/workList/time/useDeleteTime.js":"51","/home/invidam/hamburger_calender/client/src/hooks/workList/time/useEditTime.js":"52","/home/invidam/hamburger_calender/client/src/hooks/workList/work/useDeleteWork.js":"53","/home/invidam/hamburger_calender/client/src/hooks/workList/useWorkListGrade.js":"54","/home/invidam/hamburger_calender/client/src/hooks/example/useModal.js":"55","/home/invidam/hamburger_calender/client/src/components/worklist/window/time/EditTimeWindow.js":"56","/home/invidam/hamburger_calender/client/src/components/worklist/window/work/EditWorkWindow.js":"57","/home/invidam/hamburger_calender/client/src/components/worklist/window/work/AddWorkWindow.js":"58","/home/invidam/hamburger_calender/client/src/components/todoList/elements/DatePick.js":"59","/home/invidam/hamburger_calender/client/src/hooks/workList/work/useEditWork.js":"60","/home/invidam/hamburger_calender/client/src/hooks/example/useTabs.js":"61","/home/invidam/hamburger_calender/client/src/hooks/workList/work/usePushWork.js":"62","/home/invidam/hamburger_calender/client/src/components/worklist/window/work/tabs/CustomizeColor.js":"63","/home/invidam/hamburger_calender/client/src/components/worklist/window/work/tabs/IngredientList.js":"64"},{"size":197,"mtime":1632735571811,"results":"65","hashOfConfig":"66"},{"size":4136,"mtime":1637385618230,"results":"67","hashOfConfig":"66"},{"size":1933,"mtime":1636337425400,"results":"68","hashOfConfig":"66"},{"size":1631,"mtime":1637029734017,"results":"69","hashOfConfig":"66"},{"size":122,"mtime":1636428173260,"results":"70","hashOfConfig":"66"},{"size":1526,"mtime":1636428959400,"results":"71","hashOfConfig":"66"},{"size":796,"mtime":1636429400800,"results":"72","hashOfConfig":"66"},{"size":1581,"mtime":1633173442947,"results":"73","hashOfConfig":"66"},{"size":226,"mtime":1632567796753,"results":"74","hashOfConfig":"66"},{"size":1359,"mtime":1632735332441,"results":"75","hashOfConfig":"66"},{"size":3682,"mtime":1636425995380,"results":"76","hashOfConfig":"66"},{"size":3885,"mtime":1636950080910,"results":"77","hashOfConfig":"66"},{"size":4494,"mtime":1636795907340,"results":"78","hashOfConfig":"66"},{"size":845,"mtime":1637030674267,"results":"79","hashOfConfig":"66"},{"size":1061,"mtime":1637385799260,"results":"80","hashOfConfig":"66"},{"size":623,"mtime":1636429109510,"results":"81","hashOfConfig":"66"},{"size":1789,"mtime":1636795907360,"results":"82","hashOfConfig":"66"},{"size":2528,"mtime":1636795907340,"results":"83","hashOfConfig":"66"},{"size":1489,"mtime":1637030509797,"results":"84","hashOfConfig":"66"},{"size":618,"mtime":1634784744917,"results":"85","hashOfConfig":"66"},{"size":520,"mtime":1635593422830,"results":"86","hashOfConfig":"66"},{"size":1949,"mtime":1636514859590,"results":"87","hashOfConfig":"66"},{"size":3649,"mtime":1636795885310,"results":"88","hashOfConfig":"66"},{"size":2216,"mtime":1635995418406,"results":"89","hashOfConfig":"66"},{"size":5784,"mtime":1637030705267,"results":"90","hashOfConfig":"66"},{"size":186,"mtime":1636428188000,"results":"91","hashOfConfig":"66"},{"size":2751,"mtime":1637029303937,"results":"92","hashOfConfig":"66"},{"size":1760,"mtime":1636191770620,"results":"93","hashOfConfig":"66"},{"size":2773,"mtime":1637381303750,"results":"94","hashOfConfig":"66"},{"size":1163,"mtime":1637296212859,"results":"95","hashOfConfig":"66"},{"size":5156,"mtime":1636967000010,"results":"96","hashOfConfig":"66"},{"size":610,"mtime":1637030520577,"results":"97","hashOfConfig":"66"},{"size":2554,"mtime":1636514676080,"results":"98","hashOfConfig":"66"},{"size":3771,"mtime":1636795886260,"results":"99","hashOfConfig":"66"},{"size":5050,"mtime":1637030550047,"results":"100","hashOfConfig":"66"},{"size":2621,"mtime":1637030557677,"results":"101","hashOfConfig":"66"},{"size":3718,"mtime":1635995246646,"results":"102","hashOfConfig":"66"},{"size":426,"mtime":1632060070010,"results":"103","hashOfConfig":"66"},{"size":1500,"mtime":1637030589127,"results":"104","hashOfConfig":"66"},{"size":3429,"mtime":1637030606227,"results":"105","hashOfConfig":"66"},{"size":3655,"mtime":1637030611637,"results":"106","hashOfConfig":"66"},{"size":2939,"mtime":1636795886940,"results":"107","hashOfConfig":"66"},{"size":2846,"mtime":1636972523540,"results":"108","hashOfConfig":"66"},{"size":290,"mtime":1634303367082,"results":"109","hashOfConfig":"66"},{"size":2445,"mtime":1634607871100,"results":"110","hashOfConfig":"66"},{"size":1658,"mtime":1637030568257,"results":"111","hashOfConfig":"66"},{"size":3394,"mtime":1635586893930,"results":"112","hashOfConfig":"66"},{"size":4602,"mtime":1637030561697,"results":"113","hashOfConfig":"66"},{"size":2514,"mtime":1636429005880,"results":"114","hashOfConfig":"66"},{"size":2803,"mtime":1637030554097,"results":"115","hashOfConfig":"66"},{"size":626,"mtime":1633172079657,"results":"116","hashOfConfig":"66"},{"size":1051,"mtime":1634184228430,"results":"117","hashOfConfig":"66"},{"size":621,"mtime":1633174522997,"results":"118","hashOfConfig":"66"},{"size":1048,"mtime":1636795886630,"results":"119","hashOfConfig":"66"},{"size":331,"mtime":1633177832727,"results":"120","hashOfConfig":"66"},{"size":1353,"mtime":1632735518801,"results":"121","hashOfConfig":"66"},{"size":2876,"mtime":1633174651457,"results":"122","hashOfConfig":"66"},{"size":3235,"mtime":1633173624827,"results":"123","hashOfConfig":"66"},{"size":1428,"mtime":1636428966950,"results":"124","hashOfConfig":"66"},{"size":1952,"mtime":1633173545747,"results":"125","hashOfConfig":"66"},{"size":267,"mtime":1631761316918,"results":"126","hashOfConfig":"66"},{"size":2119,"mtime":1633173541357,"results":"127","hashOfConfig":"66"},{"size":1010,"mtime":1632735484131,"results":"128","hashOfConfig":"66"},{"size":1588,"mtime":1633173613757,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"z5y31z",{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"132"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"132"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"132"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"132"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"132"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"132"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"132"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"132"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"/home/invidam/hamburger_calender/client/src/index.js",[],["274","275"],"/home/invidam/hamburger_calender/client/src/App.js",[],"/home/invidam/hamburger_calender/client/src/components/Header.js",["276"],"import { Link } from \"react-router-dom\";\nimport \"../css/header.css\";\nimport { CalendarTemplate } from \"./calendar/CalendarTemplate\";\n\nexport const Header = ({ updateDateHook, customLoginHook }) => {\n  const date = updateDateHook[0];\n  const [user, , authenticated, , logout] = customLoginHook;\n\n  const loginColumn = (\n    <div className=\"header__column header-link\">\n      <Link\n        className=\"header-link__elem\"\n        to=\"/login\"\n        // customLoginHook={customLoginHook}\n      >\n        Log In\n      </Link>\n      <Link className=\"header-link__elem\" to=\"/signup\">\n        Sign Up\n      </Link>\n    </div>\n  );\n  const logoutColumn = (\n    <div className=\"header__column header-link\">\n      <button className=\"header-link__elem\" onClick={logout}>\n        Log Out\n      </button>\n      <Link className=\"header-link__elem\" to=\"/setting\">\n        {/* Log Out */}\n        Setting\n        {/* {element} */}\n      </Link>\n    </div>\n  );\n  return (\n    <header className=\"header\">\n      {/* <a href=\"https://www.freepik.com/vectors/food\">\n        Food vector created by rawpixel.com - www.freepik.com */}\n      {/* </a> */}\n      <div className=\"header__row\">\n        <div className=\"header__column header-icon\">\n          <Link className=\"\" to=\"/\">\n            <img\n              alt=\"app-icon\"\n              className=\"header-icon__icon\"\n              src=\"https://user-images.githubusercontent.com/71889359/133923788-1e176d98-acda-47ab-9eba-3815e3903ecf.png\"\n            ></img>\n          </Link>\n        </div>\n        <div className=\"header__column header-title\">\n          <Link className=\"\" to=\"/\">\n            <h1 className=\"\"> Hamburger App</h1>\n          </Link>\n        </div>\n        {!authenticated ? loginColumn : logoutColumn}\n      </div>\n      <span className=\"header__text\">\n        {authenticated ? `Hello ${user}` : \"\"}\n      </span>\n      <span className=\"header__text\"> {date}</span>\n    </header>\n  );\n};\n","/home/invidam/hamburger_calender/client/src/components/Footer.js",[],"/home/invidam/hamburger_calender/client/src/components/pages/NotFoundPage.js",[],"/home/invidam/hamburger_calender/client/src/components/pages/HomePage.js",[],"/home/invidam/hamburger_calender/client/src/components/Loading.js",[],"/home/invidam/hamburger_calender/client/src/components/pages/LoginPage.js",[],"/home/invidam/hamburger_calender/client/src/components/pages/GithubLoginPage.js",[],"/home/invidam/hamburger_calender/client/src/components/pages/SignupPage.js",[],"/home/invidam/hamburger_calender/client/src/components/pages/SettingPage.js",[],"/home/invidam/hamburger_calender/client/src/hooks/user/useLogin.js",["277"],"import { useEffect, useState } from \"react\";\nimport { API, updateAPIHeader } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { getToday } from \"../../tools/time\";\n\nconst verifyToken = async () => {\n  const response = await API.auth().verifyToken(); //await API.post(\"/api/jwt/verify\", { token });\n  return response.data.decode;\n};\n\nexport const useLogin = () => {\n  const [user, setUser] = useState();\n  const [isTokenLoading, setLoadInToken] = useState(true);\n  const [isLoginLoading, setLoadInLoading] = useState(false);\n  const [isLoginHookLoading, setLoad] = useState(true);\n  useEffect(() => {\n    console.log(\n      \"[login]TOKEN\",\n      isTokenLoading,\n      \"LOGIN\",\n      isLoginLoading,\n      \"RESULT: \",\n      isTokenLoading || isLoginLoading\n    );\n    setLoad(isTokenLoading || isLoginLoading);\n  }, [isTokenLoading, isLoginLoading]);\n  const setUserInToken = async () => {\n    try {\n      if (LocalStroage.accessToken().isEmpty()) {\n        console.log(\"user FIND! \");\n        LocalStroage.accessToken().set(undefined);\n        // throw new Error(\"access_token not exists.\");\n        console.log(\n          \"TOKEN\",\n          isTokenLoading,\n          \"LOGIN\",\n          isLoginLoading,\n          \"RESULT: \",\n          isTokenLoading || isLoginLoading\n        );\n        setLoadInToken(false);\n      } else {\n        // setLoadInToken(true);\n        const { username } = await verifyToken();\n        console.log(\"user find! \", username);\n        setLoadInToken(false);\n        setUser(username);\n      }\n    } catch (error) {\n      alert(error);\n      setLoadInToken(false);\n      setUser(undefined);\n      LocalStroage.accessToken().remove();\n    }\n  };\n  useEffect(() => {\n    console.log(\"USE EFFECT APPROACH\");\n    setUserInToken();\n  }, [user]);\n  const setDataInLocal = (user) => {\n    try {\n      console.log(\"TOKEN START\");\n      const date = getToday();\n      updateAPIHeader();\n      if (!LocalStroage.recordTime(\"wakeTime\").isEmpty()) {\n        const wakeTime = LocalStroage.recordTime(\"wakeTime\").get();\n        API.recordTime(user, date, \"wakeTime\").edit(wakeTime);\n        LocalStroage.recordTime(\"wakeTime\").remove();\n      }\n      if (!LocalStroage.recordTime(\"bedTime\").isEmpty()) {\n        const bedTime = LocalStroage.recordTime(\"bedTime\").get();\n        API.recordTime(user, date, \"bedTime\").edit(bedTime);\n        LocalStroage.recordTime(\"bedTime\").remove();\n      }\n      if (!LocalStroage.workList().isEmpty()) {\n        const workList = LocalStroage.workList(\"workList\").get();\n        API.workList(user, date).edit(workList);\n        LocalStroage.workList().remove();\n      }\n      if (!LocalStroage.todoList().isEmpty()) {\n        console.log(\"IS EMPTY TODO \");\n        const todoList = LocalStroage.todoList(\"todoList\").get();\n        API.todoList(user).edit(todoList);\n        LocalStroage.todoList().remove();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const authenticated = user != null;\n  const login = async (userInfo, socialType) => {\n    // setUser(signIn({ email, password }));\n    try {\n      setLoadInLoading(true);\n      // const response = await API.post(`/auth/login/${socialType}`, {\n      //   userInfo,\n      // });\n      const response = await API.auth().login(socialType, userInfo);\n      const { access_token, username } = response.data;\n      LocalStroage.accessToken().set(access_token);\n      setUser(username);\n      console.log(\"login success ~~~~~~~~~~~\");\n      if (!LocalStroage.accessToken().isEmpty()) {\n        setDataInLocal(username);\n        setLoadInLoading(false);\n      }\n    } catch (error) {\n      setLoadInLoading(false);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    LocalStroage.accessToken().remove();\n    updateAPIHeader();\n  };\n\n  return [user, setUser, authenticated, login, logout, isLoginHookLoading];\n};\n","/home/invidam/hamburger_calender/client/src/hooks/user/useTargetSetting.js",["278","279","280"],"import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\nconst makeTargetSetting = (\n  targetWorkTime,\n  targetWakeHour,\n  targetWakeMinute,\n  targetBedHour,\n  targetBedMinute\n) => {\n  return {\n    targetWorkTime,\n    targetWakeTime: { hour: targetWakeHour, minute: targetWakeMinute },\n    targetBedTime: { hour: targetBedHour, minute: targetBedMinute },\n  };\n};\nconst makeEmptySetting = () => makeTargetSetting(-1, -1, -1, -1, -1);\nexport const useTargetSetting = (user, isLoginLoading) => {\n  console.log(\"UPDATE SETTING HOOK USER: \", user, isLoginLoading);\n  const [targetSetting, setTargetSetting] = useState(makeEmptySetting());\n  // const [targetWorkTime, setTargetWorkTime] = useState(-1);\n  // const [targetWakeHour, setTargetWakeHour] = useState(-1);\n  // const [targetBedHour, setTargetBedHour] = useState(-1);\n  // const [targetWakeMinute, setTargetWakeMinute] = useState(-1);\n  // const [targetBedMinute, setTargetBedMinute] = useState(-1);\n  const [isSettingHookLoading, setLoad] = useState(true);\n  const getUserSetting = async () => {\n    try {\n      console.log(\"SETTING USE EFFECT : \", user, isLoginLoading);\n      if (user && !isLoginLoading) {\n        console.log(\"SETTIN-G\", user);\n        // setLoad(true);\n        const data = await API.userSetting(user).get(); //API.get(`/auth/setting/${user}`);\n        const settingObj = data?.data;\n        if (!data) throw new Error(\"Cannot find data\");\n        setTargetSetting(settingObj);\n        setLoad(false);\n        // setTargetWorkTime(settingObj?.targetWorkTime);\n        // setTargetWakeHour(settingObj?.targetWakeTime.hour);\n        // setTargetBedHour(settingObj?.targetBedTime.hour);\n        // setTargetWakeMinute(settingObj?.targetWakeTime.minute);\n        // setTargetBedMinute(settingObj?.targetBedTime.minute);\n      } else {\n        if (!isLoginLoading) setLoad(false);\n        //\n      }\n    } catch (error) {\n      setLoad(false);\n      alert(error);\n      // history.push(\"/setting\");\n    }\n  };\n  useEffect(() => {\n    getUserSetting();\n  }, [user, isLoginLoading]);\n\n  const validator = (targetSetting) => {\n    return (\n      targetSetting.targetWorkTime !== -1 &&\n      targetSetting.targetWakeTime.hour !== -1 &&\n      targetSetting.targetBedTime.hour !== -1 &&\n      targetSetting.targetWakeTime.minute !== -1 &&\n      targetSetting.targetBedTime.minute !== -1\n    );\n  };\n  const setTargetTime = (targetSetting) => {\n    try {\n      let willUpdate = true;\n      console.log(\"EDIT TARGET\");\n      if (typeof validator === \"function\")\n        willUpdate = validator(targetSetting);\n      if (willUpdate) {\n        console.log(\"API START~~\");\n        API.userSetting(user).edit(\n          targetSetting?.targetWorkTime,\n          targetSetting?.targetWakeTime,\n          targetSetting?.targetBedTime\n        );\n        setTargetSetting(targetSetting);\n        // setTargetWorkTime(targetSetting?.targetWorkTime);\n        // setTargetWakeHour(targetSetting?.targetWakeTime.hour);\n        // setTargetBedHour(targetSetting?.targetBedTime.hour);\n        // setTargetWakeMinute(targetSetting?.targetWakeTime.minute);\n        // setTargetBedMinute(targetSetting?.targetBedTime.minute);\n      } else {\n        const targetWakeTime =\n          targetSetting?.targetWakeHour && targetSetting?.targetWakeMinute;\n        const targetBedTime =\n          targetSetting?.targetBedHour && targetSetting?.targetBedMinute;\n        let errText = `[ERROR] ${\n          targetSetting?.targetWorkTime ? \"\" : \"TargetWorkTime\"\n        }${\n          !targetSetting?.targetWakeTime + !targetSetting?.targetBedTime > 0 &&\n          !targetSetting?.targetWorkTime\n            ? \", \"\n            : \"\"\n        }${targetSetting?.targetWakeTime ? \"\" : \"TargetWakeTime\"}${\n          !targetSetting?.targetBedTime > 0 && !targetSetting?.targetWakeTime\n            ? \", \"\n            : \"\"\n        }${targetSetting?.targetBedTime ? \"\" : \"TargetBedtime\"} ${\n          !targetSetting?.targetWorkTime +\n            !targetSetting?.targetWakeTime +\n            !targetSetting?.targetBedTime >\n          1\n            ? \"are\"\n            : \"is\"\n        } not entered.`;\n        throw new Error(errText);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  // const targetSetting = makeTargetSetting(\n  //   targetWorkTime,\n  //   targetWakeHour,\n  //   targetBedHour,\n  //   targetWakeMinute,\n  //   targetBedMinute\n  // );\n  return {\n    setTargetTime,\n    targetSetting,\n    isSettingHookLoading,\n  };\n};\n","/home/invidam/hamburger_calender/client/src/hooks/date/useSetDate.js",[],"/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptLogin.js",[],"/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptGithubLogin.js",["281"],"import qs from \"qs\";\nimport { useEffect } from \"react\";\nexport const useAttemptGithubLogin = ({\n  history,\n  location,\n  customLoginHook,\n}) => {\n  const login = customLoginHook[3];\n  const getToken = async () => {\n    const { code } = qs.parse(location?.search, {\n      ignoreQueryPrefix: true,\n    });\n    try {\n      const userInfo = { code };\n      await login(userInfo, \"github\");\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      history.push(\"/login\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"ATT GITHUB LOGIN EFFECT\", location, history);\n    getToken();\n  }, [location, history]);\n};\n","/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptSignup.js",[],"/home/invidam/hamburger_calender/client/src/hooks/user/useTargetSettingOnPage.js",["282","283"],"import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\n\nconst maketargetSetting = (\n  targetWorkTime,\n  targetWakeHour,\n  targetWakeMinute,\n  targetBedHour,\n  targetBedMinute\n) => {\n  return {\n    targetWorkTime,\n    targetWakeTime: { hour: targetWakeHour, minute: targetWakeMinute },\n    targetBedTime: { hour: targetBedHour, minute: targetBedMinute },\n  };\n};\nexport const useTargetSettingOnPage = ({ targetSetting, setTargetTime }) => {\n  console.log(\"UPDATE SETTING PAGE HOOK USER: \", targetSetting);\n  const [targetWorkTime, setTargetWorkTime] = useState(\n    targetSetting?.targetWorkTime === -1\n      ? undefined\n      : targetSetting?.targetWorkTime\n  );\n  const [targetWakeHour, setTargetWakeHour] = useState(\n    targetSetting?.targetWakeTime.hour === -1\n      ? undefined\n      : targetSetting?.targetWakeTime.hour\n  );\n  const [targetWakeMinute, setTargetWakeMinute] = useState(\n    targetSetting?.targetWakeTime.minute === -1\n      ? undefined\n      : targetSetting?.targetWakeTime.minute\n  );\n  const [targetBedHour, setTargetBedHour] = useState(\n    targetSetting?.targetBedTime.hour === -1\n      ? undefined\n      : targetSetting?.targetBedTime.hour\n  );\n  const [targetBedMinute, setTargetBedMinute] = useState(\n    targetSetting?.targetBedTime.minute === -1\n      ? undefined\n      : targetSetting?.targetBedTime.minute\n  );\n  const onChangeTargetWorkTime = (workTime) =>\n    setTargetWorkTime(parseInt(workTime));\n  const onChangeTargetWakeHour = (wakeHour) =>\n    setTargetWakeHour(parseInt(wakeHour));\n  const onChangeTargetWakeMinute = (wakeMinute) => {\n    console.log(\" CHANGE WWKAE TIME MIUUTE\", wakeMinute);\n    setTargetWakeMinute(parseInt(wakeMinute));\n  };\n  const onChangeTargetBedHour = (bedHour) =>\n    setTargetBedHour(parseInt(bedHour));\n  const onChangeTargetBedMinute = (bedMinute) =>\n    setTargetBedMinute(parseInt(bedMinute));\n\n  const onEditTargetTime = (event) => {\n    event.preventDefault();\n    setTargetTime(\n      maketargetSetting(\n        targetWorkTime,\n        targetWakeHour,\n        targetBedHour,\n        targetWakeMinute,\n        targetBedMinute\n      )\n    );\n  };\n  const displayObj = maketargetSetting(\n    targetWorkTime,\n    targetWakeHour,\n    targetWakeMinute,\n    targetBedHour,\n    targetBedMinute\n  );\n  console.log(\"DIS\", displayObj);\n  return {\n    displayObj,\n    onChangeTargetWorkTime,\n    onChangeTargetWakeHour,\n    onChangeTargetWakeMinute,\n    onChangeTargetBedHour,\n    onChangeTargetBedMinute,\n    onEditTargetTime,\n  };\n};\n","/home/invidam/hamburger_calender/client/src/components/calendar/CalendarTemplate.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/WorkListTemplate.js",[],"/home/invidam/hamburger_calender/client/src/components/todoList/TodoListTemplate.js",[],"/home/invidam/hamburger_calender/client/src/components/listview/ListViewTemplate.js",[],"/home/invidam/hamburger_calender/client/src/tools/LocalStorage.js",[],"/home/invidam/hamburger_calender/client/src/tools/time.js",[],"/home/invidam/hamburger_calender/client/src/tools/API.js",[],"/home/invidam/hamburger_calender/client/src/components/pages/NotLoggedInPage.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/WorkList.js",[],"/home/invidam/hamburger_calender/client/src/components/todoList/TodoList.js",[],"/home/invidam/hamburger_calender/client/src/components/listview/ListView.js",[],"/home/invidam/hamburger_calender/client/src/hooks/calendar/useDateInfo.js",["284"],"import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\nlet cancel = false;\nexport const useDateInfo = (user, date) => {\n  const [dateInfo, setDateInfo] = useState();\n\n  // const [activeDate, setActiveDate] = useState(undefined);\n  // const [isDateInfoLoad, setLoad] = useState(true);\n\n  const getUserInfo = async (nextDate) => {\n    try {\n      console.log(\"info, CANCEL?\", cancel);\n      if (!nextDate) return;\n      if (cancel) return;\n      // console.log(\"info, NOT CANCEL\");\n      if (user) {\n        // setLoad(true);\n        const data = await API.workList(user, nextDate).dataInfo();\n        // setLoad(false);\n        if (!data?.data) throw new Error(\"Cannot found Your Work List\");\n        const response = data.data;\n        console.log(\"USER INFO SETTING STRAT\", nextDate, response);\n        setDateInfo(response);\n      } else {\n        // setDateInfo();\n      }\n    } catch (error) {\n      // setDateInfo();\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"DATE INFO GET\", user, date);\n    getUserInfo(date);\n\n    return () => (cancel = true);\n  }, [user, date]);\n  return [dateInfo, getUserInfo];\n};\n","/home/invidam/hamburger_calender/client/src/hooks/listView/useListView.js",["285","286","287"],"import { useEffect, useState } from \"react\";\nimport { Deque } from \"../../classes/Deque\";\nimport { Node } from \"../../classes/Node\";\nimport { API } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport {\n  getAddedDateStr,\n  getDiffDayInStr,\n  subtractDayInStr,\n} from \"../../tools/time\";\nexport const DISPLAY_LENGTH = 5;\nexport const ARRAY_LENGTH = 11;\nconst makeStartDate = (date) =>\n  getAddedDateStr(date, -1 * Math.floor(ARRAY_LENGTH / 2));\n// const makeStartDate = (date) => getAddedDateStr(date, -1 * STARTDATEDIFF);\nconst getStartDate = (date) =>\n  LocalStroage.startDate().isEmpty()\n    ? makeStartDate(date)\n    : LocalStroage.startDate().get();\n\nlet befStartDate;\nlet listDeque;\n\nconst turnDeque = (deque, cnt, isLeft) => {\n  if (isLeft) {\n    // <-- 방향으로 이동\n    while (cnt--) {\n      deque.pop_front();\n      deque.push_back(new Node());\n    }\n  } else {\n    while (cnt--) {\n      deque.pop_back();\n\n      deque.push_front(new Node());\n    }\n  }\n};\nconst setDeque = (deque, arr, cnt, isLeft) => {\n  if (isLeft) {\n    // <-- 맨앞 요소를 없애고 맨앞에 arr요소들을 넣는다.\n    let idx = 0;\n    deque.pop_back(cnt);\n    while (idx < cnt) {\n      deque.push_back(new Node(arr[idx++]));\n    }\n  } else {\n    let idx = 0;\n    deque.pop_front(cnt);\n    while (cnt--) {\n      deque.push_front(new Node(arr[cnt]));\n    }\n  }\n};\n\nconst getEndDate = (startDate) => getAddedDateStr(startDate, ARRAY_LENGTH - 1);\nconst getDeqNeedDate = (startDate, dateDiff) => {\n  let endDate = getEndDate(startDate);\n  const isLeft = dateDiff > 0;\n  if (isLeft) {\n    startDate = getAddedDateStr(endDate, -1 * dateDiff + 1);\n  } else {\n    // 왼쪽 버튼 클릭 배열이 오른쪽 이동 왼쪽 요소들이 필요\n    endDate = getAddedDateStr(startDate, -1 * dateDiff - 1);\n    // startDate = getAddedDateStr(startDate, dateDiff + 1);\n  }\n  return [startDate, endDate];\n};\n// getAddedDateStr(startDate, ARRAY_LENGTH - 1);\nexport const useListView = (user, date, setDate) => {\n  const [startDate, setStratDate] = useState(getStartDate(date));\n  const [listView, setListView] = useState();\n  const [isListViewLoading, setLoad] = useState(true);\n\n  const updateStartDate = (nextDate) => {\n    LocalStroage.startDate().set(nextDate);\n    setStratDate(nextDate);\n  };\n  const onClickLeftBtn = () => {\n    if (isListViewLoading) return;\n    const nextDate = getAddedDateStr(startDate, -1);\n    updateStartDate(nextDate);\n  };\n  const onClickRightBtn = () => {\n    if (isListViewLoading) return;\n    const nextDate = getAddedDateStr(startDate, 1);\n    updateStartDate(nextDate);\n  };\n\n  const getListView = async (startDate, endDate) => {\n    try {\n      const data = await API.listView(\n        user,\n        startDate,\n        endDate,\n        ARRAY_LENGTH\n      ).get();\n      if (!data?.data) throw new Error(\"List View cann't found\");\n\n      return data.data;\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const updateListView = async () => {\n    if (!isListViewLoading) setLoad(true);\n    console.log(\"MK LV\");\n    if (user && startDate) {\n      const response = await getListView(startDate, getEndDate(startDate));\n      listDeque = new Deque(response, DISPLAY_LENGTH);\n      listDeque.print(\"MK LV?\");\n      const _listView = [...listDeque.get()];\n      setListView(_listView);\n    }\n    setLoad(false);\n  };\n  const moveListView = async (startDate, dateDiff) => {\n    if (!isListViewLoading) setLoad(true);\n    if (user && startDate) {\n      const isLeft = dateDiff > 0;\n      turnDeque(listDeque, Math.abs(dateDiff), isLeft);\n      const [needStartDate, needEndDate] = getDeqNeedDate(startDate, dateDiff);\n      setListView(listDeque.get());\n\n      const response = await getListView(needStartDate, needEndDate);\n      setDeque(listDeque, response, Math.abs(dateDiff), isLeft);\n    }\n    setLoad(false);\n  };\n  const MakeListView = async () => {\n    //setListView를 좀 더 스마트하게 바꾸어야 한다.\n\n    const dateDiff = subtractDayInStr(befStartDate, startDate);\n    console.log(\n      \"[listview]Set list view start\",\n      \"LISTQUE\",\n      listDeque,\n      \"BEF START DATE: \",\n      befStartDate,\n      \"STARDIFF: \",\n      startDate,\n      \"DDATE DIFF: \",\n      dateDiff\n    );\n    if (\n      !listDeque ||\n      !befStartDate ||\n      dateDiff > 2 ||\n      dateDiff < -2 ||\n      dateDiff === 0\n    )\n      await updateListView();\n    else await moveListView(startDate, dateDiff);\n    // updateListView(startDate);\n    befStartDate = startDate;\n    // return () => setLoad(false);\n  };\n  useEffect(() => {\n    updateStartDate(makeStartDate(date));\n  }, [date]);\n  useEffect(() => {\n    console.log(\"LV LOAD : \", isListViewLoading);\n  }, [isListViewLoading]);\n  useEffect(() => {\n    console.log(\"LIST VIEW USE EFFECT REACH\");\n    MakeListView();\n    return () => setLoad(false);\n  }, [user, startDate]);\n  return {\n    isListViewLoading,\n    startDate,\n    listView,\n    onClickLeftBtn,\n    onClickRightBtn,\n    updateListView,\n  };\n};\n\n// startTime 변경이 아닌ㄷ ㅏ른 방식으로 호출하여 에러 해결이 가능할 듯 하나 실제로 필요한진 몰겟드.\n","/home/invidam/hamburger_calender/client/src/components/listview/EmptyView.js",[],"/home/invidam/hamburger_calender/client/src/components/listview/View.js",[],"/home/invidam/hamburger_calender/client/src/hooks/todolist/useTodoList.js",["288"],"import { useEffect, useState } from \"react\";\nimport { SORT_TYPE_CNT } from \"../../components/todoList/TodoList\";\n// import { SORT_TYPE_CNT } from \"../../components/todoList/TodoListTemplate\";\nimport { API } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nconst makeSortTypeStr = (idx) => {\n  let ret = {};\n  ret[\"type\"] = Math.floor(idx / SORT_TYPE_CNT) === 0 ? \"date\" : \"priority\";\n  ret[\"direction\"] = idx % 2 === 0 ? \"up\" : \"down\";\n  return ret;\n};\nexport const useTodoList = (user, initSortTypeIdx, sortTypeCnt, sortTypes) => {\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(true);\n  const [sortTypeIdx, setSortTypeIdx] = useState(initSortTypeIdx);\n  const getTodoListLength = () =>\n    user\n      ? Object.keys(todoList).length\n      : parseInt(Object.keys(todoList)[Object.keys(todoList).length - 1]) + 1;\n  const getNextSortType = (idx) =>\n    (idx + 1) % sortTypes === 0 ? idx - sortTypes + 1 : idx + 1;\n  const onClickByTabIdx = (tabIdx) => {\n    // 같은 소속이었다면\n    setLoad(true);\n    if (Math.floor(sortTypeIdx / sortTypes) === tabIdx)\n      setSortTypeIdx(getNextSortType(sortTypeIdx));\n    else setSortTypeIdx(tabIdx * sortTypeCnt + 1);\n  };\n  const getTodoList = async (user, sortTypeIdx) => {\n    try {\n      if (user) {\n        if (!isTodoListLoading) setLoad(true);\n        console.log(\"TODO SORT\", sortTypeIdx);\n        const data = await API.todoList(user).get(makeSortTypeStr(sortTypeIdx));\n        const resTodoList = data?.data;\n        console.log(\"INDI, RES TODO LIST: \", resTodoList);\n        if (!data) throw new Error(\"TodoList can't found\");\n        setTodoList(resTodoList);\n        setLoad(false);\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n        setLoad(false);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    getTodoList(user, sortTypeIdx);\n  }, [user, sortTypeIdx]);\n  const setTodo = (todoObj, idx) => {\n    // const id = todoObj.id;\n    // let _todoList = todoList.concat();\n    //getTodoListLength\n    return {\n      create: async () => {\n        // _todoList.push([id, todoObj]);\n        // _todoList.push(todoObj);\n        if (user) {\n          await API.todo(user).create(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList };\n          const idx = getTodoListLength();\n          _todoList[idx] = todoObj;\n          console.log(\"CREATE TODO: \", _todoList);\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n      edit: async () => {\n        // _todoList[idx] = [id, todoObj];\n\n        // _todoList[idx] = todoObj;\n        // setTodoList(_todoList);\n        if (user) {\n          await API.todo(user).edit(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList };\n          _todoList[idx] = todoObj;\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n      delete: async () => {\n        // _todoList = _todoList.filter((el, elemIdx) => elemIdx !== idx);\n        // setTodoList(_todoList);\n        if (user) {\n          await API.todo(user).delete(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList };\n          if (!delete _todoList[idx]) throw new Error(\"Cannot Delete TodoItem\");\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n    };\n  };\n  return [todoList, setTodo, isTodoListLoading, sortTypeIdx, onClickByTabIdx];\n};\n","/home/invidam/hamburger_calender/client/src/components/todoList/elements/Todo.js",["289","290"],"// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { TodoInput } from \"./TodoInput\";\nimport { TodoDisplay } from \"./TodoDisplay\";\nimport { TodoExpired } from \"./TodoExpired\";\n// const checkElement = (\n//   <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n// );\nexport const Todo = ({ setTodo, _isEditMode, todoItem, id, idx }) => {\n  const todoHook = useTodo(setTodo, todoItem, _isEditMode, idx);\n  const isEditMode = todoHook[0];\n  const today = getToday();\n  const isExpired = todoItem?.date < today;\n  return (\n    <li className=\"todo\" key={\"_\" + todoItem?.id}>\n      {isEditMode ? (\n        <TodoInput todoHook={todoHook} key={id} id={id} />\n      ) : isExpired ? (\n        <TodoExpired todoHook={todoHook} key={id} id={id} />\n      ) : (\n        <TodoDisplay todoHook={todoHook} key={id} id={id} />\n      )}\n    </li>\n  );\n};\n\n// const inputBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button\n//       className=\"todo__btn todo__btn-add\"\n//       onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n//     >\n//       {isSubmitMode ? \"+\" : \"Save\"}\n//     </button>\n//   </div>\n// );\n// const displayBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n//       E\n//     </button>\n//     <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n//       X\n//     </button>\n//   </div>\n// );\n// const inputElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n//     <input\n//       className=\"todo__text todo-input__text todo__content todo-input__content\"\n//       type=\"text\"\n//       autoComplete=\"off\"\n//       name=\"todoText\"\n//       defaultValue={todoItem?.text}\n//       onChange={({ target: { value } }) => onChangeText(value)}\n//     ></input>\n//     {/* <input\n//       className=\"todo-input__date todo-input__content\"\n//       type=\"date\"\n//       name=\"todoDate\"\n//       lang=\"en-us\"\n//       required\n//       pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n//       defaultValue={isEditMode ? todoItem?.date : undefined}\n//       min={getToday()}\n//       onChange={({ target: { value } }) => onChangeDate(value)}\n//     ></input> */}\n//     <DatePick\n//       isEditMode={isEditMode}\n//       date={date}\n//       onChangeDate={onChangeDate}\n//     />\n//     {/* <input\n//       className=\"todo-input__priority todo-input__content\"\n//       type=\"text\"\n//       name=\"todoPriority\"\n//       defaultValue={todoItem?.priority}\n//       onChange={({ target: { value } }) => onChangePriority(value)}\n//     ></input> */}\n//     <div className={`todo__star-rating todo-input__star `}>\n//       <StarRatings\n//         // rating={todoItem?.priority}\n//         starRatedColor=\"rgba(241, 196, 15,0.8)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         changeRating={onChangePriority}\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {inputBtn}\n//   </div>\n// );\n\n// const displayElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n//       {todoItem?.text}\n//     </span>\n//     <DatePick date={date} isEditMode={isEditMode} />\n//     <div className={`todo__star-rating todo-display__star}`}>\n//       <StarRatings\n//         starRatedColor=\"rgba(241, 196, 15,1.0)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {displayBtn}\n//   </div>\n// );\n","/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoExplain.js",["291"],"import {\n  faCheck,\n  faSort,\n  faSortUp,\n  faSortDown,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { SORT_TYPES, SORT_TYPE_CNT } from \"../TodoList\";\nconst checkElement = (\n  <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n);\nconst sortElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon__sort todo-icon__sort-all\"\n    icon={faSort}\n    size=\"1x\"\n  />\n);\nconst sortUpElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon__sort todo-icon__sort-top\"\n    icon={faSortUp}\n    size=\"1x\"\n  />\n);\nconst sortDownElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon__sort todo-icon__sort-bottom\"\n    icon={faSortDown}\n    size=\"1x\"\n  />\n);\nconst getIconArrByIdx = (idx) => {\n  const indicateIdx = Math.floor(idx / SORT_TYPE_CNT);\n  const type = idx % SORT_TYPES;\n  return new Array(SORT_TYPE_CNT)\n    .fill()\n    .map((elem, idx) =>\n      idx !== indicateIdx\n        ? sortElement\n        : type === 1\n        ? sortUpElement\n        : sortDownElement\n    );\n};\nexport const TodoExplain = ({ onClickByTabIdx, sortTypeIdx }) => {\n  const [isCheck, setCheck] = useState(false);\n  const iconArr = getIconArrByIdx(sortTypeIdx);\n  const iconBtn = (colIdx) => {\n    const icon = iconArr[colIdx];\n    return (\n      <button\n        className=\"todo__explain-btn\"\n        onClick={() => onClickByTabIdx(colIdx)}\n      >\n        {\" \"}\n        {icon}\n      </button>\n    );\n  };\n  return (\n    <div className=\"todo\">\n      <div>{sortElement}</div>\n      <input\n        id={`todo__checkbox_ex`}\n        className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n        type=\"checkbox\"\n        name=\"todoCheck\"\n        defaultValue={isCheck}\n        onChange={() => setCheck(!isCheck)}\n      ></input>\n      <label className=\"todo__label\" htmlFor={`todo__checkbox_ex`}>\n        <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n      </label>\n      <div className=\"todo__text todo-explain__text todo__content todo-explain__content\">\n        <span className=\"todo-explain__text-box\">Text</span>\n      </div>\n      <div className=\"todo__date todo-explain__date todo__content todo-explain__content\">\n        <span className=\"todo-explain__text-box\">Deadline {iconBtn(0)}</span>\n      </div>\n      <div className=\"todo__content todo-explain__priority todo-explain__content\">\n        <span className=\"todo-explain__text-box\">Prioirty {iconBtn(1)}</span>\n      </div>\n      {/* {displayBtn} */}\n    </div>\n  );\n};\n","/home/invidam/hamburger_calender/client/src/components/worklist/element/timeBtn/TimeDisplayBtn.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/element/timeBtn/TimeRecordBtn.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/element/work/EmptyWork.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/element/work/Work.js",["292"],"import Modal from \"react-modal\";\nimport { useModal } from \"../../../../hooks/example/useModal\";\nimport { useDeleteWork } from \"../../../../hooks/workList/work/useDeleteWork\";\nimport { EditWorkWindow } from \"../../window/work/EditWorkWindow\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\nexport const Work = ({ workItem, setWork, targetTime, workTimeSum }) => {\n  const { id } = workItem;\n  const { editModalIsOpen, openEditModal, closeEditModal } = useModal();\n  const { onDeleteWork } = useDeleteWork(workItem, setWork, closeEditModal);\n\n  const editWorkWindow = (\n    <EditWorkWindow\n      workItem={workItem}\n      setWork={setWork}\n      callback={closeEditModal}\n    />\n  );\n\n  const editModal = (\n    <Modal\n      isOpen={editModalIsOpen}\n      onRequestClose={closeEditModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      overlayClassName=\"Overlay\"\n    >\n      {editWorkWindow}\n      <button className=\"modalWindow__btn\" onClick={onDeleteWork}>\n        DELETE\n      </button>\n      <button\n        className=\"modalWindow__close modalWindow__btn\"\n        onClick={closeEditModal}\n      >\n        CLOSE\n      </button>\n    </Modal>\n  );\n\n  const targetElement = (\n    <div className=\"tooltip-box__target\">\n      <span className=\"tooltip-box__key\">TargetTime:</span>\n      <span className=\"tooltip-box__value\">{targetTime}h</span>\n    </div>\n  );\n  const valueElement = (\n    <div className=\"tooltip-box__target\">\n      <span className=\"tooltip-box__key\">Worktime Sum:</span>\n      <span className=\"tooltip-box__value\">{workTimeSum}h</span>\n    </div>\n  );\n\n  const valueElement2 = (\n    <div className=\"tooltip-box__target\">\n      <span className=\"tooltip-box__key\">Worktime :</span>\n      <span className=\"tooltip-box__value\">{workItem.workTime}h</span>\n    </div>\n  );\n  const diffTime = targetTime - workTimeSum;\n  const diffElement = (\n    <div className=\"tooltip-box__target\">\n      <span className=\"tooltip-box__key\">Difference:</span>\n      <span className=\"tooltip-box__value\">\n        {/* {diffTime > 0 ? \"+\" : \"-\"} */}\n        {diffTime}h\n      </span>\n    </div>\n  );\n  // <span className=\"tooltip_box__value\">{`${isWake ? \"Wake\" : \"Bed\"}Time: ${\n  //   recordTime.hour\n  // }: ${recordTime.minute}`}</span>;\n  const tooltipBox = (\n    <div className=\"tooltip-content\">\n      <div className=\"tooltip-box\">\n        {targetTime.hour !== -1 ? targetElement : \"\"}\n        {valueElement}\n        {/* {valueElement2} */}\n        {targetTime.hour !== -1 ? diffElement : \"\"}\n      </div>\n    </div>\n  );\n  // const tooltipBox = (\n  //   <span className=\"tooltip-content\" key={id}>\n  //     {workItem.workName} {workItem.workTime}h targetTime workTimeSum\n  //   </span>\n  // );\n  console.log(\"[WORK]\", workItem);\n  return (\n    <div>\n      <li\n        className=\"workList__work tooltip\"\n        style={{ backgroundColor: workItem.workColor }}\n        key={\"_\" + id}\n        onClick={openEditModal}\n      >\n        {workItem.workName} {workItem.workTime}h{tooltipBox}\n      </li>\n      {editModal}\n    </div>\n  );\n};\n","/home/invidam/hamburger_calender/client/src/components/worklist/element/grade/WorkListGrade.js",["293"],"import { useWorkListGrade } from \"../../../../hooks/workList/useWorkListGrade\";\nimport { GradeStarList, makeStar } from \"./GradeStarList\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { timeObjToStr } from \"../../../../tools/time\";\nimport Loading from \"react-loading\";\nimport { LoadingElementSmall } from \"../../../Loading\";\nconst keyOrderArr = [\"target\", \"value\", \"difference\", \"point\"];\nconst redoElement = (\n  <FontAwesomeIcon className=\"work-icon__redo\" icon={faRedo} size=\"1x\" />\n);\n\nconst strToFirstLEtterUpper = (str) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\nexport const WorkListGrade = ({ user, date }) => {\n  // const [grade, difference, target, value, isGradeLoading, updateInfo] =\n  const [gradeInfo, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n  const getGradeSum = () =>\n    gradeInfo\n      ? Object.values(gradeInfo?.point).reduce(\n          (prev, value) => (prev += value),\n          0\n        )\n      : 0;\n  const gradeSum = getGradeSum();\n\n  const numToStr = (num, emptyStr) => (num === -1 ? emptyStr : num + \"h\");\n  const getValue = (type, elem) => {\n    const getValueInPoint = () =>\n      makeStar(elem, false, \"work-icon\").map((star, idx) => {\n        return (\n          <span key={\"star\" + idx} className=\"workList-grade__tooltip-star\">\n            {star}\n          </span>\n        );\n      });\n    if (type === \"point\") return getValueInPoint();\n    else if (type === \"target\" || type === \"value\")\n      return timeObjToStr(elem, \"X\");\n    else {\n      // diff\n      numToStr(elem, \"X\");\n    }\n  };\n  const tableElement = (\n    <table border={1}>\n      <thead>\n        <tr>\n          <th></th>\n          <th className=\"workList-grade__tooltip__row\">WakeTime</th>\n          <th className=\"workList-grade__tooltip__row\">BedTime</th>\n          <th className=\"workList-grade__tooltip__row\">WorkTimeSum</th>\n        </tr>\n      </thead>\n      <tbody>\n        {gradeInfo &&\n          keyOrderArr.map((key) => {\n            const value = gradeInfo[key];\n            return (\n              <tr key={key}>\n                <td>{strToFirstLEtterUpper(key)}</td>\n\n                {value &&\n                  Object.values(value).map((elem, idx) => {\n                    return (\n                      <td key={key + idx}>\n                        {key === \"point\"\n                          ? getValue(key, elem)\n                          : typeof elem === \"number\"\n                          ? numToStr(elem, \"X\")\n                          : timeObjToStr(elem, \"X\")}\n                      </td>\n                    );\n                  })}\n              </tr>\n            );\n          })}\n      </tbody>\n    </table>\n  );\n  const tooltipElement = (\n    <div className=\"grade-tooltip-content\">\n      <div className=\"grade-tooltip-box\">{tableElement} </div>\n    </div>\n  );\n\n  const getGradeElement = (\n    <button\n      className=\"workList-grade__btn workList-grade__btn-init\"\n      onClick={updateInfo}\n    >\n      Get Grade ⭐\n    </button>\n  );\n  const updateGradeBtn = (\n    <button\n      className=\"workList-grade__btn workList-grade__btn-update\"\n      onClick={updateInfo}\n    >\n      {redoElement}\n    </button>\n  );\n  const displayGrade = (\n    <div className=\"workList-grade__display\">\n      <div className=\"tooltip workList-grade__point\">\n        <GradeStarList gradeSum={gradeSum} />\n        {tooltipElement}\n      </div>\n      {updateGradeBtn}\n    </div>\n  );\n  return isGradeLoading ? (\n    <LoadingElementSmall text={\"Calculationg Grade...\"} />\n  ) : gradeInfo ? (\n    displayGrade\n  ) : (\n    getGradeElement\n  );\n};\n","/home/invidam/hamburger_calender/client/src/hooks/workList/time/useRecordTime.js",["294"],"import { useState, useEffect } from \"react\";\nimport { API } from \"../../../tools/API\";\nimport { LocalStroage } from \"../../../tools/LocalStorage\";\n// import { getToday } from \"../../../tools/time\";\n\nexport const isEmptyTimeObj = (timeObj) =>\n  timeObj ? !Object.keys(timeObj).length : true;\n// !timeObj || timeObj.hour === -1 || timeObj.minute === -1;\n\nconst getEmptyTimeObj = () => {\n  return {};\n};\n\nconst checkTimeObj = (timeObj) =>\n  isEmptyTimeObj(timeObj) ? getEmptyTimeObj() : timeObj;\n// const getInitList = (user, key) =>\n//   !user && window.localStorage.getItem(key)\n//     ? JSON.parse(window.localStorage.getItem(key))\n//     : null;\n\nconst getNowTimeHHMM = () =>\n  new Date()\n    .toTimeString()\n    .split(\":\")\n    .slice(0, 2)\n    .map((numChar) => parseInt(numChar));\nexport const useRecordTime = (key, user, date) => {\n  // const initVal = getInitList(user, key);\n  const [recordTime, setRecordTime] = useState();\n  const [isRecordTimeLoading, setLoad] = useState(false);\n\n  const getRecordTime = async () => {\n    try {\n      let resTimeObj;\n      if (user) {\n        setLoad(true);\n        const data = await API.recordTime(user, date, key).get();\n        setLoad(false);\n        resTimeObj = checkTimeObj(data?.data);\n        console.log(\"USERECORDTIME, data catch\");\n        console.log(\"USERECORDTIME DATA CATCH AFT\");\n        setRecordTime(resTimeObj);\n      } else {\n        resTimeObj = LocalStroage.recordTime(key).get();\n        console.log(\"USERECORDTIME DATA CATCH AFT\");\n        setRecordTime(resTimeObj);\n      }\n    } catch (error) {\n      setLoad(false);\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"GET EVENT START\");\n    getRecordTime();\n    return () => setLoad(false);\n  }, [date, user]);\n\n  const setTime = (timeObj) => {\n    timeObj = checkTimeObj(timeObj);\n    return {\n      create: async () => {\n        setRecordTime(timeObj);\n        if (user) await API.recordTime(user, date, key).create(timeObj);\n        else LocalStroage.recordTime(key).set(timeObj);\n      },\n      edit: async () => {\n        setRecordTime(timeObj);\n        if (user) await API.recordTime(user, date, key).edit(timeObj);\n        else LocalStroage.recordTime(key).set(timeObj);\n      },\n      delete: async () => {\n        setRecordTime({});\n        if (user) await API.recordTime(user, date, key).delete();\n        else LocalStroage.recordTime(key).set({});\n      },\n    };\n    //\n    // if (user)\n    //   API.post(`/api/${user}/${date}/worklist/record-time/${key}`, {\n    //     value: timeObj,\n    //   });\n    // else window.localStorage.setItem(key, JSON.stringify(timeObj));\n    // setRecordTime(timeObj);\n  };\n  const onClick = (event) => {\n    console.log(\"ONCLICK RECORDTIME\");\n    event.preventDefault();\n    const [hour, minute] = getNowTimeHHMM();\n    const timeObj = { hour, minute };\n    setTime(timeObj).create();\n  };\n  return [recordTime, onClick, setTime, isRecordTimeLoading];\n};\n","/home/invidam/hamburger_calender/client/src/hooks/workList/work/useWorkList.js",["295","296"],"import { useEffect, useState } from \"react\";\nimport { API } from \"../../../tools/API\";\nimport { LocalStroage } from \"../../../tools/LocalStorage\";\n\nexport const isEmptyWorkList = (workList) =>\n  workList ? !Object.keys(workList).length : true;\nexport const isEmptyWork = (workObj) =>\n  workObj ? !Object.keys(workObj).length : true;\nconst getEmptyWorkList = () => {\n  return {};\n};\nconst checkWorkList = (workList) =>\n  isEmptyWorkList(workList) ? getEmptyWorkList() : workList;\n\n// const getInitList = (user) =>\n//   !user && window.localStorage.getItem(\"workList\")\n//     ? JSON.parse(window.localStorage.getItem(\"workList\"))\n//     : [];\n\nexport const useWorkList = (user, date) => {\n  // const initList = getInitList();\n  const [isWorkListLoading, setLoad] = useState(false);\n  const [workList, setWorkList] = useState();\n  const [workTimeSum, setWorkTimeSum] = useState(0);\n  const getWorkList = async () => {\n    try {\n      let resWorkList;\n      if (user) {\n        console.log(\"BEF: \", workList);\n        setLoad(true);\n        const data = await API.workList(user, date).get();\n        setLoad(false);\n        resWorkList = checkWorkList(data?.data);\n        console.log(\"USEWORKLIST, data catch\");\n        console.log(\"USEWORKLIST DATA  CATCH  AFT\");\n        setWorkList(resWorkList);\n      } else {\n        resWorkList = LocalStroage.workList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setWorkList(resWorkList);\n      }\n    } catch (error) {\n      setLoad(false);\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"GET WORKLIST START\", date, user);\n    getWorkList();\n    return () => setLoad(false);\n  }, [date, user]);\n\n  const setWork = (workObj) => {\n    console.log(\"SET WRORK START\");\n    const id = workObj.id;\n    const _workList = { ...workList };\n    return {\n      create: async () => {\n        _workList[id] = workObj;\n        setWorkList(_workList);\n        if (user) await API.work(user, date).create(workObj);\n        else LocalStroage.workList().set(_workList);\n      },\n      edit: async () => {\n        _workList[id] = workObj;\n        setWorkList(_workList);\n        if (user) await API.work(user, date).edit(workObj);\n        else LocalStroage.workList().set(_workList);\n      },\n      delete: async () => {\n        if (!delete _workList[id]) throw new Error(\"Cannot Delete WorkItem\");\n        setWorkList(_workList);\n        console.log(\"IN USE WK, OBJ: \", workObj);\n        if (user) await API.work(user, date).delete(workObj);\n        else LocalStroage.workList().set(_workList);\n      },\n    };\n  };\n  useEffect(() => {\n    let sum = 0;\n    workList &&\n      Object.values(workList).map((workItem, idx) => {\n        sum += workItem.workTime;\n      });\n    setWorkTimeSum(sum);\n  }, [workList]);\n  return [workList, setWork, isWorkListLoading, workTimeSum];\n};\n","/home/invidam/hamburger_calender/client/src/classes/Node.js",[],"/home/invidam/hamburger_calender/client/src/classes/Deque.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/element/grade/GradeStarList.js",[],"/home/invidam/hamburger_calender/client/src/hooks/todolist/useTodo.js",[],"/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoInput.js",[],"/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoDisplay.js",[],"/home/invidam/hamburger_calender/client/src/components/todoList/elements/TodoExpired.js",["297","298"],"import StarRatings from \"react-star-ratings\";\nimport { DatePick } from \"./DatePick\";\n\nimport {\n  faCheck,\n  faEdit,\n  faTrashAlt,\n  faCalendarTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst checkElement = (\n  <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n);\nconst expiredElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon todo-icon__expired\"\n    icon={faCalendarTimes}\n    size=\"1x\"\n  />\n);\n// const editElement = (\n//   <FontAwesomeIcon\n//     className=\"todo-icon todo-icon__save\"\n//     icon={faEdit}\n//     size=\"1x\"\n//   />\n// );\nconst trashElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon todo-icon__plus\"\n    icon={faTrashAlt}\n    size=\"1x\"\n  />\n);\nexport const TodoExpired = ({ todoHook, id }) => {\n  const [\n    isEditMode,\n    isCheck,\n    text,\n    date,\n    priority,\n    onClickCheck,\n    ,\n    ,\n    ,\n    ,\n    ,\n    onDeleteTodo,\n    ,\n  ] = todoHook;\n  const displayBtn = (\n    <div className=\"todo__btn-box\">\n      <div className=\"todo__btn-content\">\n        <button className=\"todo__btn todo__btn-expire todo__btn-expired\">\n          {expiredElement}\n        </button>\n        <button\n          className={`todo__btn todo__btn-delete todo__btn-delete__expired todo__btn-expired `}\n          onClick={onDeleteTodo}\n        >\n          {trashElement}\n        </button>\n      </div>\n    </div>\n  );\n  const displayElement = (\n    <div className=\"todo-expired\">\n      <input\n        id={`todo__checkbox_${id}`}\n        className=\"todo__checkbox todo-display__checkbox todo__content todo-display__content todo-expired__content\"\n        type=\"checkbox\"\n        name=\"todoCheck\"\n        value={`${isCheck}`}\n        // onChange={({ target: { value } }) => onClickCheck(value)}\n      ></input>\n      <label\n        className=\"todo__label todo-display__label\"\n        htmlFor={`todo__checkbox_${id}`}\n      >\n        <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n      </label>\n      <span\n        className={`todo__text todo-display__text todo__content todo-display__content todo-expired__content ${\n          isCheck ? \"todo__text-checked\" : \"\"\n        }`}\n      >\n        {text}\n      </span>\n      <DatePick date={date} isEditMode={isEditMode} isExpired={true} />\n      <div className={`todo__star-rating todo-display__star}`}>\n        <StarRatings\n          rating={priority}\n          starRatedColor=\"rgb(62,0,0)\"\n          starHoverColor=\"rgb(62,0,0)\"\n          starEmptyColor=\"rgba(133, 133, 133, 1)\"\n          starSelectingHoverColor=\"red\"\n          numberOfStars={5}\n          name=\"rating\"\n          starDimension=\"24px\"\n          starSpacing=\"2px\"\n        />{\" \"}\n      </div>\n      {displayBtn}\n    </div>\n  );\n  return displayElement;\n};\n","/home/invidam/hamburger_calender/client/src/hooks/workList/time/useDeleteTime.js",[],"/home/invidam/hamburger_calender/client/src/hooks/workList/time/useEditTime.js",[],"/home/invidam/hamburger_calender/client/src/hooks/workList/work/useDeleteWork.js",[],"/home/invidam/hamburger_calender/client/src/hooks/workList/useWorkListGrade.js",[],"/home/invidam/hamburger_calender/client/src/hooks/example/useModal.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/window/time/EditTimeWindow.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/window/work/EditWorkWindow.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/window/work/AddWorkWindow.js",[],"/home/invidam/hamburger_calender/client/src/components/todoList/elements/DatePick.js",[],"/home/invidam/hamburger_calender/client/src/hooks/workList/work/useEditWork.js",[],"/home/invidam/hamburger_calender/client/src/hooks/example/useTabs.js",[],"/home/invidam/hamburger_calender/client/src/hooks/workList/work/usePushWork.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/window/work/tabs/CustomizeColor.js",[],"/home/invidam/hamburger_calender/client/src/components/worklist/window/work/tabs/IngredientList.js",[],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":26},{"ruleId":"307","severity":1,"message":"308","line":59,"column":6,"nodeType":"309","endLine":59,"endColumn":12,"suggestions":"310"},{"ruleId":"307","severity":1,"message":"311","line":54,"column":6,"nodeType":"309","endLine":54,"endColumn":28,"suggestions":"312"},{"ruleId":"303","severity":1,"message":"313","line":85,"column":15,"nodeType":"305","messageId":"306","endLine":85,"endColumn":29},{"ruleId":"303","severity":1,"message":"314","line":87,"column":15,"nodeType":"305","messageId":"306","endLine":87,"endColumn":28},{"ruleId":"307","severity":1,"message":"315","line":25,"column":6,"nodeType":"309","endLine":25,"endColumn":25,"suggestions":"316"},{"ruleId":"303","severity":1,"message":"317","line":1,"column":10,"nodeType":"305","messageId":"306","endLine":1,"endColumn":19},{"ruleId":"303","severity":1,"message":"318","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":13},{"ruleId":"307","severity":1,"message":"319","line":37,"column":6,"nodeType":"309","endLine":37,"endColumn":18,"suggestions":"320"},{"ruleId":"303","severity":1,"message":"321","line":8,"column":3,"nodeType":"305","messageId":"306","endLine":8,"endColumn":18},{"ruleId":"303","severity":1,"message":"322","line":48,"column":9,"nodeType":"305","messageId":"306","endLine":48,"endColumn":12},{"ruleId":"307","severity":1,"message":"323","line":168,"column":6,"nodeType":"309","endLine":168,"endColumn":23,"suggestions":"324"},{"ruleId":"307","severity":1,"message":"325","line":52,"column":6,"nodeType":"309","endLine":52,"endColumn":25,"suggestions":"326"},{"ruleId":"303","severity":1,"message":"327","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":17},{"ruleId":"303","severity":1,"message":"328","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":25},{"ruleId":"303","severity":1,"message":"329","line":9,"column":10,"nodeType":"305","messageId":"306","endLine":9,"endColumn":23},{"ruleId":"303","severity":1,"message":"330","line":74,"column":9,"nodeType":"305","messageId":"306","endLine":74,"endColumn":22},{"ruleId":"303","severity":1,"message":"331","line":6,"column":8,"nodeType":"305","messageId":"306","endLine":6,"endColumn":15},{"ruleId":"307","severity":1,"message":"332","line":57,"column":6,"nodeType":"309","endLine":57,"endColumn":18,"suggestions":"333"},{"ruleId":"307","severity":1,"message":"334","line":51,"column":6,"nodeType":"309","endLine":51,"endColumn":18,"suggestions":"335"},{"ruleId":"336","severity":1,"message":"337","line":82,"column":51,"nodeType":"338","messageId":"339","endLine":82,"endColumn":53},{"ruleId":"303","severity":1,"message":"340","line":6,"column":3,"nodeType":"305","messageId":"306","endLine":6,"endColumn":9},{"ruleId":"303","severity":1,"message":"341","line":42,"column":5,"nodeType":"305","messageId":"306","endLine":42,"endColumn":17},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'CalendarTemplate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUserInToken'. Either include it or remove the dependency array.","ArrayExpression",["344"],"React Hook useEffect has a missing dependency: 'getUserSetting'. Either include it or remove the dependency array.",["345"],"'targetWakeTime' is assigned a value but never used.","'targetBedTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["346"],"'useEffect' is defined but never used.","'API' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["347"],"'getDiffDayInStr' is defined but never used.","'idx' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'MakeListView'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has a missing dependency: 'getTodoList'. Either include it or remove the dependency array.",["349"],"'faCheck' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'valueElement2' is assigned a value but never used.","'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'getRecordTime'. Either include it or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'getWorkList'. Either include it or remove the dependency array.",["351"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'faEdit' is defined but never used.","'onClickCheck' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [setUserInToken, user]",{"range":"368","text":"369"},"Update the dependencies array to be: [user, isLoginLoading, getUserSetting]",{"range":"370","text":"371"},"Update the dependencies array to be: [location, history, getToken]",{"range":"372","text":"373"},"Update the dependencies array to be: [user, date, getUserInfo]",{"range":"374","text":"375"},"Update the dependencies array to be: [user, startDate, MakeListView]",{"range":"376","text":"377"},"Update the dependencies array to be: [user, sortTypeIdx, getTodoList]",{"range":"378","text":"379"},"Update the dependencies array to be: [date, getRecordTime, user]",{"range":"380","text":"381"},"Update the dependencies array to be: [date, getWorkList, user]",{"range":"382","text":"383"},[1796,1802],"[setUserInToken, user]",[2054,2076],"[user, isLoginLoading, getUserSetting]",[598,617],"[location, history, getToken]",[1111,1123],"[user, date, getUserInfo]",[4745,4762],"[user, startDate, MakeListView]",[2018,2037],"[user, sortTypeIdx, getTodoList]",[1735,1747],"[date, getRecordTime, user]",[1668,1680],"[date, getWorkList, user]"]