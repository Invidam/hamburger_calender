{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { changeFormatYYYYMMDD, getToday } from \"../../tools/time\";\nexport const useSetDate = () => {\n  _s();\n\n  const today = getToday();\n  let localDateObj;\n  if (!LocalStroage.date().isEmpty()) localDateObj = LocalStroage.date().get();\n  const initVal = changeFormatYYYYMMDD(localDateObj && localDateObj.today === today ? new Date(localDateObj.clickedDate) : new Date());\n  const [date, setDate] = useState(initVal);\n\n  const onUpdateDate = dateObj => {\n    console.log(dateObj, date);\n    const localDateObj = {\n      today: getToday(),\n      clickedDate: changeFormatYYYYMMDD(dateObj)\n    };\n    LocalStroage.date().set(localDateObj);\n    setDate(changeFormatYYYYMMDD(dateObj));\n  };\n\n  return [date, onUpdateDate];\n};\n\n_s(useSetDate, \"D0X8bPrlXe4dOGzCieQgf4RcN2U=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/date/useSetDate.js"],"names":["useState","LocalStroage","changeFormatYYYYMMDD","getToday","useSetDate","today","localDateObj","date","isEmpty","get","initVal","Date","clickedDate","setDate","onUpdateDate","dateObj","console","log","set"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,oBAAT,EAA+BC,QAA/B,QAA+C,kBAA/C;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAMC,KAAK,GAAGF,QAAQ,EAAtB;AACA,MAAIG,YAAJ;AACA,MAAI,CAACL,YAAY,CAACM,IAAb,GAAoBC,OAApB,EAAL,EAAoCF,YAAY,GAAGL,YAAY,CAACM,IAAb,GAAoBE,GAApB,EAAf;AACpC,QAAMC,OAAO,GAAGR,oBAAoB,CAClCI,YAAY,IAAIA,YAAY,CAACD,KAAb,KAAuBA,KAAvC,GACI,IAAIM,IAAJ,CAASL,YAAY,CAACM,WAAtB,CADJ,GAEI,IAAID,IAAJ,EAH8B,CAApC;AAKA,QAAM,CAACJ,IAAD,EAAOM,OAAP,IAAkBb,QAAQ,CAACU,OAAD,CAAhC;;AACA,QAAMI,YAAY,GAAIC,OAAD,IAAa;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqBR,IAArB;AACA,UAAMD,YAAY,GAAG;AACnBD,MAAAA,KAAK,EAAEF,QAAQ,EADI;AAEnBS,MAAAA,WAAW,EAAEV,oBAAoB,CAACa,OAAD;AAFd,KAArB;AAIAd,IAAAA,YAAY,CAACM,IAAb,GAAoBW,GAApB,CAAwBZ,YAAxB;AACAO,IAAAA,OAAO,CAACX,oBAAoB,CAACa,OAAD,CAArB,CAAP;AACD,GARD;;AASA,SAAO,CAACR,IAAD,EAAOO,YAAP,CAAP;AACD,CApBM;;GAAMV,U","sourcesContent":["import { useState } from \"react\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { changeFormatYYYYMMDD, getToday } from \"../../tools/time\";\n\nexport const useSetDate = () => {\n  const today = getToday();\n  let localDateObj;\n  if (!LocalStroage.date().isEmpty()) localDateObj = LocalStroage.date().get();\n  const initVal = changeFormatYYYYMMDD(\n    localDateObj && localDateObj.today === today\n      ? new Date(localDateObj.clickedDate)\n      : new Date()\n  );\n  const [date, setDate] = useState(initVal);\n  const onUpdateDate = (dateObj) => {\n    console.log(dateObj, date);\n    const localDateObj = {\n      today: getToday(),\n      clickedDate: changeFormatYYYYMMDD(dateObj),\n    };\n    LocalStroage.date().set(localDateObj);\n    setDate(changeFormatYYYYMMDD(dateObj));\n  };\n  return [date, onUpdateDate];\n};\n"]},"metadata":{},"sourceType":"module"}