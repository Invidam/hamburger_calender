{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/AddWindow.js\",\n    _s = $RefreshSig$();\n\nimport { usePushWork } from \"../../../hooks/usePushWork\";\nimport { WorkList } from \"../WorkList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onSubmitWork = event => {\n  _s();\n\n  const validatorFun = workObj => {\n    return workObj.workName && workObj.workTime;\n  };\n\n  const {\n    workList,\n    onSubmitWork\n  } = usePushWork(validatorFun);\n};\n\n_s(onSubmitWork, \"mhUmvo1cDQcy2u3pGf3cd0EwaDE=\", false, function () {\n  return [usePushWork];\n});\n\nexport const onRecordTime = event => {\n  event.preventDefault();\n  const [hour, minute] = new Date().toTimeString().split(\":\");\n  console.log(\"INPUT VALUE: \", hour, minute);\n};\nexport const AddWorkWindow = () => {\n  localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitWork,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"workName\",\n      placeholder: \"\\uCD94\\uAC00\\uD560 \\uC791\\uC5C5\\uBA85\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"workTime\",\n      placeholder: \"\\uC791\\uC5C5 \\uC2DC\\uAC04\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}; // {\n\n/* <div>\n<button ref={bedTimeElem}>SUBMIT</button>\n<form onSubmit={onSubmitWork}>\n  <input type=\"text\" name=\"workName\" placeholder=\"추가할 작업명\"></input>\n  <input type=\"number\" name=\"workTime\" placeholder=\"작업 시간\"></input>\n  <button type=\"submit\">SUBMIT</button>\n</form>\n</div> */\n// }\n\n_c = AddWorkWindow;\nexport const AddWakeTimeWindow = () => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: WorkList.wakeTimeElem,\n    children: \"SUBMIT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n  /*\n  기상\n  작업\n  취침\n  \n  으로 3파트 나눠서 해야함.*/\n  ;\n};\n_c2 = AddWakeTimeWindow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddWorkWindow\");\n$RefreshReg$(_c2, \"AddWakeTimeWindow\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/AddWindow.js"],"names":["usePushWork","WorkList","onSubmitWork","event","validatorFun","workObj","workName","workTime","workList","onRecordTime","preventDefault","hour","minute","Date","toTimeString","split","console","log","AddWorkWindow","localStorage","setItem","JSON","stringify","AddWakeTimeWindow","wakeTimeElem"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,YAAY,GAAIC,OAAD,IAAa;AAChC,WAAOA,OAAO,CAACC,QAAR,IAAoBD,OAAO,CAACE,QAAnC;AACD,GAFD;;AAGA,QAAM;AAAEC,IAAAA,QAAF;AAAYN,IAAAA;AAAZ,MAA6BF,WAAW,CAACI,YAAD,CAA9C;AACD,CALD;;GAAMF,Y;UAI+BF,W;;;AAGrC,OAAO,MAAMS,YAAY,GAAIN,KAAD,IAAW;AACrCA,EAAAA,KAAK,CAACO,cAAN;AACA,QAAM,CAACC,IAAD,EAAOC,MAAP,IAAiB,IAAIC,IAAJ,GAAWC,YAAX,GAA0BC,KAA1B,CAAgC,GAAhC,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,IAA7B,EAAmCC,MAAnC;AACD,CAJM;AAKP,OAAO,MAAMM,aAAa,GAAG,MAAM;AACjCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAed,QAAf,CAAjC;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA,4BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,UAA1B;AAAqC,MAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVM,C,CAYP;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KArBagB,a;AAuBb,OAAO,MAAMK,iBAAiB,GAAG,MAAM;AACrC,sBACE;AAAQ,IAAA,GAAG,EAAEtB,QAAQ,CAACuB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AAPE;AASD,CAVM;MAAMD,iB","sourcesContent":["import { usePushWork } from \"../../../hooks/usePushWork\";\nimport { WorkList } from \"../WorkList\";\n\nconst onSubmitWork = (event) => {\n  const validatorFun = (workObj) => {\n    return workObj.workName && workObj.workTime;\n  };\n  const { workList, onSubmitWork } = usePushWork(validatorFun);\n};\n\nexport const onRecordTime = (event) => {\n  event.preventDefault();\n  const [hour, minute] = new Date().toTimeString().split(\":\");\n  console.log(\"INPUT VALUE: \", hour, minute);\n};\nexport const AddWorkWindow = () => {\n  localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return (\n    <form onSubmit={onSubmitWork}>\n      {/* {WorkList.workList} */}\n      <input type=\"text\" name=\"workName\" placeholder=\"추가할 작업명\"></input>\n      <input type=\"number\" name=\"workTime\" placeholder=\"작업 시간\"></input>\n      <button type=\"submit\">SUBMIT</button>\n    </form>\n  );\n};\n\n// {\n/* <div>\n<button ref={bedTimeElem}>SUBMIT</button>\n<form onSubmit={onSubmitWork}>\n  <input type=\"text\" name=\"workName\" placeholder=\"추가할 작업명\"></input>\n  <input type=\"number\" name=\"workTime\" placeholder=\"작업 시간\"></input>\n  <button type=\"submit\">SUBMIT</button>\n</form>\n</div> */\n// }\n\nexport const AddWakeTimeWindow = () => {\n  return (\n    <button ref={WorkList.wakeTimeElem}>SUBMIT</button>\n    /*\n    기상\n    작업\n    취침\n    \n    으로 3파트 나눠서 해야함.*/\n  );\n};\n"]},"metadata":{},"sourceType":"module"}