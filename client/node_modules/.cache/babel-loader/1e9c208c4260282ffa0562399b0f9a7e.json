{"ast":null,"code":"const asn1 = require('@panva/asn1.js');\n\nconst types = new Map();\nconst AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', require('./algorithm_identifier'));\ntypes.set('AlgorithmIdentifier', AlgorithmIdentifier);\nconst ECPrivateKey = asn1.define('ECPrivateKey', require('./ec_private_key'));\ntypes.set('ECPrivateKey', ECPrivateKey);\nconst PrivateKeyInfo = asn1.define('PrivateKeyInfo', require('./private_key_info')(AlgorithmIdentifier));\ntypes.set('PrivateKeyInfo', PrivateKeyInfo);\nconst PublicKeyInfo = asn1.define('PublicKeyInfo', require('./public_key_info')(AlgorithmIdentifier));\ntypes.set('PublicKeyInfo', PublicKeyInfo);\nconst PrivateKey = asn1.define('PrivateKey', require('./private_key'));\ntypes.set('PrivateKey', PrivateKey);\nconst OneAsymmetricKey = asn1.define('OneAsymmetricKey', require('./one_asymmetric_key')(AlgorithmIdentifier, PrivateKey));\ntypes.set('OneAsymmetricKey', OneAsymmetricKey);\nconst RSAPrivateKey = asn1.define('RSAPrivateKey', require('./rsa_private_key'));\ntypes.set('RSAPrivateKey', RSAPrivateKey);\nconst RSAPublicKey = asn1.define('RSAPublicKey', require('./rsa_public_key'));\ntypes.set('RSAPublicKey', RSAPublicKey);\nmodule.exports = types;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/jose/lib/help/asn1/index.js"],"names":["asn1","require","types","Map","AlgorithmIdentifier","define","set","ECPrivateKey","PrivateKeyInfo","PublicKeyInfo","PrivateKey","OneAsymmetricKey","RSAPrivateKey","RSAPublicKey","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AAEA,MAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;AAEA,MAAMC,mBAAmB,GAAGJ,IAAI,CAACK,MAAL,CAAY,qBAAZ,EAAmCJ,OAAO,CAAC,wBAAD,CAA1C,CAA5B;AACAC,KAAK,CAACI,GAAN,CAAU,qBAAV,EAAiCF,mBAAjC;AAEA,MAAMG,YAAY,GAAGP,IAAI,CAACK,MAAL,CAAY,cAAZ,EAA4BJ,OAAO,CAAC,kBAAD,CAAnC,CAArB;AACAC,KAAK,CAACI,GAAN,CAAU,cAAV,EAA0BC,YAA1B;AAEA,MAAMC,cAAc,GAAGR,IAAI,CAACK,MAAL,CAAY,gBAAZ,EAA8BJ,OAAO,CAAC,oBAAD,CAAP,CAA8BG,mBAA9B,CAA9B,CAAvB;AACAF,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BE,cAA5B;AAEA,MAAMC,aAAa,GAAGT,IAAI,CAACK,MAAL,CAAY,eAAZ,EAA6BJ,OAAO,CAAC,mBAAD,CAAP,CAA6BG,mBAA7B,CAA7B,CAAtB;AACAF,KAAK,CAACI,GAAN,CAAU,eAAV,EAA2BG,aAA3B;AAEA,MAAMC,UAAU,GAAGV,IAAI,CAACK,MAAL,CAAY,YAAZ,EAA0BJ,OAAO,CAAC,eAAD,CAAjC,CAAnB;AACAC,KAAK,CAACI,GAAN,CAAU,YAAV,EAAwBI,UAAxB;AAEA,MAAMC,gBAAgB,GAAGX,IAAI,CAACK,MAAL,CAAY,kBAAZ,EAAgCJ,OAAO,CAAC,sBAAD,CAAP,CAAgCG,mBAAhC,EAAqDM,UAArD,CAAhC,CAAzB;AACAR,KAAK,CAACI,GAAN,CAAU,kBAAV,EAA8BK,gBAA9B;AAEA,MAAMC,aAAa,GAAGZ,IAAI,CAACK,MAAL,CAAY,eAAZ,EAA6BJ,OAAO,CAAC,mBAAD,CAApC,CAAtB;AACAC,KAAK,CAACI,GAAN,CAAU,eAAV,EAA2BM,aAA3B;AAEA,MAAMC,YAAY,GAAGb,IAAI,CAACK,MAAL,CAAY,cAAZ,EAA4BJ,OAAO,CAAC,kBAAD,CAAnC,CAArB;AACAC,KAAK,CAACI,GAAN,CAAU,cAAV,EAA0BO,YAA1B;AAEAC,MAAM,CAACC,OAAP,GAAiBb,KAAjB","sourcesContent":["const asn1 = require('@panva/asn1.js')\n\nconst types = new Map()\n\nconst AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', require('./algorithm_identifier'))\ntypes.set('AlgorithmIdentifier', AlgorithmIdentifier)\n\nconst ECPrivateKey = asn1.define('ECPrivateKey', require('./ec_private_key'))\ntypes.set('ECPrivateKey', ECPrivateKey)\n\nconst PrivateKeyInfo = asn1.define('PrivateKeyInfo', require('./private_key_info')(AlgorithmIdentifier))\ntypes.set('PrivateKeyInfo', PrivateKeyInfo)\n\nconst PublicKeyInfo = asn1.define('PublicKeyInfo', require('./public_key_info')(AlgorithmIdentifier))\ntypes.set('PublicKeyInfo', PublicKeyInfo)\n\nconst PrivateKey = asn1.define('PrivateKey', require('./private_key'))\ntypes.set('PrivateKey', PrivateKey)\n\nconst OneAsymmetricKey = asn1.define('OneAsymmetricKey', require('./one_asymmetric_key')(AlgorithmIdentifier, PrivateKey))\ntypes.set('OneAsymmetricKey', OneAsymmetricKey)\n\nconst RSAPrivateKey = asn1.define('RSAPrivateKey', require('./rsa_private_key'))\ntypes.set('RSAPrivateKey', RSAPrivateKey)\n\nconst RSAPublicKey = asn1.define('RSAPublicKey', require('./rsa_public_key'))\ntypes.set('RSAPublicKey', RSAPublicKey)\n\nmodule.exports = types\n"]},"metadata":{},"sourceType":"script"}