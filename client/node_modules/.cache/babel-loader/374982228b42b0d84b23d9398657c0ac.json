{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/work/Work.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { useEditWork } from \"../../../../hooks/useEditWork\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  }\n};\nexport const Work = ({\n  workItem,\n  workList,\n  key,\n  idx\n}) => {\n  _s();\n\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n\n  const openEditModal = () => setEditModalIsOpen(true);\n\n  const closeEditModal = event => setEditModalIsOpen(false);\n\n  const {\n    workListEdit = workList,\n    onEditColor,\n    onEditWork\n  } = useEditWork(workList, closeEditModal);\n\n  const editWorkWindow = /*#__PURE__*/_jsxDEV(EditWorkWindow, {\n    workList: workList,\n    idx: idx,\n    onEditColor: onEditColor,\n    onEditWork: onEditWork\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"workList__work tooltip\",\n      style: {\n        backgroundColor: workItem.workColor\n      },\n      onClick: openEditModal,\n      children: [workItem.workName, \" \", workItem.workTime, \"h\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tooltip-content\",\n        children: [workItem.workName, \" \", workItem.workTime, \"h\"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), editModal(idx), idx]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Work, \"/cal26WPZHCcBvXpM6bzAILCTu0=\", false, function () {\n  return [useEditWork];\n});\n\n_c = Work;\n\nvar _c;\n\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/work/Work.js"],"names":["useState","Modal","useEditWork","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","overlay","position","Work","workItem","workList","key","idx","editModalIsOpen","setEditModalIsOpen","openEditModal","closeEditModal","event","workListEdit","onEditColor","onEditWork","editWorkWindow","workColor","workName","workTime","editModal"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AACAD,KAAK,CAACE,aAAN,CAAoB,OAApB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,GAAG,EAAE,KAFE;AAGPC,IAAAA,IAAI,EAAE,KAHC;AAIPC,IAAAA,KAAK,EAAE,MAJA;AAKPC,IAAAA,MAAM,EAAE,MALD;AAMPC,IAAAA,WAAW,EAAE,MANN;AAOPC,IAAAA,SAAS,EAAE,uBAPJ;AAQPC,IAAAA,eAAe,EAAE,oBARV;AASPC,IAAAA,MAAM,EAAE;AATD,GADU;AAYnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,OADH;AAEPT,IAAAA,GAAG,EAAE,CAFE;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPG,IAAAA,eAAe,EAAE;AANV;AAZU,CAArB;AAqBA,OAAO,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,GAAtB;AAA2BC,EAAAA;AAA3B,CAAD,KAAsC;AAAA;;AACxD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,KAAD,CAAtD;;AACA,QAAMuB,aAAa,GAAG,MAAMD,kBAAkB,CAAC,IAAD,CAA9C;;AACA,QAAME,cAAc,GAAIC,KAAD,IAAWH,kBAAkB,CAAC,KAAD,CAApD;;AAEA,QAAM;AACJI,IAAAA,YAAY,GAAGR,QADX;AAEJS,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIF1B,WAAW,CAACgB,QAAD,EAAWM,cAAX,CAJf;;AAMA,QAAMK,cAAc,gBAClB,QAAC,cAAD;AACE,IAAA,QAAQ,EAAEX,QADZ;AAEE,IAAA,GAAG,EAAEE,GAFP;AAGE,IAAA,WAAW,EAAEO,WAHf;AAIE,IAAA,UAAU,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,KAAK,EAAE;AAAEhB,QAAAA,eAAe,EAAEK,QAAQ,CAACa;AAA5B,OAFT;AAIE,MAAA,OAAO,EAAEP,aAJX;AAAA,iBAMGN,QAAQ,CAACc,QANZ,OAMuBd,QAAQ,CAACe,QANhC,oBAOE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA,mBACGf,QAAQ,CAACc,QADZ,OACuBd,QAAQ,CAACe,QADhC;AAAA,SAAuCZ,GAAvC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAGOA,GAHP;AAAA;AAAA;AAAA;AAAA,YADF,EAYGa,SAAS,CAACb,GAAD,CAZZ,EAaGA,GAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArCM;;GAAMJ,I;UASPd,W;;;KATOc,I","sourcesContent":["import { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { useEditWork } from \"../../../../hooks/useEditWork\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\nexport const Work = ({ workItem, workList, key, idx }) => {\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const openEditModal = () => setEditModalIsOpen(true);\n  const closeEditModal = (event) => setEditModalIsOpen(false);\n\n  const {\n    workListEdit = workList,\n    onEditColor,\n    onEditWork,\n  } = useEditWork(workList, closeEditModal);\n\n  const editWorkWindow = (\n    <EditWorkWindow\n      workList={workList}\n      idx={idx}\n      onEditColor={onEditColor}\n      onEditWork={onEditWork}\n    />\n  );\n\n  return (\n    <div>\n      <li\n        className=\"workList__work tooltip\"\n        style={{ backgroundColor: workItem.workColor }}\n        key={idx}\n        onClick={openEditModal}\n      >\n        {workItem.workName} {workItem.workTime}h\n        <span className=\"tooltip-content\" key={idx}>\n          {workItem.workName} {workItem.workTime}h\n        </span>\n      </li>\n      {editModal(idx)}\n      {idx}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}