{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/workListComponent.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport { usePushWork } from \"../../hooks/usePushWork\";\nimport { AddWorkWindow } from \"./window/AddWindow\";\nimport { WorkList } from \"./WorkList\";\nimport { WorkListTemplate } from \"./WorkListTemplate\";\nimport { useEditWork } from \"../../hooks/useEditWork\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  }\n};\nexport const WorkListComponent = () => {\n  _s();\n\n  let {\n    workList,\n    onSubmitColor,\n    onSubmitWork\n  } = usePushWork(closeAddModal);\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n\n  const openAddModal = () => {\n    console.log(\"OPEN\", addModalIsOpen);\n    setAddModalIsOpen(true);\n    console.log(\"OPEN\", addModalIsOpen);\n  };\n\n  const closeAddModal = () => {\n    console.log(\"CLOSE1\", addModalIsOpen);\n    setAddModalIsOpen(false);\n    console.log(\"CLOSE2\", addModalIsOpen);\n  };\n\n  const {\n    workListEdit = workList,\n    onEditColor,\n    onEditWork\n  } = useEditWork(workList);\n  workList = workListEdit;\n\n  const addWorkWindow = /*#__PURE__*/_jsxDEV(AddWorkWindow, {\n    workList: workList,\n    onSubmitColor: onSubmitColor,\n    onSubmitWork: onSubmitWork\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  const addModal = /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: addModalIsOpen,\n    onRequestClose: closeAddModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    overlayClassName: \"Overlay\",\n    children: [addWorkWindow, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addWindow__close addWindow__btn\",\n      onClick: closeAddModal,\n      children: [\" \", \"CLOSE\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  console.log(\"In worklist, list: \", workList);\n\n  const workListDisplay = /*#__PURE__*/_jsxDEV(WorkList, {\n    workList: workList,\n    addWorkWindow: addWorkWindow,\n    modal: addModal,\n    openModal: openAddModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n    workList: workListDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n\n_s(WorkListComponent, \"TuLrVuAA9eMpzUEgiJyXbHeZV+I=\", false, function () {\n  return [usePushWork, useEditWork];\n});\n\n_c = WorkListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListComponent\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/workListComponent.js"],"names":["Modal","useState","usePushWork","AddWorkWindow","WorkList","WorkListTemplate","useEditWork","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","overlay","position","WorkListComponent","workList","onSubmitColor","onSubmitWork","closeAddModal","addModalIsOpen","setAddModalIsOpen","openAddModal","console","log","workListEdit","onEditColor","onEditWork","addWorkWindow","addModal","workListDisplay"],"mappings":"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","sourcesContent":["import Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport { usePushWork } from \"../../hooks/usePushWork\";\nimport { AddWorkWindow } from \"./window/AddWindow\";\nimport { WorkList } from \"./WorkList\";\nimport { WorkListTemplate } from \"./WorkListTemplate\";\nimport { useEditWork } from \"../../hooks/useEditWork\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\n\nexport const WorkListComponent = () => {\n  let { workList, onSubmitColor, onSubmitWork } = usePushWork(closeAddModal);\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n  const openAddModal = () => {\n    console.log(\"OPEN\", addModalIsOpen);\n    setAddModalIsOpen(true);\n    console.log(\"OPEN\", addModalIsOpen);\n  };\n  const closeAddModal = () => {\n    console.log(\"CLOSE1\", addModalIsOpen);\n    setAddModalIsOpen(false);\n    console.log(\"CLOSE2\", addModalIsOpen);\n  };\n  const {\n    workListEdit = workList,\n    onEditColor,\n    onEditWork,\n  } = useEditWork(workList);\n  workList = workListEdit;\n  const addWorkWindow = (\n    <AddWorkWindow\n      workList={workList}\n      onSubmitColor={onSubmitColor}\n      onSubmitWork={onSubmitWork}\n    />\n  );\n  const addModal = (\n    <Modal\n      isOpen={addModalIsOpen}\n      onRequestClose={closeAddModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      overlayClassName=\"Overlay\"\n    >\n      {addWorkWindow}\n      <button\n        className=\"addWindow__close addWindow__btn\"\n        onClick={closeAddModal}\n      >\n        {\" \"}\n        CLOSE\n      </button>\n    </Modal>\n  );\n\n  console.log(\"In worklist, list: \", workList);\n  const workListDisplay = (\n    <WorkList\n      workList={workList}\n      addWorkWindow={addWorkWindow}\n      modal={addModal}\n      openModal={openAddModal}\n    />\n  );\n  return <WorkListTemplate workList={workListDisplay} />;\n};\n"]},"metadata":{},"sourceType":"module"}