{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/work/EmptyWork.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../../../../css/modam.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmptyWork = ({\n  workList,\n  setWorkList\n}) => {\n  _s();\n\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n\n  const openAddModal = () => setAddModalIsOpen(true);\n\n  const closeAddModal = () => setAddModalIsOpen(false);\n\n  const {\n    onSubmitColor,\n    onSubmitWork\n  } = usePushWork(workList, setWorkList, closeAddModal);\n\n  const addWorkWindow = /*#__PURE__*/_jsxDEV(AddWorkWindow, {\n    workList: workList,\n    onSubmitColor: onSubmitColor,\n    onSubmitWork: onSubmitWork\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  const addModal = /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: addModalIsOpen,\n    onRequestClose: closeAddModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    overlayClassName: \"Overlay\",\n    children: [addWorkWindow, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modalWindow__close modalWindow__btn\",\n      onClick: closeAddModal,\n      children: \"CLOSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"empty-element workList__element-empty\",\n      onClick: openAddModal,\n      children: \"Add your work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), addModal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmptyWork, \"qadkCCUTOcRUSJrVHFwINEAgdX4=\", true);\n\n_c = EmptyWork;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmptyWork\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/work/EmptyWork.js"],"names":["useState","EmptyWork","workList","setWorkList","addModalIsOpen","setAddModalIsOpen","openAddModal","closeAddModal","onSubmitColor","onSubmitWork","usePushWork","addWorkWindow","addModal","customStyles"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,2BAAP;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAAA;;AACtD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,KAAD,CAApD;;AACA,QAAMM,YAAY,GAAG,MAAMD,iBAAiB,CAAC,IAAD,CAA5C;;AACA,QAAME,aAAa,GAAG,MAAMF,iBAAiB,CAAC,KAAD,CAA7C;;AAEA,QAAM;AAAEG,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAkCC,WAAW,CACjDR,QADiD,EAEjDC,WAFiD,EAGjDI,aAHiD,CAAnD;;AAMA,QAAMI,aAAa,gBACjB,QAAC,aAAD;AACE,IAAA,QAAQ,EAAET,QADZ;AAEE,IAAA,aAAa,EAAEM,aAFjB;AAGE,IAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,QAAMG,QAAQ,gBACZ,QAAC,KAAD;AACE,IAAA,MAAM,EAAER,cADV;AAEE,IAAA,cAAc,EAAEG,aAFlB;AAGE,IAAA,KAAK,EAAEM,YAHT;AAIE,IAAA,YAAY,EAAC,eAJf;AAKE,IAAA,gBAAgB,EAAC,SALnB;AAAA,eAOGF,aAPH,eAQE;AACE,MAAA,SAAS,EAAC,qCADZ;AAEE,MAAA,OAAO,EAAEJ,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAE,uCADb;AAEE,MAAA,OAAO,EAAED,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGM,QAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9CM;;GAAMX,S;;KAAAA,S","sourcesContent":["import { useState } from \"react\";\nimport \"../../../../css/modam.css\";\n\nexport const EmptyWork = ({ workList, setWorkList }) => {\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n  const openAddModal = () => setAddModalIsOpen(true);\n  const closeAddModal = () => setAddModalIsOpen(false);\n\n  const { onSubmitColor, onSubmitWork } = usePushWork(\n    workList,\n    setWorkList,\n    closeAddModal\n  );\n\n  const addWorkWindow = (\n    <AddWorkWindow\n      workList={workList}\n      onSubmitColor={onSubmitColor}\n      onSubmitWork={onSubmitWork}\n    />\n  );\n  const addModal = (\n    <Modal\n      isOpen={addModalIsOpen}\n      onRequestClose={closeAddModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      overlayClassName=\"Overlay\"\n    >\n      {addWorkWindow}\n      <button\n        className=\"modalWindow__close modalWindow__btn\"\n        onClick={closeAddModal}\n      >\n        CLOSE\n      </button>\n    </Modal>\n  );\n  return (\n    <div>\n      <li\n        className={\"empty-element workList__element-empty\"}\n        onClick={openAddModal}\n      >\n        Add your work\n      </li>\n      {addModal}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}