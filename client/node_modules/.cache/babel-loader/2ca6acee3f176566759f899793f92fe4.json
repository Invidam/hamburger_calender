{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/elements/Todo.js\",\n    _s = $RefreshSig$();\n\n// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { TodoInput } from \"./TodoInput\";\nimport { TodoDisplay } from \"./TodoDisplay\";\nimport { TodoExpired } from \"./TodoExpired\"; // const checkElement = (\n//   <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = ({\n  setTodo,\n  _isEditMode,\n  todoItem,\n  id,\n  idx\n}) => {\n  _s();\n\n  const todoHook = useTodo(setTodo, todoItem, _isEditMode, idx);\n  const isEditMode = todoHook[0];\n  const today = getToday();\n  const isExpired = (todoItem === null || todoItem === void 0 ? void 0 : todoItem.date) < today;\n  console.log(\"TODO ITEM\", id, todoItem, (todoItem === null || todoItem === void 0 ? void 0 : todoItem.date) < \"2021-11-05\");\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditMode ? /*#__PURE__*/_jsxDEV(TodoInput, {\n      todoHook: todoHook,\n      id: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : isExpired ? /*#__PURE__*/_jsxDEV(TodoExpired, {\n      todoHook: todoHook,\n      id: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TodoDisplay, {\n      todoHook: todoHook,\n      id: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, \"_\" + (todoItem === null || todoItem === void 0 ? void 0 : todoItem.id), false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}; // const inputBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button\n//       className=\"todo__btn todo__btn-add\"\n//       onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n//     >\n//       {isSubmitMode ? \"+\" : \"Save\"}\n//     </button>\n//   </div>\n// );\n// const displayBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n//       E\n//     </button>\n//     <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n//       X\n//     </button>\n//   </div>\n// );\n// const inputElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n//     <input\n//       className=\"todo__text todo-input__text todo__content todo-input__content\"\n//       type=\"text\"\n//       autoComplete=\"off\"\n//       name=\"todoText\"\n//       defaultValue={todoItem?.text}\n//       onChange={({ target: { value } }) => onChangeText(value)}\n//     ></input>\n//     {/* <input\n//       className=\"todo-input__date todo-input__content\"\n//       type=\"date\"\n//       name=\"todoDate\"\n//       lang=\"en-us\"\n//       required\n//       pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n//       defaultValue={isEditMode ? todoItem?.date : undefined}\n//       min={getToday()}\n//       onChange={({ target: { value } }) => onChangeDate(value)}\n//     ></input> */}\n//     <DatePick\n//       isEditMode={isEditMode}\n//       date={date}\n//       onChangeDate={onChangeDate}\n//     />\n//     {/* <input\n//       className=\"todo-input__priority todo-input__content\"\n//       type=\"text\"\n//       name=\"todoPriority\"\n//       defaultValue={todoItem?.priority}\n//       onChange={({ target: { value } }) => onChangePriority(value)}\n//     ></input> */}\n//     <div className={`todo__star-rating todo-input__star `}>\n//       <StarRatings\n//         // rating={todoItem?.priority}\n//         starRatedColor=\"rgba(241, 196, 15,0.8)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         changeRating={onChangePriority}\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {inputBtn}\n//   </div>\n// );\n// const displayElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n//       {todoItem?.text}\n//     </span>\n//     <DatePick date={date} isEditMode={isEditMode} />\n//     <div className={`todo__star-rating todo-display__star}`}>\n//       <StarRatings\n//         starRatedColor=\"rgba(241, 196, 15,1.0)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {displayBtn}\n//   </div>\n// );\n\n_s(Todo, \"v48Rar5zPE6lqWK7EzYMrH/vDWM=\", false, function () {\n  return [useTodo];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/elements/Todo.js"],"names":["useTodo","getToday","faCheck","FontAwesomeIcon","TodoInput","TodoDisplay","TodoExpired","Todo","setTodo","_isEditMode","todoItem","id","idx","todoHook","isEditMode","today","isExpired","date","console","log"],"mappings":";;;AAAA;AACA,SAASA,OAAT,QAAwB,iCAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CACA;AACA;AACA;;;AACA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,EAAlC;AAAsCC,EAAAA;AAAtC,CAAD,KAAiD;AAAA;;AACnE,QAAMC,QAAQ,GAAGb,OAAO,CAACQ,OAAD,EAAUE,QAAV,EAAoBD,WAApB,EAAiCG,GAAjC,CAAxB;AACA,QAAME,UAAU,GAAGD,QAAQ,CAAC,CAAD,CAA3B;AACA,QAAME,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAMe,SAAS,GAAG,CAAAN,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEO,IAAV,IAAiBF,KAAnC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,EAAzB,EAA6BD,QAA7B,EAAuC,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEO,IAAV,IAAiB,YAAxD;AACA,sBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cACGH,UAAU,gBACT,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,QAArB;AAAwC,MAAA,EAAE,EAAEF;AAA5C,OAAoCA,EAApC;AAAA;AAAA;AAAA;AAAA,YADS,GAEPK,SAAS,gBACX,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH,QAAvB;AAA0C,MAAA,EAAE,EAAEF;AAA9C,OAAsCA,EAAtC;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEE,QAAvB;AAA0C,MAAA,EAAE,EAAEF;AAA9C,OAAsCA,EAAtC;AAAA;AAAA;AAAA;AAAA;AANJ,KAA0B,OAAMD,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAEC,EAAhB,CAA1B;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBM,C,CAmrIaJ,I;UACMP,O;;;KADNO,I","sourcesContent":["// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { TodoInput } from \"./TodoInput\";\nimport { TodoDisplay } from \"./TodoDisplay\";\nimport { TodoExpired } from \"./TodoExpired\";\n// const checkElement = (\n//   <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n// );\nexport const Todo = ({ setTodo, _isEditMode, todoItem, id, idx }) => {\n  const todoHook = useTodo(setTodo, todoItem, _isEditMode, idx);\n  const isEditMode = todoHook[0];\n  const today = getToday();\n  const isExpired = todoItem?.date < today;\n  console.log(\"TODO ITEM\", id, todoItem, todoItem?.date < \"2021-11-05\");\n  return (\n    <li className=\"todo\" key={\"_\" + todoItem?.id}>\n      {isEditMode ? (\n        <TodoInput todoHook={todoHook} key={id} id={id} />\n      ) : isExpired ? (\n        <TodoExpired todoHook={todoHook} key={id} id={id} />\n      ) : (\n        <TodoDisplay todoHook={todoHook} key={id} id={id} />\n      )}\n    </li>\n  );\n};\n\n// const inputBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button\n//       className=\"todo__btn todo__btn-add\"\n//       onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n//     >\n//       {isSubmitMode ? \"+\" : \"Save\"}\n//     </button>\n//   </div>\n// );\n// const displayBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n//       E\n//     </button>\n//     <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n//       X\n//     </button>\n//   </div>\n// );\n// const inputElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n//     <input\n//       className=\"todo__text todo-input__text todo__content todo-input__content\"\n//       type=\"text\"\n//       autoComplete=\"off\"\n//       name=\"todoText\"\n//       defaultValue={todoItem?.text}\n//       onChange={({ target: { value } }) => onChangeText(value)}\n//     ></input>\n//     {/* <input\n//       className=\"todo-input__date todo-input__content\"\n//       type=\"date\"\n//       name=\"todoDate\"\n//       lang=\"en-us\"\n//       required\n//       pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n//       defaultValue={isEditMode ? todoItem?.date : undefined}\n//       min={getToday()}\n//       onChange={({ target: { value } }) => onChangeDate(value)}\n//     ></input> */}\n//     <DatePick\n//       isEditMode={isEditMode}\n//       date={date}\n//       onChangeDate={onChangeDate}\n//     />\n//     {/* <input\n//       className=\"todo-input__priority todo-input__content\"\n//       type=\"text\"\n//       name=\"todoPriority\"\n//       defaultValue={todoItem?.priority}\n//       onChange={({ target: { value } }) => onChangePriority(value)}\n//     ></input> */}\n//     <div className={`todo__star-rating todo-input__star `}>\n//       <StarRatings\n//         // rating={todoItem?.priority}\n//         starRatedColor=\"rgba(241, 196, 15,0.8)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         changeRating={onChangePriority}\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {inputBtn}\n//   </div>\n// );\n\n// const displayElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n//       {todoItem?.text}\n//     </span>\n//     <DatePick date={date} isEditMode={isEditMode} />\n//     <div className={`todo__star-rating todo-display__star}`}>\n//       <StarRatings\n//         starRatedColor=\"rgba(241, 196, 15,1.0)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {displayBtn}\n//   </div>\n// );\n"]},"metadata":{},"sourceType":"module"}