{"ast":null,"code":"\"use strict\"; // Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapperFromProto3JSON = exports.wrapperToProto3JSON = void 0;\n\nconst assert = require(\"assert\");\n\nconst bytes_1 = require(\"./bytes\");\n\nfunction wrapperToProto3JSON(obj) {\n  if (!Object.prototype.hasOwnProperty.call(obj, 'value')) {\n    return null;\n  }\n\n  if (Buffer.isBuffer(obj.value) || obj.value instanceof Uint8Array) {\n    return bytes_1.bytesToProto3JSON(obj.value);\n  }\n\n  if (typeof obj.value === 'object') {\n    assert(obj.value.constructor.name === 'Long', `wrapperToProto3JSON: expected to see a number, a string, a boolean, or a Long, but got ${obj.value}`);\n    return obj.value.toString();\n  }\n\n  return obj.value;\n}\n\nexports.wrapperToProto3JSON = wrapperToProto3JSON;\n\nfunction wrapperFromProto3JSON(typeName, json) {\n  if (json === null) {\n    return {\n      value: null\n    };\n  }\n\n  if (typeName === '.google.protobuf.BytesValue') {\n    if (typeof json !== 'string') {\n      throw new Error(`numberWrapperFromProto3JSON: expected to get a string for google.protobuf.BytesValue but got ${typeof json}`);\n    }\n\n    return {\n      value: bytes_1.bytesFromProto3JSON(json)\n    };\n  }\n\n  return {\n    value: json\n  };\n}\n\nexports.wrapperFromProto3JSON = wrapperFromProto3JSON;","map":{"version":3,"sources":["../../typescript/src/wrappers.ts"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAmBA,SAAgB,mBAAhB,CACE,GADF,EAC8E;AAE5E,MAAI,CAAC,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,OAA1C,CAAL,EAAyD;AACvD,WAAO,IAAP;AACD;;AACD,MAAI,MAAM,CAAC,QAAP,CAAgB,GAAG,CAAC,KAApB,KAA8B,GAAG,CAAC,KAAJ,YAAqB,UAAvD,EAAmE;AACjE,WAAO,OAAA,CAAA,iBAAA,CAAkB,GAAG,CAAC,KAAtB,CAAP;AACD;;AACD,MAAI,OAAO,GAAG,CAAC,KAAX,KAAqB,QAAzB,EAAmC;AACjC,IAAA,MAAM,CACJ,GAAG,CAAC,KAAJ,CAAU,WAAV,CAAsB,IAAtB,KAA+B,MAD3B,EAEJ,0FAA0F,GAAG,CAAC,KAAK,EAF/F,CAAN;AAIA,WAAQ,GAAG,CAAC,KAAJ,CAAuB,QAAvB,EAAR;AACD;;AACD,SAAO,GAAG,CAAC,KAAX;AACD;;AAjBD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAmBA,SAAgB,qBAAhB,CACE,QADF,EAEE,IAFF,EAEwC;AAEtC,MAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,WAAO;AACL,MAAA,KAAK,EAAE;AADF,KAAP;AAGD;;AACD,MAAI,QAAQ,KAAK,6BAAjB,EAAgD;AAC9C,QAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAM,IAAI,KAAJ,CACJ,gGAAgG,OAAO,IAAI,EADvG,CAAN;AAGD;;AACD,WAAO;AACL,MAAA,KAAK,EAAE,OAAA,CAAA,mBAAA,CAAoB,IAApB;AADF,KAAP;AAGD;;AACD,SAAO;AACL,IAAA,KAAK,EAAE;AADF,GAAP;AAGD;;AAtBD,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapperFromProto3JSON = exports.wrapperToProto3JSON = void 0;\nconst assert = require(\"assert\");\nconst bytes_1 = require(\"./bytes\");\nfunction wrapperToProto3JSON(obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, 'value')) {\n        return null;\n    }\n    if (Buffer.isBuffer(obj.value) || obj.value instanceof Uint8Array) {\n        return bytes_1.bytesToProto3JSON(obj.value);\n    }\n    if (typeof obj.value === 'object') {\n        assert(obj.value.constructor.name === 'Long', `wrapperToProto3JSON: expected to see a number, a string, a boolean, or a Long, but got ${obj.value}`);\n        return obj.value.toString();\n    }\n    return obj.value;\n}\nexports.wrapperToProto3JSON = wrapperToProto3JSON;\nfunction wrapperFromProto3JSON(typeName, json) {\n    if (json === null) {\n        return {\n            value: null,\n        };\n    }\n    if (typeName === '.google.protobuf.BytesValue') {\n        if (typeof json !== 'string') {\n            throw new Error(`numberWrapperFromProto3JSON: expected to get a string for google.protobuf.BytesValue but got ${typeof json}`);\n        }\n        return {\n            value: bytes_1.bytesFromProto3JSON(json),\n        };\n    }\n    return {\n        value: json,\n    };\n}\nexports.wrapperFromProto3JSON = wrapperFromProto3JSON;\n//# sourceMappingURL=wrappers.js.map"]},"metadata":{},"sourceType":"script"}