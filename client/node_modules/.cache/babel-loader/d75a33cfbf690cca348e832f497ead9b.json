{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/client/src/components/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport \"../../css/pages/pages.css\";\nimport { useAttemptLogin } from \"../../hooks/user/useAttemptLogin\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { LoadingElement } from \"../Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst element = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faGithub\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 17\n}, this);\n\nexport const LoginPage = ({\n  customLoginHook,\n  history,\n  location\n}) => {\n  _s();\n\n  const [,,, login] = customLoginHook;\n  const {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    handleSubmitNotSocial,\n    authUrl,\n    isLoginPageLoading\n  } = useAttemptLogin(login, history);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"page\",\n    children: isLoginPageLoading ? /*#__PURE__*/_jsxDEV(LoadingElement, {\n      text: \"LoginPage Loading. . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"url: \", authUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"page-input-box__input page-input-box__input-email\",\n        value: email,\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setEmail(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"page-input-box__input page-input-box__input-password\",\n        value: password,\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setPassword(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-input-box__btn page-input-box__btn-login\",\n        onClick: handleSubmitNotSocial,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"page-input-box__btn page-input-box__btn-github\",\n        href: authUrl,\n        children: [element, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"page-input-box__btn-text\",\n          children: \" Github Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"Ir/wh6NtxzbnLZNORLNO+2/UJRs=\", false, function () {\n  return [useAttemptLogin];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/components/pages/LoginPage.js"],"names":["useAttemptLogin","FontAwesomeIcon","faGithub","LoadingElement","element","LoginPage","customLoginHook","history","location","login","email","password","setEmail","setPassword","handleSubmitNotSocial","authUrl","isLoginPageLoading","target","value"],"mappings":";;;AAAA,OAAO,2BAAP;AACA,SAASA,eAAT,QAAgC,kCAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,OAAO,gBAAG,QAAC,eAAD;AAAiB,EAAA,IAAI,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,QAAhB;;AAEA,OAAO,MAAMG,SAAS,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AACnE,QAAM,KAAOC,KAAP,IAAgBH,eAAtB;AAEA,QAAM;AACJI,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,qBALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA;AAPI,MAQFhB,eAAe,CAACS,KAAD,EAAQF,OAAR,CARnB;AASA,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,cACGS,kBAAkB,gBACjB,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,YADiB,gBAGjB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4BAAUD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,SAAS,EAAC,mDADZ;AAEE,QAAA,KAAK,EAAEL,KAFT;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,OAJd;AAKE,QAAA,QAAQ,EAAE,CAAC;AAAEO,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV,SAAD,KAA2BN,QAAQ,CAACM,KAAD;AAL/C;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE;AACE,QAAA,SAAS,EAAC,sDADZ;AAEE,QAAA,KAAK,EAAEP,QAFT;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,WAAW,EAAC,UAJd;AAKE,QAAA,QAAQ,EAAE,CAAC;AAAEM,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV,SAAD,KAA2BL,WAAW,CAACK,KAAD;AALlD;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE;AACE,QAAA,SAAS,EAAC,+CADZ;AAEE,QAAA,OAAO,EAAEJ,qBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAuBE;AACE,QAAA,SAAS,EAAC,gDADZ;AAEE,QAAA,IAAI,EAAEC,OAFR;AAAA,mBAIGX,OAJH,EAIY,GAJZ,eAKE;AAAM,UAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAnDM;;GAAMC,S;UAWPL,e;;;KAXOK,S","sourcesContent":["import \"../../css/pages/pages.css\";\nimport { useAttemptLogin } from \"../../hooks/user/useAttemptLogin\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { LoadingElement } from \"../Loading\";\n\nconst element = <FontAwesomeIcon icon={faGithub} />;\n\nexport const LoginPage = ({ customLoginHook, history, location }) => {\n  const [, , , login] = customLoginHook;\n\n  const {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    handleSubmitNotSocial,\n    authUrl,\n    isLoginPageLoading,\n  } = useAttemptLogin(login, history);\n  return (\n    <section className=\"page\">\n      {isLoginPageLoading ? (\n        <LoadingElement text={\"LoginPage Loading. . .\"} />\n      ) : (\n        <div className=\"page-input-box\">\n          <h1>Login Page</h1>\n          <h2>url: {authUrl}</h2>\n          <input\n            className=\"page-input-box__input page-input-box__input-email\"\n            value={email}\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={({ target: { value } }) => setEmail(value)}\n          />\n          <input\n            className=\"page-input-box__input page-input-box__input-password\"\n            value={password}\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={({ target: { value } }) => setPassword(value)}\n          />\n          <button\n            className=\"page-input-box__btn page-input-box__btn-login\"\n            onClick={handleSubmitNotSocial}\n          >\n            Login\n          </button>\n          <a\n            className=\"page-input-box__btn page-input-box__btn-github\"\n            href={authUrl}\n          >\n            {element}{\" \"}\n            <span className=\"page-input-box__btn-text\"> Github Login</span>\n          </a>\n        </div>\n      )}\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}