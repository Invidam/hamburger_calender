{"ast":null,"code":"import axios from \"axios\";\nexport const getCustomConfig = () => {\n  const token = localStorage.getItem(\"access_token\");\n  const config = {\n    headers: {\n      \"x-access-token\": token\n    }\n  };\n  return config;\n};\nexport let API = axios.create(getCustomConfig());\nAPI.interceptors.response.use(res => {\n  return res;\n}, e => {\n  var _e$response;\n\n  console.log(\"ERR\", e === null || e === void 0 ? void 0 : e.response);\n\n  if ((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 401) {\n    var _e$response2;\n\n    console.log(\"ER1ROR: \", e.response); // alert();\n\n    throw new Error(`401 - Unauthorized\\n${(_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data}`);\n  }\n\n  return Promise.reject(e);\n});\nexport const updateAPIHeader = () => {\n  API = axios.create(getCustomConfig());\n};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/tools/axiosSetting.js"],"names":["axios","getCustomConfig","token","localStorage","getItem","config","headers","API","create","interceptors","response","use","res","e","console","log","status","Error","data","Promise","reject","updateAPIHeader"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,wBAAkBJ;AAApB;AADI,GAAf;AAGA,SAAOG,MAAP;AACD,CANM;AAQP,OAAO,IAAIE,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAaP,eAAe,EAA5B,CAAV;AAEPM,GAAG,CAACE,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACGC,GAAD,IAAS;AACP,SAAOA,GAAP;AACD,CAHH,EAIGC,CAAD,IAAO;AAAA;;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,CAAnB,aAAmBA,CAAnB,uBAAmBA,CAAC,CAAEH,QAAtB;;AACA,MAAI,CAAAG,CAAC,SAAD,IAAAA,CAAC,WAAD,2BAAAA,CAAC,CAAEH,QAAH,4DAAaM,MAAb,MAAwB,GAA5B,EAAiC;AAAA;;AAC/BF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,CAAC,CAACH,QAA1B,EAD+B,CAE/B;;AACA,UAAM,IAAIO,KAAJ,CAAW,uBAAD,gBAAuBJ,CAAC,CAACH,QAAzB,iDAAuB,aAAYQ,IAAK,EAAlD,CAAN;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeP,CAAf,CAAP;AACD,CAZH;AAeA,OAAO,MAAMQ,eAAe,GAAG,MAAM;AACnCd,EAAAA,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAaP,eAAe,EAA5B,CAAN;AACD,CAFM","sourcesContent":["import axios from \"axios\";\n\nexport const getCustomConfig = () => {\n  const token = localStorage.getItem(\"access_token\");\n  const config = {\n    headers: { \"x-access-token\": token },\n  };\n  return config;\n};\n\nexport let API = axios.create(getCustomConfig());\n\nAPI.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (e) => {\n    console.log(\"ERR\", e?.response);\n    if (e?.response?.status === 401) {\n      console.log(\"ER1ROR: \", e.response);\n      // alert();\n      throw new Error(`401 - Unauthorized\\n${e.response?.data}`);\n    }\n    return Promise.reject(e);\n  }\n);\n\nexport const updateAPIHeader = () => {\n  API = axios.create(getCustomConfig());\n};\n"]},"metadata":{},"sourceType":"module"}