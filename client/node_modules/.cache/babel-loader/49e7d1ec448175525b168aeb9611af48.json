{"ast":null,"code":"export var UTCtoKTC=function UTCtoKTC(date){var offset=new Date().getTimezoneOffset()*60000;var korDay=new Date(date-offset);return korDay;};export var changeFormatYYYYMMDD=function changeFormatYYYYMMDD(date,isKOR){if(!isKOR)date=UTCtoKTC(date);return date.toISOString().slice(0,10);};export var getToday=function getToday(){return changeFormatYYYYMMDD(new Date(),true);};export var makeDisplayTime=function makeDisplayTime(num){return num<10?\"0\"+num:num;};export var getDifference=function getDifference(timeObj1,timeObj2){var diff=Math.abs(timeObj1.hour*60+timeObj1.minute-(timeObj2.hour*60+timeObj2.minute));var hour=Math.floor(diff/60);var minute=diff%60;return{hour:hour,minute:minute};};export var getDiffDayInStr=function getDiffDayInStr(d1,d2){d1=new Date(d1);d2=new Date(d2);return Math.floor((d2>d1?d2-d1:d1-d2)/86400000);};export var subtractDayInStr=function subtractDayInStr(d1,d2){d1=new Date(d1);d2=new Date(d2);return Math.floor((d2-d1)/86400000);};export var divideDate=function divideDate(date){var year=date.substr(0,4);var month=date.substr(5,2);var day=date.substr(8,2);var dividedAddress=\"\".concat(year,\"/\").concat(month,\"/\").concat(day);var dividedAddressYYYYMM=\"\".concat(year,\"/\").concat(month);return{year:year,month:month,day:day,dividedAddress:dividedAddress,dividedAddressYYYYMM:dividedAddressYYYYMM};};export var isEqualYYYYMMDateObj=function isEqualYYYYMMDateObj(date1,date2){return date1.getFullYear()===date2.getFullYear()&&date1.getMonth()===date2.getMonth();};export var isEqualYYYYMMDateStr=function isEqualYYYYMMDateStr(date1,date2){return date1.substr(0,7)===date2.substr(0,7);};export var getAddedDateStr=function getAddedDateStr(date,value){if(typeof date===\"string\")date=new Date(date);var tomorrow=new Date(date);tomorrow.setDate(date.getDate()+value);return changeFormatYYYYMMDD(tomorrow,true);};export var getAddedDateObj=function getAddedDateObj(date,value){if(typeof date===\"string\")date=new Date(date);var tomorrow=new Date(date);tomorrow.setDate(date.getDate()+value);return tomorrow;};export var timeObjToStr=function timeObjToStr(timeObj){var emptyStr=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"Not Entered\";return timeObj&&timeObj.hour!==null?\"\".concat(makeDisplayTime(timeObj.hour),\":\").concat(makeDisplayTime(timeObj.minute)):emptyStr;};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/tools/time.js"],"names":["UTCtoKTC","date","offset","Date","getTimezoneOffset","korDay","changeFormatYYYYMMDD","isKOR","toISOString","slice","getToday","makeDisplayTime","num","getDifference","timeObj1","timeObj2","diff","Math","abs","hour","minute","floor","getDiffDayInStr","d1","d2","subtractDayInStr","divideDate","year","substr","month","day","dividedAddress","dividedAddressYYYYMM","isEqualYYYYMMDateObj","date1","date2","getFullYear","getMonth","isEqualYYYYMMDateStr","getAddedDateStr","value","tomorrow","setDate","getDate","getAddedDateObj","timeObjToStr","timeObj","emptyStr"],"mappings":"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","sourcesContent":["export const UTCtoKTC = (date) => {\n  const offset = new Date().getTimezoneOffset() * 60000;\n  const korDay = new Date(date - offset);\n  return korDay;\n};\n\nexport const changeFormatYYYYMMDD = (date, isKOR) => {\n  if (!isKOR) date = UTCtoKTC(date);\n  return date.toISOString().slice(0, 10);\n};\nexport const getToday = () => {\n  return changeFormatYYYYMMDD(new Date(), true);\n};\nexport const makeDisplayTime = (num) => (num < 10 ? \"0\" + num : num);\n\nexport const getDifference = (timeObj1, timeObj2) => {\n  const diff = Math.abs(\n    timeObj1.hour * 60 +\n      timeObj1.minute -\n      (timeObj2.hour * 60 + timeObj2.minute)\n  );\n  const hour = Math.floor(diff / 60);\n  const minute = diff % 60;\n  return { hour, minute };\n};\n\nexport const getDiffDayInStr = (d1, d2) => {\n  d1 = new Date(d1);\n  d2 = new Date(d2);\n  return Math.floor((d2 > d1 ? d2 - d1 : d1 - d2) / 86400000);\n};\nexport const subtractDayInStr = (d1, d2) => {\n  d1 = new Date(d1);\n  d2 = new Date(d2);\n  return Math.floor((d2 - d1) / 86400000);\n};\nexport const divideDate = (date) => {\n  const year = date.substr(0, 4);\n  const month = date.substr(5, 2);\n  const day = date.substr(8, 2);\n  const dividedAddress = `${year}/${month}/${day}`;\n\n  const dividedAddressYYYYMM = `${year}/${month}`;\n  return { year, month, day, dividedAddress, dividedAddressYYYYMM };\n};\n\nexport const isEqualYYYYMMDateObj = (date1, date2) =>\n  date1.getFullYear() === date2.getFullYear() &&\n  date1.getMonth() === date2.getMonth();\nexport const isEqualYYYYMMDateStr = (date1, date2) =>\n  date1.substr(0, 7) === date2.substr(0, 7);\n\nexport const getAddedDateStr = (date, value) => {\n  if (typeof date === \"string\") date = new Date(date);\n  let tomorrow = new Date(date);\n  tomorrow.setDate(date.getDate() + value);\n  return changeFormatYYYYMMDD(tomorrow, true);\n};\n\nexport const getAddedDateObj = (date, value) => {\n  if (typeof date === \"string\") date = new Date(date);\n  let tomorrow = new Date(date);\n  tomorrow.setDate(date.getDate() + value);\n  return tomorrow;\n};\n\nexport const timeObjToStr = (timeObj, emptyStr = \"Not Entered\") => {\n  return timeObj && timeObj.hour !== null\n    ? `${makeDisplayTime(timeObj.hour)}:${makeDisplayTime(timeObj.minute)}`\n    : emptyStr;\n};\n"]},"metadata":{},"sourceType":"module"}