{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport randomToken from \"rand-token\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nexport const useTodo = (setTodo, todoItem, _isEditMode, id) => {\n  _s();\n\n  const [isEditMode, setEditMode] = useState(_isEditMode);\n  const [isCheck, setCheck] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.isCheck);\n  const [text, setText] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.text);\n  const [date, setDate] = useState((todoItem === null || todoItem === void 0 ? void 0 : todoItem.date) ? todoItem === null || todoItem === void 0 ? void 0 : todoItem.date : undefined);\n  const [priority, setPriority] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.priority);\n\n  const changeEditMode = () => setEditMode(id === 0 ? true : !isEditMode);\n\n  const onClickCheck = () => setCheck(!isCheck);\n\n  const onChangeText = text => setText(text);\n\n  const onChangeDate = date => setDate(changeFormatYYYYMMDD(date, false));\n\n  const onChangePriority = rating => {\n    console.log(\"RAT: \", rating);\n    setPriority(rating);\n  }; //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n\n  const validator = todoItem => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n\n  const getErrText = () => {\n    let errText = `[ERROR] In, TodoList ${text ? \"\" : \" Text\"}${!date + !priority > 0 && !text ? \", \" : \"\"}${date ? \"\" : \" Date\"}${!priority > 0 && !date ? \", \" : \"\"}${priority ? \"\" : \" Prioirty\"} ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n\n  const clearTodo = () => {\n    setText(\"\");\n    setDate();\n    setPriority();\n    console.log(\"CLEAR TODO\", text, date, priority);\n  };\n\n  const onSubmitTodo = event => {\n    try {\n      // console.log(\"EDIT EDIT EDIT\");\n      event.preventDefault();\n      const id = Date.now().toString(16) + randomToken.generate(5);\n      const todoItem = {\n        isCheck,\n        text,\n        date,\n        priority,\n        id\n      };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n\n      if (willUpdate) {\n        setTodo(todoItem, id).create();\n        clearTodo();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onClickEditBtn = () => {\n    changeEditMode();\n  };\n\n  const onEditTodo = event => {\n    try {\n      event.preventDefault();\n      let willUpdate = true;\n      const id = todoItem === null || todoItem === void 0 ? void 0 : todoItem.id;\n      const _todoItem = {\n        isCheck,\n        text,\n        date,\n        priority,\n        id\n      };\n      if (typeof validator === \"function\") willUpdate = validator(_todoItem);\n\n      if (willUpdate) {\n        changeEditMode();\n        setTodo(_todoItem, id).edit();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onDeleteTodo = event => {\n    try {\n      event.preventDefault();\n\n      const deleteAction = () => setTodo(todoItem, id).delete();\n\n      const cancelAction = () => console.log(\"CANCEL DELETE WORK\");\n\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\n        deleteAction();\n      } else {\n        cancelAction();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onClearTodo = () => clearTodo();\n\n  return [isEditMode, isCheck, text, date, priority, onClickCheck, onChangeText, onChangeDate, onChangePriority, onSubmitTodo, onEditTodo, onDeleteTodo, onClickEditBtn, onClearTodo];\n};\n\n_s(useTodo, \"cCHQwuNea0zuPKUx7oxdvnfFag0=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodo.js"],"names":["useState","randomToken","changeFormatYYYYMMDD","useTodo","setTodo","todoItem","_isEditMode","id","isEditMode","setEditMode","isCheck","setCheck","text","setText","date","setDate","undefined","priority","setPriority","changeEditMode","onClickCheck","onChangeText","onChangeDate","onChangePriority","rating","console","log","validator","getErrText","errText","clearTodo","onSubmitTodo","event","preventDefault","Date","now","toString","generate","willUpdate","create","Error","error","alert","onClickEditBtn","onEditTodo","_todoItem","edit","onDeleteTodo","deleteAction","delete","cancelAction","window","confirm","onClearTodo"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport randomToken from \"rand-token\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nexport const useTodo = (setTodo, todoItem, _isEditMode, id) => {\n  const [isEditMode, setEditMode] = useState(_isEditMode);\n  const [isCheck, setCheck] = useState(todoItem?.isCheck);\n  const [text, setText] = useState(todoItem?.text);\n  const [date, setDate] = useState(todoItem?.date ? todoItem?.date : undefined);\n  const [priority, setPriority] = useState(todoItem?.priority);\n  const changeEditMode = () => setEditMode(id === 0 ? true : !isEditMode);\n  const onClickCheck = () => setCheck(!isCheck);\n  const onChangeText = (text) => setText(text);\n  const onChangeDate = (date) => setDate(changeFormatYYYYMMDD(date, false));\n  const onChangePriority = (rating) => {\n    console.log(\"RAT: \", rating);\n    setPriority(rating);\n  };\n  //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n  const validator = (todoItem) => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n  const getErrText = () => {\n    let errText = `[ERROR] In, TodoList ${text ? \"\" : \" Text\"}${\n      !date + !priority > 0 && !text ? \", \" : \"\"\n    }${date ? \"\" : \" Date\"}${!priority > 0 && !date ? \", \" : \"\"}${\n      priority ? \"\" : \" Prioirty\"\n    } ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n  const clearTodo = () => {\n    setText(\"\");\n    setDate();\n    setPriority();\n    console.log(\"CLEAR TODO\", text, date, priority);\n  };\n  const onSubmitTodo = (event) => {\n    try {\n      // console.log(\"EDIT EDIT EDIT\");\n      event.preventDefault();\n      const id = Date.now().toString(16) + randomToken.generate(5);\n      const todoItem = { isCheck, text, date, priority, id };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n      if (willUpdate) {\n        setTodo(todoItem, id).create();\n        clearTodo();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onClickEditBtn = () => {\n    changeEditMode();\n  };\n  const onEditTodo = (event) => {\n    try {\n      event.preventDefault();\n      let willUpdate = true;\n      const id = todoItem?.id;\n      const _todoItem = { isCheck, text, date, priority, id };\n      if (typeof validator === \"function\") willUpdate = validator(_todoItem);\n      if (willUpdate) {\n        changeEditMode();\n        setTodo(_todoItem, id).edit();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onDeleteTodo = (event) => {\n    try {\n      event.preventDefault();\n      const deleteAction = () => setTodo(todoItem, id).delete();\n      const cancelAction = () => console.log(\"CANCEL DELETE WORK\");\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\n        deleteAction();\n      } else {\n        cancelAction();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onClearTodo = () => clearTodo();\n  return [\n    isEditMode,\n    isCheck,\n    text,\n    date,\n    priority,\n    onClickCheck,\n    onChangeText,\n    onChangeDate,\n    onChangePriority,\n    onSubmitTodo,\n    onEditTodo,\n    onDeleteTodo,\n    onClickEditBtn,\n    onClearTodo,\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}