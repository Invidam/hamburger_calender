{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/IngredientList.js\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst map = new Map();\nconst Tomato = styled.li`\n  background-color: rgba(227, 26, 0, 1);\n`;\n_c = Tomato;\nmap[\"tomato\"] = /*#__PURE__*/_jsxDEV(Tomato, {\n  children: \" MAP\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 17\n}, this);\nconst Cheese = styled.li`\n  backgroud-color: rgba(255, 166, 0, 1);\n`;\n_c2 = Cheese;\nmap[\"cheeze\"] = /*#__PURE__*/_jsxDEV(Cheese, {\n  children: \" Map\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 17\n}, this); // const Circle = styled.div`\n//   width: 5rem;\n//   height: 5rem;\n//   background: ${(props) => props.color || \"black\"};\n//   border-radius: 50%;\n// `;\n\nexport const IngredientList = ({\n  ingredienName\n}) => {\n  return map[ingredienName];\n  console.log(\"ING: \", ingredienName);\n  if (ingredienName === \"tomato\") return /*#__PURE__*/_jsxDEV(Tomato, {\n    children: \"TEST\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 42\n  }, this);else return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \" NOT TOM\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 15\n  }, this); // return <{ingredienName} />\n  //   return map[ingredienName];\n}; //background-color: white;\n\n/*\n방법 생각해보기\n버튼 클릭 -> () => 색상 지정 (DB에도 저장) => 색상 표시\n\n에서, 버튼 클릭에 따라 어떻게 색상을 지정할 것인지 고민해보기.\n*/\n\n_c3 = IngredientList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Tomato\");\n$RefreshReg$(_c2, \"Cheese\");\n$RefreshReg$(_c3, \"IngredientList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/IngredientList.js"],"names":["styled","map","Map","Tomato","li","Cheese","IngredientList","ingredienName","console","log"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AACA,MAAMC,MAAM,GAAGH,MAAM,CAACI,EAAG;AACzB;AACA,CAFA;KAAMD,M;AAGNF,GAAG,CAAC,QAAD,CAAH,gBAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACA,MAAMI,MAAM,GAAGL,MAAM,CAACI,EAAG;AACzB;AACA,CAFA;MAAMC,M;AAGNJ,GAAG,CAAC,QAAD,CAAH,gBAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACnD,SAAON,GAAG,CAACM,aAAD,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,aAArB;AACA,MAAIA,aAAa,KAAK,QAAtB,EAAgC,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAhC,KACK,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAJ8C,CAKnD;AACA;AACD,CAPM,C,CAQP;;AAEA;AACA;AACA;AACA;AACA;AACA;;MAfaD,c","sourcesContent":["import styled from \"styled-components\";\n\nconst map = new Map();\nconst Tomato = styled.li`\n  background-color: rgba(227, 26, 0, 1);\n`;\nmap[\"tomato\"] = <Tomato> MAP</Tomato>;\nconst Cheese = styled.li`\n  backgroud-color: rgba(255, 166, 0, 1);\n`;\nmap[\"cheeze\"] = <Cheese> Map</Cheese>;\n// const Circle = styled.div`\n//   width: 5rem;\n//   height: 5rem;\n//   background: ${(props) => props.color || \"black\"};\n//   border-radius: 50%;\n// `;\n\nexport const IngredientList = ({ ingredienName }) => {\n  return map[ingredienName];\n  console.log(\"ING: \", ingredienName);\n  if (ingredienName === \"tomato\") return <Tomato>TEST</Tomato>;\n  else return <li> NOT TOM</li>;\n  // return <{ingredienName} />\n  //   return map[ingredienName];\n};\n//background-color: white;\n\n/*\n방법 생각해보기\n버튼 클릭 -> () => 색상 지정 (DB에도 저장) => 색상 표시\n\n에서, 버튼 클릭에 따라 어떻게 색상을 지정할 것인지 고민해보기.\n*/\n"]},"metadata":{},"sourceType":"module"}