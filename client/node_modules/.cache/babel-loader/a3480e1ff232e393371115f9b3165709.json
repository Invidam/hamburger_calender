{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/pages/HomePage.js\";\n// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useRecordTime } from \"../../hooks/workList/time/useRecordTime\";\nimport { useWorkList } from \"../../hooks/workList/work/useWorkList\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nimport { API } from \"../../tools/API\";\nimport { ListViewTemplate } from \"../listview/ListViewTemplate\";\nimport { TodoListTemplate } from \"../todoList/TodoListTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = ({\n  user,\n  updateDateHook,\n  targetSetting\n}) => {\n  // const [date, setDate] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  // const updateDateHook = useState(new Date());\n  const date = updateDateHook[0]; //const [workList, setWork, isWorkListLoading]\n\n  const setDate = updateDateHook[1];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(CalendarTemplate, {\n        user: user,\n        updateDateHook: updateDateHook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListViewTemplate, {\n        user: user,\n        date: date,\n        setDate: setDate,\n        targetSetting: targetSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListTemplate, {\n        user: user,\n        date: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n        user: user,\n        date: date,\n        targetSetting: targetSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/pages/HomePage.js"],"names":["WorkListTemplate","CalendarTemplate","useRecordTime","useWorkList","changeFormatYYYYMMDD","API","ListViewTemplate","TodoListTemplate","HomePage","user","updateDateHook","targetSetting","date","setDate"],"mappings":";AAAA;AACA;AACA,SAASA,gBAAT,QAAiC,8BAAjC;AACA,OAAO,wBAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA;AAAxB,CAAD,KAA6C;AACnE;AACA;AACA;AACA;AACA;AACA,QAAMC,IAAI,GAAGF,cAAc,CAAC,CAAD,CAA3B,CANmE,CAOnE;;AACA,QAAMG,OAAO,GAAGH,cAAc,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,cAAc,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,IAAI,EAAEG,IAFR;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,aAAa,EAAEF;AAJjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEF,IAAxB;AAA8B,QAAA,IAAI,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,IAAI,EAAEG,IAFR;AAGE,QAAA,aAAa,EAAED;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA/BM;KAAMH,Q","sourcesContent":["// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useRecordTime } from \"../../hooks/workList/time/useRecordTime\";\nimport { useWorkList } from \"../../hooks/workList/work/useWorkList\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nimport { API } from \"../../tools/API\";\nimport { ListViewTemplate } from \"../listview/ListViewTemplate\";\nimport { TodoListTemplate } from \"../todoList/TodoListTemplate\";\n\nexport const HomePage = ({ user, updateDateHook, targetSetting }) => {\n  // const [date, setDate] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  // const updateDateHook = useState(new Date());\n  const date = updateDateHook[0];\n  //const [workList, setWork, isWorkListLoading]\n  const setDate = updateDateHook[1];\n\n  return (\n    <section>\n      <article>\n        <CalendarTemplate user={user} updateDateHook={updateDateHook} />\n        <ListViewTemplate\n          user={user}\n          date={date}\n          setDate={setDate}\n          targetSetting={targetSetting}\n        />\n        <TodoListTemplate user={user} date={date} />\n      </article>\n      <article>\n        <WorkListTemplate\n          user={user}\n          date={date}\n          targetSetting={targetSetting}\n        />\n      </article>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}