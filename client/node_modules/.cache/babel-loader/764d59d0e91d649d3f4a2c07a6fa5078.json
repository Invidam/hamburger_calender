{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/TodoList.js\",\n    _s = $RefreshSig$();\n\n// import Loading from \"react-loading\";\n// import StarRatings from \"react-star-ratings\";\n// import { StarRatingInput, StarRating, css } from \"react-star-rating-input\";\n// import DatePicker from \"react-datepicker\";\nimport { useTodoList } from \"../../hooks/todolist/useTodoList\";\nimport { LoadingElement } from \"../Loading\"; // import { InputTodo } from \"./InputTodo\";\n\nimport { Todo } from \"./elements/Todo\";\nimport \"../../css/todoList.css\";\nimport { TodoExplain } from \"./elements/TodoExplain\"; // import { Example } from \"./dateTest\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const INIT_SORT_TYPE_IDX = 1,\n      SORT_TYPE_CNT = 2,\n      SORT_TYPES = 2;\nexport const TodoList = ({\n  user,\n  date\n}) => {\n  _s();\n\n  // const [sortTypeIdx, onClickByTabIdx] = todoSortHook;\n  const [todoList, setTodo, isTodoListLoading, getNextSortType, onClickByTabIdx] = useTodoList(user, INIT_SORT_TYPE_IDX, SORT_TYPE_CNT, SORT_TYPES);\n  console.log(\"TODOLIST: \", todoList, typeof todoList);\n  return isTodoListLoading ? /*#__PURE__*/_jsxDEV(LoadingElement, {\n    text: \"todoList is Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(TodoExplain, {\n      onClickByTabIdx: onClickByTabIdx,\n      sortTypeIdx: sortTypeIdx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      setTodo: setTodo,\n      _isEditMode: true,\n      id: -1,\n      idx: -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), todoList ? todoList.map(([key, todoItem], idx) => {\n      // &&Object.values(todoList)\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        setTodo: setTodo,\n        _isEditMode: false,\n        todoItem: todoItem,\n        id: idx,\n        idx: idx\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this);\n    }) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"fSjCsxQtRHpyf260K3nO9Erb2iI=\", false, function () {\n  return [useTodoList];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/TodoList.js"],"names":["useTodoList","LoadingElement","Todo","TodoExplain","INIT_SORT_TYPE_IDX","SORT_TYPE_CNT","SORT_TYPES","TodoList","user","date","todoList","setTodo","isTodoListLoading","getNextSortType","onClickByTabIdx","console","log","sortTypeIdx","map","key","todoItem","idx"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA,SAASA,WAAT,QAA4B,kCAA5B;AACA,SAASC,cAAT,QAA+B,YAA/B,C,CACA;;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,wBAAP;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CACA;;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAA3B;AAAA,MACLC,aAAa,GAAG,CADX;AAAA,MAELC,UAAU,GAAG,CAFR;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAC1C;AACA,QAAM,CACJC,QADI,EAEJC,OAFI,EAGJC,iBAHI,EAIJC,eAJI,EAKJC,eALI,IAMFd,WAAW,CAACQ,IAAD,EAAOJ,kBAAP,EAA2BC,aAA3B,EAA0CC,UAA1C,CANf;AAOAS,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,QAA1B,EAAoC,OAAOA,QAA3C;AACA,SAAOE,iBAAiB,gBACtB,QAAC,cAAD;AAAgB,IAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,UADsB,gBAGtB;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,eAAe,EAAEE,eADnB;AAEE,MAAA,WAAW,EAAEG;AAFf;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEN,OAAf;AAAwB,MAAA,WAAW,EAAE,IAArC;AAA2C,MAAA,EAAE,EAAE,CAAC,CAAhD;AAAmD,MAAA,GAAG,EAAE,CAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YALF,EAMGD,QAAQ,GACLA,QAAQ,CAACQ,GAAT,CAAa,CAAC,CAACC,GAAD,EAAMC,QAAN,CAAD,EAAkBC,GAAlB,KAA0B;AACrC;AACA,0BACE,QAAC,IAAD;AACE,QAAA,OAAO,EAAEV,OADX;AAEE,QAAA,WAAW,EAAE,KAFf;AAGE,QAAA,QAAQ,EAAES,QAHZ;AAKE,QAAA,EAAE,EAAEC,GALN;AAME,QAAA,GAAG,EAAEA;AANP,SAIOA,GAJP;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAZD,CADK,GAcL,EApBN;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AA0BD,CApCM;;GAAMd,Q;UAQPP,W;;;KAROO,Q","sourcesContent":["// import Loading from \"react-loading\";\n// import StarRatings from \"react-star-ratings\";\n// import { StarRatingInput, StarRating, css } from \"react-star-rating-input\";\n\n// import DatePicker from \"react-datepicker\";\nimport { useTodoList } from \"../../hooks/todolist/useTodoList\";\nimport { LoadingElement } from \"../Loading\";\n// import { InputTodo } from \"./InputTodo\";\nimport { Todo } from \"./elements/Todo\";\nimport \"../../css/todoList.css\";\nimport { TodoExplain } from \"./elements/TodoExplain\";\n// import { Example } from \"./dateTest\";\n\nexport const INIT_SORT_TYPE_IDX = 1,\n  SORT_TYPE_CNT = 2,\n  SORT_TYPES = 2;\nexport const TodoList = ({ user, date }) => {\n  // const [sortTypeIdx, onClickByTabIdx] = todoSortHook;\n  const [\n    todoList,\n    setTodo,\n    isTodoListLoading,\n    getNextSortType,\n    onClickByTabIdx,\n  ] = useTodoList(user, INIT_SORT_TYPE_IDX, SORT_TYPE_CNT, SORT_TYPES);\n  console.log(\"TODOLIST: \", todoList, typeof todoList);\n  return isTodoListLoading ? (\n    <LoadingElement text={\"todoList is Loading\"} />\n  ) : (\n    <ol className=\"todo-list\">\n      <TodoExplain\n        onClickByTabIdx={onClickByTabIdx}\n        sortTypeIdx={sortTypeIdx}\n      />\n      <Todo setTodo={setTodo} _isEditMode={true} id={-1} idx={-1} />\n      {todoList\n        ? todoList.map(([key, todoItem], idx) => {\n            // &&Object.values(todoList)\n            return (\n              <Todo\n                setTodo={setTodo}\n                _isEditMode={false}\n                todoItem={todoItem}\n                key={idx}\n                id={idx}\n                idx={idx}\n              />\n            );\n          })\n        : \"\"}\n    </ol>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}