{"ast":null,"code":"import _classCallCheck from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{Node}from\"./Node.js\";var arrToDeque=function arrToDeque(initArr){var head,tail;initArr.reduce(function(prev,curr,idx,arr){if(idx===0){curr=new Node(curr);head=curr;}else{curr=new Node(curr,prev);prev.next=curr;if(idx===arr.length-1){tail=curr;}}return curr;},undefined);return{head:head,tail:tail};};export var Deque=/*#__PURE__*/function(){function Deque(initArr,displayLength){_classCallCheck(this,Deque);this.startDateIdx=Math.floor((initArr.length-displayLength)/2);// 11 / 2 - 2 = 3\n// 11 - 5 / 3\n// this.head\n// this.tail\n// initArr.reduce((prev, curr, idx, arr) => {}, undefined);\nvar _arrToDeque=arrToDeque(initArr),head=_arrToDeque.head,tail=_arrToDeque.tail;this.head=head;this.tail=tail;this.length=initArr.length;this.displayLength=displayLength;}_createClass(Deque,[{key:\"print\",value:function print(text){var itr=this.head;var ret=[];while(itr!==undefined){ret.push(itr.value);itr=itr.next;}console.log(text,ret);}},{key:\"pop_front\",value:function pop_front(){var cnt=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;while(cnt--){this.head=this.head.next;this.head.prev=undefined;this.length--;}}},{key:\"pop_back\",value:function pop_back(){var cnt=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;while(cnt--){this.tail=this.tail.prev;this.tail.next=undefined;this.length--;}}},{key:\"push_front\",value:function push_front(node){node.next=this.head;this.head.prev=node;this.head=node;this.length++;}},{key:\"push_back\",value:function push_back(node){node.prev=this.tail;this.tail.next=node;this.tail=node;this.length++;}},{key:\"getInRange\",value:function getInRange(from,length){try{if(from+length>this.length||from<0||length<1)throw new Error(\"Unexpected arguments \".concat(from,\" and \").concat(length,\" in \").concat(this.length));var itr=this.head;var idx=0;var ret=[];while(idx++!==from){itr=itr.next;}while(length--){if(itr===undefined)throw new Error(\"Deque is not linked well\");ret.push(itr.value);itr=itr.next;}return ret;}catch(error){alert(error);}}},{key:\"get\",value:function get(){return this.getInRange(this.startDateIdx,this.displayLength);}}]);return Deque;}();// const arr = [1, 2, 3, 4, 5];\n// const deq = new Deque(arr, 2);\n// deq.print();\n// deq.push_back(new Node(6));\n// deq.print();\n// deq.push_front(new Node(0));\n// deq.print();\n// deq.pop_back();\n// deq.print();\n// deq.pop_front();\n// deq.print();","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/classes/Deque.js"],"names":["Node","arrToDeque","initArr","head","tail","reduce","prev","curr","idx","arr","next","length","undefined","Deque","displayLength","startDateIdx","Math","floor","text","itr","ret","push","value","console","log","cnt","node","from","Error","error","alert","getInRange"],"mappings":"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","sourcesContent":["import { Node } from \"./Node.js\";\n\nconst arrToDeque = (initArr) => {\n  let head, tail;\n  initArr.reduce((prev, curr, idx, arr) => {\n    if (idx === 0) {\n      curr = new Node(curr);\n      head = curr;\n    } else {\n      curr = new Node(curr, prev);\n      prev.next = curr;\n      if (idx === arr.length - 1) {\n        tail = curr;\n      }\n    }\n    return curr;\n  }, undefined);\n  return { head, tail };\n};\nexport class Deque {\n  constructor(initArr, displayLength) {\n    this.startDateIdx = Math.floor((initArr.length - displayLength) / 2);\n    // 11 / 2 - 2 = 3\n    // 11 - 5 / 3\n    // this.head\n    // this.tail\n    // initArr.reduce((prev, curr, idx, arr) => {}, undefined);\n    const { head, tail } = arrToDeque(initArr);\n    this.head = head;\n    this.tail = tail;\n    this.length = initArr.length;\n    this.displayLength = displayLength;\n  }\n  print(text) {\n    let itr = this.head;\n    const ret = [];\n    while (itr !== undefined) {\n      ret.push(itr.value);\n      itr = itr.next;\n    }\n    console.log(text, ret);\n  }\n  pop_front(cnt = 1) {\n    while (cnt--) {\n      this.head = this.head.next;\n      this.head.prev = undefined;\n      this.length--;\n    }\n  }\n  pop_back(cnt = 1) {\n    while (cnt--) {\n      this.tail = this.tail.prev;\n      this.tail.next = undefined;\n      this.length--;\n    }\n  }\n  push_front(node) {\n    node.next = this.head;\n    this.head.prev = node;\n    this.head = node;\n    this.length++;\n  }\n  push_back(node) {\n    node.prev = this.tail;\n    this.tail.next = node;\n    this.tail = node;\n    this.length++;\n  }\n  getInRange(from, length) {\n    try {\n      if (from + length > this.length || from < 0 || length < 1)\n        throw new Error(\n          `Unexpected arguments ${from} and ${length} in ${this.length}`\n        );\n      let itr = this.head;\n      let idx = 0;\n      const ret = [];\n      while (idx++ !== from) itr = itr.next;\n      while (length--) {\n        if (itr === undefined) throw new Error(\"Deque is not linked well\");\n        ret.push(itr.value);\n        itr = itr.next;\n      }\n      return ret;\n    } catch (error) {\n      alert(error);\n    }\n  }\n  get() {\n    return this.getInRange(this.startDateIdx, this.displayLength);\n  }\n}\n\n// const arr = [1, 2, 3, 4, 5];\n\n// const deq = new Deque(arr, 2);\n\n// deq.print();\n\n// deq.push_back(new Node(6));\n// deq.print();\n// deq.push_front(new Node(0));\n// deq.print();\n\n// deq.pop_back();\n// deq.print();\n// deq.pop_front();\n// deq.print();\n"]},"metadata":{},"sourceType":"module"}