{"ast":null,"code":"// import es from \"da\"\nimport{useTodo}from\"../../../hooks/todolist/useTodo\";import{getToday}from\"../../../tools/time\";import{faCheck}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{TodoInput}from\"./TodoInput\";import{TodoDisplay}from\"./TodoDisplay\";import{TodoExpired}from\"./TodoExpired\";// const checkElement = (\n//   <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n// );\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var Todo=function Todo(_ref){var setTodo=_ref.setTodo,_isEditMode=_ref._isEditMode,todoItem=_ref.todoItem,id=_ref.id,idx=_ref.idx;var todoHook=useTodo(setTodo,todoItem,_isEditMode,idx);var isEditMode=todoHook[0];var today=getToday();var isExpired=(todoItem===null||todoItem===void 0?void 0:todoItem.date)<today;return/*#__PURE__*/_jsx(\"li\",{className:\"todo\",children:isEditMode?/*#__PURE__*/_jsx(TodoInput,{todoHook:todoHook,id:id},id):isExpired?/*#__PURE__*/_jsx(TodoExpired,{todoHook:todoHook,id:id},id):/*#__PURE__*/_jsx(TodoDisplay,{todoHook:todoHook,id:id},id)},\"_\"+(todoItem===null||todoItem===void 0?void 0:todoItem.id));};// const inputBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button\n//       className=\"todo__btn todo__btn-add\"\n//       onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n//     >\n//       {isSubmitMode ? \"+\" : \"Save\"}\n//     </button>\n//   </div>\n// );\n// const displayBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n//       E\n//     </button>\n//     <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n//       X\n//     </button>\n//   </div>\n// );\n// const inputElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n//     <input\n//       className=\"todo__text todo-input__text todo__content todo-input__content\"\n//       type=\"text\"\n//       autoComplete=\"off\"\n//       name=\"todoText\"\n//       defaultValue={todoItem?.text}\n//       onChange={({ target: { value } }) => onChangeText(value)}\n//     ></input>\n//     {/* <input\n//       className=\"todo-input__date todo-input__content\"\n//       type=\"date\"\n//       name=\"todoDate\"\n//       lang=\"en-us\"\n//       required\n//       pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n//       defaultValue={isEditMode ? todoItem?.date : undefined}\n//       min={getToday()}\n//       onChange={({ target: { value } }) => onChangeDate(value)}\n//     ></input> */}\n//     <DatePick\n//       isEditMode={isEditMode}\n//       date={date}\n//       onChangeDate={onChangeDate}\n//     />\n//     {/* <input\n//       className=\"todo-input__priority todo-input__content\"\n//       type=\"text\"\n//       name=\"todoPriority\"\n//       defaultValue={todoItem?.priority}\n//       onChange={({ target: { value } }) => onChangePriority(value)}\n//     ></input> */}\n//     <div className={`todo__star-rating todo-input__star `}>\n//       <StarRatings\n//         // rating={todoItem?.priority}\n//         starRatedColor=\"rgba(241, 196, 15,0.8)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         changeRating={onChangePriority}\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {inputBtn}\n//   </div>\n// );\n// const displayElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n//       {todoItem?.text}\n//     </span>\n//     <DatePick date={date} isEditMode={isEditMode} />\n//     <div className={`todo__star-rating todo-display__star}`}>\n//       <StarRatings\n//         starRatedColor=\"rgba(241, 196, 15,1.0)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {displayBtn}\n//   </div>\n// );","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/elements/Todo.js"],"names":["useTodo","getToday","faCheck","FontAwesomeIcon","TodoInput","TodoDisplay","TodoExpired","Todo","setTodo","_isEditMode","todoItem","id","idx","todoHook","isEditMode","today","isExpired","date"],"mappings":"AAAA;AACA,OAASA,OAAT,KAAwB,iCAAxB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CAEA,OAASC,OAAT,KAAwB,mCAAxB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA;AACA;AACA;2CACA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAiD,IAA9CC,CAAAA,OAA8C,MAA9CA,OAA8C,CAArCC,WAAqC,MAArCA,WAAqC,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,EAAc,MAAdA,EAAc,CAAVC,GAAU,MAAVA,GAAU,CACnE,GAAMC,CAAAA,QAAQ,CAAGb,OAAO,CAACQ,OAAD,CAAUE,QAAV,CAAoBD,WAApB,CAAiCG,GAAjC,CAAxB,CACA,GAAME,CAAAA,UAAU,CAAGD,QAAQ,CAAC,CAAD,CAA3B,CACA,GAAME,CAAAA,KAAK,CAAGd,QAAQ,EAAtB,CACA,GAAMe,CAAAA,SAAS,CAAG,CAAAN,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEO,IAAV,EAAiBF,KAAnC,CACA,mBACE,WAAI,SAAS,CAAC,MAAd,UACGD,UAAU,cACT,KAAC,SAAD,EAAW,QAAQ,CAAED,QAArB,CAAwC,EAAE,CAAEF,EAA5C,EAAoCA,EAApC,CADS,CAEPK,SAAS,cACX,KAAC,WAAD,EAAa,QAAQ,CAAEH,QAAvB,CAA0C,EAAE,CAAEF,EAA9C,EAAsCA,EAAtC,CADW,cAGX,KAAC,WAAD,EAAa,QAAQ,CAAEE,QAAvB,CAA0C,EAAE,CAAEF,EAA9C,EAAsCA,EAAtC,CANJ,EAA0B,KAAMD,QAAN,SAAMA,QAAN,iBAAMA,QAAQ,CAAEC,EAAhB,CAA1B,CADF,CAWD,CAhBM,CAksourcesContent":["// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { TodoInput } from \"./TodoInput\";\nimport { TodoDisplay } from \"./TodoDisplay\";\nimport { TodoExpired } from \"./TodoExpired\";\n// const checkElement = (\n//   <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n// );\nexport const Todo = ({ setTodo, _isEditMode, todoItem, id, idx }) => {\n  const todoHook = useTodo(setTodo, todoItem, _isEditMode, idx);\n  const isEditMode = todoHook[0];\n  const today = getToday();\n  const isExpired = todoItem?.date < today;\n  return (\n    <li className=\"todo\" key={\"_\" + todoItem?.id}>\n      {isEditMode ? (\n        <TodoInput todoHook={todoHook} key={id} id={id} />\n      ) : isExpired ? (\n        <TodoExpired todoHook={todoHook} key={id} id={id} />\n      ) : (\n        <TodoDisplay todoHook={todoHook} key={id} id={id} />\n      )}\n    </li>\n  );\n};\n\n// const inputBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button\n//       className=\"todo__btn todo__btn-add\"\n//       onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n//     >\n//       {isSubmitMode ? \"+\" : \"Save\"}\n//     </button>\n//   </div>\n// );\n// const displayBtn = (\n//   <div className=\"todo__btn-box todo__btn-box\">\n//     <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n//       E\n//     </button>\n//     <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n//       X\n//     </button>\n//   </div>\n// );\n// const inputElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n//     <input\n//       className=\"todo__text todo-input__text todo__content todo-input__content\"\n//       type=\"text\"\n//       autoComplete=\"off\"\n//       name=\"todoText\"\n//       defaultValue={todoItem?.text}\n//       onChange={({ target: { value } }) => onChangeText(value)}\n//     ></input>\n//     {/* <input\n//       className=\"todo-input__date todo-input__content\"\n//       type=\"date\"\n//       name=\"todoDate\"\n//       lang=\"en-us\"\n//       required\n//       pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n//       defaultValue={isEditMode ? todoItem?.date : undefined}\n//       min={getToday()}\n//       onChange={({ target: { value } }) => onChangeDate(value)}\n//     ></input> */}\n//     <DatePick\n//       isEditMode={isEditMode}\n//       date={date}\n//       onChangeDate={onChangeDate}\n//     />\n//     {/* <input\n//       className=\"todo-input__priority todo-input__content\"\n//       type=\"text\"\n//       name=\"todoPriority\"\n//       defaultValue={todoItem?.priority}\n//       onChange={({ target: { value } }) => onChangePriority(value)}\n//     ></input> */}\n//     <div className={`todo__star-rating todo-input__star `}>\n//       <StarRatings\n//         // rating={todoItem?.priority}\n//         starRatedColor=\"rgba(241, 196, 15,0.8)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         changeRating={onChangePriority}\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {inputBtn}\n//   </div>\n// );\n\n// const displayElement = (\n//   <div className=\"todo\">\n//     <input\n//       id={`todo__checkbox_${id}`}\n//       className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n//       type=\"checkbox\"\n//       name=\"todoCheck\"\n//       defaultValue={todoItem?.isCheck}\n//       onChange={({ target: { value } }) => onClickCheck(value)}\n//     ></input>\n//     <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n//       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n//     </label>\n//     <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n//       {todoItem?.text}\n//     </span>\n//     <DatePick date={date} isEditMode={isEditMode} />\n//     <div className={`todo__star-rating todo-display__star}`}>\n//       <StarRatings\n//         starRatedColor=\"rgba(241, 196, 15,1.0)\"\n//         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n//         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n//         starSelectingHoverColor=\"red\"\n//         numberOfStars={5}\n//         name=\"rating\"\n//         starDimension=\"12px\"\n//         starSpacing=\"0px\"\n//       />{\" \"}\n//     </div>\n//     {displayBtn}\n//   </div>\n// );\n"]},"metadata":{},"sourceType":"module"}