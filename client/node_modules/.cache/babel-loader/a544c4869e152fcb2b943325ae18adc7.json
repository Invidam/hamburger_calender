{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/auth/HomePage.js\",\n    _s = $RefreshSig$();\n\n// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"../../hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"../../hooks/workList/work/useUpdateWork\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER = \"TEST\";\nexport const HomePage = () => {\n  _s();\n\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useState(new Date());\n  const date = changeFormatYYYYMMDD(updateDateHook[0]);\n  console.log(\"DATE: \", date);\n  const wakeTimeHook = useUpdateTime(\"wakeTime\", USER, date);\n  const bedTimeHook = useUpdateTime(\"bedTime\", USER, date);\n  const updateWorkHook = useUpdateWork([], USER, date);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(CalendarTemplate, {\n        user: \"TEST\",\n        updateDateHook: updateDateHook,\n        wakeTimeHook: wakeTimeHook,\n        bedTimeHook: bedTimeHook,\n        updateWorkHook: updateWorkHook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n        date: updateDateHook[0],\n        user: \"TEST\",\n        wakeTimeHook: wakeTimeHook,\n        bedTimeHook: bedTimeHook,\n        updateWorkHook: updateWorkHook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"WWfRxFnjArGgPiy8lqtT6EHF7Lo=\", false, function () {\n  return [useUpdateTime, useUpdateTime, useUpdateWork];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/auth/HomePage.js"],"names":["WorkListTemplate","CalendarTemplate","useUpdateTime","useUpdateWork","changeFormatYYYYMMDD","useState","USER","HomePage","updateDateHook","Date","date","console","log","wakeTimeHook","bedTimeHook","updateWorkHook"],"mappings":";;;AAAA;AACA;AACA,SAASA,gBAAT,QAAiC,8BAAjC;AACA,OAAO,wBAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B;AACA;AACA;AACA;AACA,QAAMC,cAAc,GAAGH,QAAQ,CAAC,IAAII,IAAJ,EAAD,CAA/B;AACA,QAAMC,IAAI,GAAGN,oBAAoB,CAACI,cAAc,CAAC,CAAD,CAAf,CAAjC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACA,QAAMG,YAAY,GAAGX,aAAa,CAAC,UAAD,EAAaI,IAAb,EAAmBI,IAAnB,CAAlC;AACA,QAAMI,WAAW,GAAGZ,aAAa,CAAC,SAAD,EAAYI,IAAZ,EAAkBI,IAAlB,CAAjC;AACA,QAAMK,cAAc,GAAGZ,aAAa,CAAC,EAAD,EAAKG,IAAL,EAAWI,IAAX,CAApC;AAEA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,MADR;AAEE,QAAA,cAAc,EAAEF,cAFlB;AAGE,QAAA,YAAY,EAAEK,YAHhB;AAIE,QAAA,WAAW,EAAEC,WAJf;AAKE,QAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAEP,cAAc,CAAC,CAAD,CADtB;AAEE,QAAA,IAAI,EAAE,MAFR;AAGE,QAAA,YAAY,EAAEK,YAHhB;AAIE,QAAA,WAAW,EAAEC,WAJf;AAKE,QAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAlCM;;GAAMR,Q;UAQUL,a,EACDA,a,EACGC,a;;;KAVZI,Q","sourcesContent":["// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"../../hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"../../hooks/workList/work/useUpdateWork\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\n\nimport { useState } from \"react\";\nconst USER = \"TEST\";\nexport const HomePage = () => {\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useState(new Date());\n  const date = changeFormatYYYYMMDD(updateDateHook[0]);\n  console.log(\"DATE: \", date);\n  const wakeTimeHook = useUpdateTime(\"wakeTime\", USER, date);\n  const bedTimeHook = useUpdateTime(\"bedTime\", USER, date);\n  const updateWorkHook = useUpdateWork([], USER, date);\n\n  return (\n    <section>\n      <article>\n        <CalendarTemplate\n          user={\"TEST\"}\n          updateDateHook={updateDateHook}\n          wakeTimeHook={wakeTimeHook}\n          bedTimeHook={bedTimeHook}\n          updateWorkHook={updateWorkHook}\n        />\n      </article>\n      <article>\n        <WorkListTemplate\n          date={updateDateHook[0]}\n          user={\"TEST\"}\n          wakeTimeHook={wakeTimeHook}\n          bedTimeHook={bedTimeHook}\n          updateWorkHook={updateWorkHook}\n        />\n      </article>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}