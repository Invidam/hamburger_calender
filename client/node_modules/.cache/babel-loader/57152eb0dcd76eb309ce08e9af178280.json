{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\n\nconst getEmptyWork = () => {\n  return {\n    hour: -1,\n    minute: -1\n  };\n};\n\nconst isEmptyWork = Work => !Work || Work.hour === -1 || Work.minute === -1;\n\nconst checkWork = Work => isEmptyWork(Work) ? getEmptyWork() : timeObj;\n\nexport const useUpdateWork = (initList, user, date) => {\n  _s();\n\n  // console.log(\"UPDATE WORK HOOK DATE: \", date);\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\") ? JSON.parse(window.localStorage.getItem(\"workList\")) : [];\n  const [workList, setWorkList] = useState(initList);\n  useEffect(() => {\n    console.log(\"DATE CHANG================\", date);\n    setWorkList(initList);\n  }, [date]);\n  if (!workList || workList.length < 1) axios({\n    headers: {\n      Authorization: \"\",\n      \"Content-Type\": \"application/json\"\n    },\n    url: `/api/${user}/${date}/worklist/worklist`,\n    method: \"get\"\n  }).then(data => {\n    if (data.data) {\n      setWorkList(data === null || data === void 0 ? void 0 : data.data);\n      window.localStorage.setItem(\"workList\", JSON.stringify(data === null || data === void 0 ? void 0 : data.data));\n    } //  else {\n    //   const emptyWorkList = [];\n    //   setWorkList([]);\n    //   window.localStorage.removeItem(\"workList\");\n    // }\n\n  });\n\n  const updateWorkList = _workList => {\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList\n    });\n    if (_workList === null || _workList === void 0 ? void 0 : _workList.length) window.localStorage.setItem(\"workList\", JSON.stringify(_workList));else window.localStorage.removeItem(\"workList\");\n  };\n\n  return [workList, updateWorkList];\n}; //:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n\n_s(useUpdateWork, \"uUnjV6oTVBBPadCGz4VigBOSZFc=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/useUpdateWork.js"],"names":["useEffect","useState","axios","getToday","getEmptyWork","hour","minute","isEmptyWork","Work","checkWork","timeObj","useUpdateWork","initList","user","date","window","localStorage","getItem","JSON","parse","workList","setWorkList","console","log","length","headers","Authorization","url","method","then","data","setItem","stringify","updateWorkList","_workList","post","value","removeItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AACA,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAO;AAAEC,IAAAA,IAAI,EAAE,CAAC,CAAT;AAAYC,IAAAA,MAAM,EAAE,CAAC;AAArB,GAAP;AACD,CAFD;;AAGA,MAAMC,WAAW,GAAIC,IAAD,IAAU,CAACA,IAAD,IAASA,IAAI,CAACH,IAAL,KAAc,CAAC,CAAxB,IAA6BG,IAAI,CAACF,MAAL,KAAgB,CAAC,CAA5E;;AACA,MAAMG,SAAS,GAAID,IAAD,IAAWD,WAAW,CAACC,IAAD,CAAX,GAAoBJ,YAAY,EAAhC,GAAqCM,OAAlE;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,KAA0B;AAAA;;AACrD;AACA;AACAF,EAAAA,QAAQ,GAAGG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,IACPC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CADO,GAEP,EAFJ;AAGA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAACW,QAAD,CAAxC;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CT,IAA1C;AACAO,IAAAA,WAAW,CAACT,QAAD,CAAX;AACD,GAHQ,EAGN,CAACE,IAAD,CAHM,CAAT;AAIA,MAAI,CAACM,QAAD,IAAaA,QAAQ,CAACI,MAAT,GAAkB,CAAnC,EACEtB,KAAK,CAAC;AACJuB,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,EADR;AAEP,sBAAgB;AAFT,KADL;AAKJC,IAAAA,GAAG,EAAG,QAAOd,IAAK,IAAGC,IAAK,oBALtB;AAMJc,IAAAA,MAAM,EAAE;AANJ,GAAD,CAAL,CAOGC,IAPH,CAOSC,IAAD,IAAU;AAChB,QAAIA,IAAI,CAACA,IAAT,EAAe;AACbT,MAAAA,WAAW,CAACS,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAX;AACAf,MAAAA,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,UAA5B,EAAwCb,IAAI,CAACc,SAAL,CAAeF,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEA,IAArB,CAAxC;AACD,KAJe,CAKhB;AACA;AACA;AACA;AACA;;AACD,GAjBD;;AAkBF,QAAMG,cAAc,GAAIC,SAAD,IAAe;AACpCb,IAAAA,WAAW,CAACa,SAAD,CAAX;AACAhC,IAAAA,KAAK,CAACiC,IAAN,CAAY,QAAOtB,IAAK,IAAGC,IAAK,oBAAhC,EAAqD;AACnDD,MAAAA,IAAI,EAAE,MAD6C;AAEnDuB,MAAAA,KAAK,EAAEF;AAF4C,KAArD;AAIA,QAAIA,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAEV,MAAf,EACET,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,UAA5B,EAAwCb,IAAI,CAACc,SAAL,CAAeE,SAAf,CAAxC,EADF,KAEKnB,MAAM,CAACC,YAAP,CAAoBqB,UAApB,CAA+B,UAA/B;AACN,GATD;;AAUA,SAAO,CAACjB,QAAD,EAAWa,cAAX,CAAP;AACD,CAzCM,C,CA0CP;AACA;;GA3CatB,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\nconst getEmptyWork = () => {\n  return { hour: -1, minute: -1 };\n};\nconst isEmptyWork = (Work) => !Work || Work.hour === -1 || Work.minute === -1;\nconst checkWork = (Work) => (isEmptyWork(Work) ? getEmptyWork() : timeObj);\nexport const useUpdateWork = (initList, user, date) => {\n  // console.log(\"UPDATE WORK HOOK DATE: \", date);\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\")\n    ? JSON.parse(window.localStorage.getItem(\"workList\"))\n    : [];\n  const [workList, setWorkList] = useState(initList);\n  useEffect(() => {\n    console.log(\"DATE CHANG================\", date);\n    setWorkList(initList);\n  }, [date]);\n  if (!workList || workList.length < 1)\n    axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      url: `/api/${user}/${date}/worklist/worklist`,\n      method: \"get\",\n    }).then((data) => {\n      if (data.data) {\n        setWorkList(data?.data);\n        window.localStorage.setItem(\"workList\", JSON.stringify(data?.data));\n      }\n      //  else {\n      //   const emptyWorkList = [];\n      //   setWorkList([]);\n      //   window.localStorage.removeItem(\"workList\");\n      // }\n    });\n  const updateWorkList = (_workList) => {\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList,\n    });\n    if (_workList?.length)\n      window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n    else window.localStorage.removeItem(\"workList\");\n  };\n  return [workList, updateWorkList];\n};\n//:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n"]},"metadata":{},"sourceType":"module"}