{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/grade/WorkListGrade.js\",\n    _s = $RefreshSig$();\n\nimport { useWorkListGrade } from \"../../../../hooks/workList/useWorkListGrade\";\nimport { GradeStarList, makeStar } from \"./GradeStarList\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { timeObjToStr } from \"../../../../tools/time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst keyOrderArr = [\"target\", \"value\", \"difference\", \"point\"];\n\nconst redoElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__redo\",\n  icon: faRedo,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\nconst strToFirstLEtterUpper = str => str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const WorkListGrade = ({\n  user,\n  date\n}) => {\n  _s();\n\n  // const [grade, difference, target, value, isGradeLoading, updateInfo] =\n  const [gradeInfo, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n\n  const getGradeSum = () => gradeInfo ? Object.values(gradeInfo === null || gradeInfo === void 0 ? void 0 : gradeInfo.point).reduce((prev, value) => prev += value, 0) : 0;\n\n  const gradeSum = getGradeSum(); // console.log(\"SUM : \", grade, gradeSum);\n  // const gradeElement = makeStar(getGradeSum()).map((elem, idx) => (\n  //   <div key={idx}> {elem}</div>\n  // ));\n  // Object.entries(gradeInfo).map(([key, value]) => {\n  //   return (\n  //     <tr>\n  //       <td>{strToFirstLEtterUpper(key)}</td>\n  //       {value.map((elem) => {\n  //         return <td> {elem}</td>;\n  //       })}\n  //     </tr>\n  //   );\n  // });\n\n  const numToStr = (num, emptyStr) => num === -1 ? emptyStr + \"h\" : num + \"h\";\n\n  const makeElemToStar = elem => makeStar(elem, false).map(star => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"workList-grade__tooltip-star\",\n      children: star\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  });\n\n  const tableElement = /*#__PURE__*/_jsxDEV(\"table\", {\n    border: 1,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"workList-grade__tooltip__row\",\n          children: \"WakeTime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"workList-grade__tooltip__row\",\n          children: \"BedTime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"workList-grade__tooltip__row\",\n          children: \"WorkTimeSum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: gradeInfo && keyOrderArr.map(key => {\n        const value = gradeInfo[key];\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: strToFirstLEtterUpper(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), console.log(value), value && Object.values(value).map(elem => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: key === \"point\" ? makeElemToStar(elem) : typeof elem === \"number\" ? numToStr(elem, \"0\") : timeObjToStr(elem, \"X\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this);\n          })]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  const tooltipElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grade-tooltip-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-tooltip-box\",\n      children: [tableElement, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n\n  const getGradeElement = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"workList-grade__btn workList-grade__btn-init\",\n    onClick: updateInfo,\n    children: \"Get Grade \\u2B50\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n\n  const updateGradeBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"workList-grade__btn workList-grade__update-btn\",\n    onClick: updateInfo,\n    children: redoElement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n\n  const displayGrade = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workList-grade__display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(GradeStarList, {\n        gradeSum: gradeSum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), tooltipElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), updateGradeBtn]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n\n  return gradeInfo ? displayGrade : getGradeElement;\n};\n\n_s(WorkListGrade, \"ThmtQcOhFtjv/fNeARQqlZlKIKU=\", false, function () {\n  return [useWorkListGrade];\n});\n\n_c = WorkListGrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListGrade\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/grade/WorkListGrade.js"],"names":["useWorkListGrade","GradeStarList","makeStar","faRedo","FontAwesomeIcon","timeObjToStr","keyOrderArr","redoElement","strToFirstLEtterUpper","str","charAt","toUpperCase","slice","WorkListGrade","user","date","gradeInfo","isGradeLoading","updateInfo","getGradeSum","Object","values","point","reduce","prev","value","gradeSum","numToStr","num","emptyStr","makeElemToStar","elem","map","star","tableElement","key","console","log","tooltipElement","getGradeElement","updateGradeBtn","displayGrade"],"mappings":"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","sourcesContent":["import { useWorkListGrade } from \"../../../../hooks/workList/useWorkListGrade\";\nimport { GradeStarList, makeStar } from \"./GradeStarList\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { timeObjToStr } from \"../../../../tools/time\";\nconst keyOrderArr = [\"target\", \"value\", \"difference\", \"point\"];\nconst redoElement = (\n  <FontAwesomeIcon className=\"work-icon__redo\" icon={faRedo} size=\"1x\" />\n);\n\nconst strToFirstLEtterUpper = (str) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\nexport const WorkListGrade = ({ user, date }) => {\n  // const [grade, difference, target, value, isGradeLoading, updateInfo] =\n  const [gradeInfo, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n  const getGradeSum = () =>\n    gradeInfo\n      ? Object.values(gradeInfo?.point).reduce(\n          (prev, value) => (prev += value),\n          0\n        )\n      : 0;\n  const gradeSum = getGradeSum();\n  // console.log(\"SUM : \", grade, gradeSum);\n  // const gradeElement = makeStar(getGradeSum()).map((elem, idx) => (\n  //   <div key={idx}> {elem}</div>\n  // ));\n  // Object.entries(gradeInfo).map(([key, value]) => {\n  //   return (\n  //     <tr>\n  //       <td>{strToFirstLEtterUpper(key)}</td>\n  //       {value.map((elem) => {\n  //         return <td> {elem}</td>;\n  //       })}\n  //     </tr>\n  //   );\n  // });\n\n  const numToStr = (num, emptyStr) => (num === -1 ? emptyStr + \"h\" : num + \"h\");\n  const makeElemToStar = (elem) =>\n    makeStar(elem, false).map((star) => {\n      return <span className=\"workList-grade__tooltip-star\">{star}</span>;\n    });\n  const tableElement = (\n    <table border={1}>\n      <thead>\n        <tr>\n          <th></th>\n          <th className=\"workList-grade__tooltip__row\">WakeTime</th>\n          <th className=\"workList-grade__tooltip__row\">BedTime</th>\n          <th className=\"workList-grade__tooltip__row\">WorkTimeSum</th>\n        </tr>\n      </thead>\n      <tbody>\n        {gradeInfo &&\n          keyOrderArr.map((key) => {\n            const value = gradeInfo[key];\n            return (\n              <tr key={key}>\n                <td>{strToFirstLEtterUpper(key)}</td>\n                {console.log(value)}\n                {value &&\n                  Object.values(value).map((elem) => {\n                    return (\n                      <td>\n                        {key === \"point\"\n                          ? makeElemToStar(elem)\n                          : typeof elem === \"number\"\n                          ? numToStr(elem, \"0\")\n                          : timeObjToStr(elem, \"X\")}\n                      </td>\n                    );\n                  })}\n              </tr>\n            );\n          })}\n      </tbody>\n    </table>\n  );\n  const tooltipElement = (\n    <div className=\"grade-tooltip-content\">\n      <div className=\"grade-tooltip-box\">{tableElement} </div>\n    </div>\n  );\n\n  const getGradeElement = (\n    <button\n      className=\"workList-grade__btn workList-grade__btn-init\"\n      onClick={updateInfo}\n    >\n      Get Grade ⭐\n    </button>\n  );\n  const updateGradeBtn = (\n    <button\n      className=\"workList-grade__btn workList-grade__update-btn\"\n      onClick={updateInfo}\n    >\n      {redoElement}\n    </button>\n  );\n  const displayGrade = (\n    <div className=\"workList-grade__display\">\n      <div className=\"tooltip\">\n        <GradeStarList gradeSum={gradeSum} />\n        {tooltipElement}\n      </div>\n      {updateGradeBtn}\n    </div>\n  );\n  return gradeInfo ? displayGrade : getGradeElement;\n};\n"]},"metadata":{},"sourceType":"module"}