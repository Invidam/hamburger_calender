{"ast":null,"code":"const {\n  inspect\n} = require('util');\n\nconst Key = require('./base');\n\nclass EmbeddedJWK extends Key {\n  constructor() {\n    super({\n      type: 'embedded'\n    });\n    Object.defineProperties(this, {\n      kid: {\n        value: undefined\n      },\n      kty: {\n        value: undefined\n      },\n      thumbprint: {\n        value: undefined\n      },\n      toJWK: {\n        value: undefined\n      },\n      toPEM: {\n        value: undefined\n      }\n    });\n  }\n  /* c8 ignore next 3 */\n\n\n  [inspect.custom]() {\n    return 'Embedded.JWK {}';\n  }\n\n  algorithms() {\n    return new Set();\n  }\n\n}\n\nmodule.exports = new EmbeddedJWK();","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/jose/lib/jwk/key/embedded.jwk.js"],"names":["inspect","require","Key","EmbeddedJWK","constructor","type","Object","defineProperties","kid","value","undefined","kty","thumbprint","toJWK","toPEM","custom","algorithms","Set","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,MAAD,CAA3B;;AAEA,MAAMC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,MAAME,WAAN,SAA0BD,GAA1B,CAA8B;AAC5BE,EAAAA,WAAW,GAAI;AACb,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAN;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,KAAK,EAAEC;AAAT,OADuB;AAE5BC,MAAAA,GAAG,EAAE;AAAEF,QAAAA,KAAK,EAAEC;AAAT,OAFuB;AAG5BE,MAAAA,UAAU,EAAE;AAAEH,QAAAA,KAAK,EAAEC;AAAT,OAHgB;AAI5BG,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAEC;AAAT,OAJqB;AAK5BI,MAAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAEC;AAAT;AALqB,KAA9B;AAOD;AAED;;;AACe,GAAdV,OAAO,CAACe,MAAM,IAAK;AAClB,WAAO,iBAAP;AACD;;AAEDC,EAAAA,UAAU,GAAI;AACZ,WAAO,IAAIC,GAAJ,EAAP;AACD;;AAnB2B;;AAsB9BC,MAAM,CAACC,OAAP,GAAiB,IAAIhB,WAAJ,EAAjB","sourcesContent":["const { inspect } = require('util')\n\nconst Key = require('./base')\n\nclass EmbeddedJWK extends Key {\n  constructor () {\n    super({ type: 'embedded' })\n    Object.defineProperties(this, {\n      kid: { value: undefined },\n      kty: { value: undefined },\n      thumbprint: { value: undefined },\n      toJWK: { value: undefined },\n      toPEM: { value: undefined }\n    })\n  }\n\n  /* c8 ignore next 3 */\n  [inspect.custom] () {\n    return 'Embedded.JWK {}'\n  }\n\n  algorithms () {\n    return new Set()\n  }\n}\n\nmodule.exports = new EmbeddedJWK()\n"]},"metadata":{},"sourceType":"script"}