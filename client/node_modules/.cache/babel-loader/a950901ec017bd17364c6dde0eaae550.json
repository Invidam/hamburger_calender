{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\nexport const useUpdateWork = (initList, user, date) => {\n  _s();\n\n  // console.log(\"UPDATE WORK HOOK DATE: \", date);\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\") ? JSON.parse(window.localStorage.getItem(\"workList\")) : [];\n  const [workList, setWorkList] = useState(initList);\n  if (!workList || workList.length < 1) axios({\n    headers: {\n      Authorization: \"\",\n      \"Content-Type\": \"application/json\"\n    },\n    url: `/api/${user}/${date}/worklist/worklist`,\n    method: \"get\"\n  }).then(data => {\n    if (data.data) {\n      setWorkList(data === null || data === void 0 ? void 0 : data.data);\n      window.localStorage.setItem(\"workList\", JSON.stringify(data === null || data === void 0 ? void 0 : data.data));\n    } //  else {\n    //   const emptyWorkList = [];\n    //   setWorkList([]);\n    //   window.localStorage.removeItem(\"workList\");\n    // }\n\n  });\n\n  const updateWorkList = _workList => {\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList\n    });\n    if (_workList === null || _workList === void 0 ? void 0 : _workList.length) window.localStorage.setItem(\"workList\", JSON.stringify(_workList));else window.localStorage.removeItem(\"workList\");\n  };\n\n  return [workList, updateWorkList];\n}; //:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n\n_s(useUpdateWork, \"Kpr65zpJXY6DVnKWl11hb4ikBik=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/useUpdateWork.js"],"names":["useState","axios","getToday","useUpdateWork","initList","user","date","window","localStorage","getItem","JSON","parse","workList","setWorkList","length","headers","Authorization","url","method","then","data","setItem","stringify","updateWorkList","_workList","post","value","removeItem"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,KAA0B;AAAA;;AACrD;AACA;AACAF,EAAAA,QAAQ,GAAGG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,IACPC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CADO,GAEP,EAFJ;AAGA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACI,QAAD,CAAxC;AACA,MAAI,CAACQ,QAAD,IAAaA,QAAQ,CAACE,MAAT,GAAkB,CAAnC,EACEb,KAAK,CAAC;AACJc,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,EADR;AAEP,sBAAgB;AAFT,KADL;AAKJC,IAAAA,GAAG,EAAG,QAAOZ,IAAK,IAAGC,IAAK,oBALtB;AAMJY,IAAAA,MAAM,EAAE;AANJ,GAAD,CAAL,CAOGC,IAPH,CAOSC,IAAD,IAAU;AAChB,QAAIA,IAAI,CAACA,IAAT,EAAe;AACbP,MAAAA,WAAW,CAACO,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAX;AACAb,MAAAA,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,UAA5B,EAAwCX,IAAI,CAACY,SAAL,CAAeF,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEA,IAArB,CAAxC;AACD,KAJe,CAKhB;AACA;AACA;AACA;AACA;;AACD,GAjBD;;AAkBF,QAAMG,cAAc,GAAIC,SAAD,IAAe;AACpCX,IAAAA,WAAW,CAACW,SAAD,CAAX;AACAvB,IAAAA,KAAK,CAACwB,IAAN,CAAY,QAAOpB,IAAK,IAAGC,IAAK,oBAAhC,EAAqD;AACnDD,MAAAA,IAAI,EAAE,MAD6C;AAEnDqB,MAAAA,KAAK,EAAEF;AAF4C,KAArD;AAIA,QAAIA,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAEV,MAAf,EACEP,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,UAA5B,EAAwCX,IAAI,CAACY,SAAL,CAAeE,SAAf,CAAxC,EADF,KAEKjB,MAAM,CAACC,YAAP,CAAoBmB,UAApB,CAA+B,UAA/B;AACN,GATD;;AAUA,SAAO,CAACf,QAAD,EAAWW,cAAX,CAAP;AACD,CArCM,C,CAsCP;AACA;;GAvCapB,a","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\nexport const useUpdateWork = (initList, user, date) => {\n  // console.log(\"UPDATE WORK HOOK DATE: \", date);\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\")\n    ? JSON.parse(window.localStorage.getItem(\"workList\"))\n    : [];\n  const [workList, setWorkList] = useState(initList);\n  if (!workList || workList.length < 1)\n    axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      url: `/api/${user}/${date}/worklist/worklist`,\n      method: \"get\",\n    }).then((data) => {\n      if (data.data) {\n        setWorkList(data?.data);\n        window.localStorage.setItem(\"workList\", JSON.stringify(data?.data));\n      }\n      //  else {\n      //   const emptyWorkList = [];\n      //   setWorkList([]);\n      //   window.localStorage.removeItem(\"workList\");\n      // }\n    });\n  const updateWorkList = (_workList) => {\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList,\n    });\n    if (_workList?.length)\n      window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n    else window.localStorage.removeItem(\"workList\");\n  };\n  return [workList, updateWorkList];\n};\n//:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n"]},"metadata":{},"sourceType":"module"}