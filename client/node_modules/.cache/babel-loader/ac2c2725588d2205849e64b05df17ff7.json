{"ast":null,"code":"import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"../../../../css/workList/window.css\";import{useTabs}from\"../../../../hooks/example/useTabs\";import{usePushWork}from\"../../../../hooks/workList/work/usePushWork\";import{CustomizeColor}from\"./tabs/CustomizeColor\";import{IngredientList}from\"./tabs/IngredientList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AddWorkWindow=function AddWorkWindow(props){// const {  user, date, workList, setWorkList, callback } = props;\nvar _usePushWork=usePushWork(props),onChangeWorkColor=_usePushWork.onChangeWorkColor,onChangeWorkName=_usePushWork.onChangeWorkName,onChangeWorkTime=_usePushWork.onChangeWorkTime,onSubmitWork=_usePushWork.onSubmitWork;var Recommended=/*#__PURE__*/_jsx(IngredientList,{onChangeWorkColor:onChangeWorkColor});var Favorite=/*#__PURE__*/_jsx(\"h1\",{children:\"Favorite\"});var Customize=/*#__PURE__*/_jsx(CustomizeColor,{onChangeWorkColor:onChangeWorkColor});var tabNames=[\"Recommended\",\"Favorite\",\"Customize\"];var Tabs=[Recommended,Favorite,Customize];var _useTabs=useTabs(0,Tabs),_useTabs2=_slicedToArray(_useTabs,3),currentItem=_useTabs2[0],currentIdx=_useTabs2[1],changeItem=_useTabs2[2];// if (workList.length)\n//   window.localStorage.setItem(\"workList\", JSON.stringify(workList));\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"modalWindow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modalWindow__column\",children:/*#__PURE__*/_jsx(\"span\",{className:\"addWinodw__title\",children:\"Input Work\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modalWindow__column modalWindow__inputSpace\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"modalWindow__desc modalWindow__desc-name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"modalWindow__input modalWindow__input-name\",type:\"text\",name:\"workName\",autoComplete:\"off\",onChange:function onChange(_ref){var value=_ref.target.value;return onChangeWorkName(value);}}),/*#__PURE__*/_jsx(\"span\",{className:\"modalWindow__desc modalWindow__desc-time\",children:\"Time:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"modalWindow__input modalWindow__input-time\",type:\"number\",step:\"1\",min:\"0\",max:\"24\",name:\"workTime\",placeholder:\"0\",onChange:function onChange(_ref2){var value=_ref2.target.value;return onChangeWorkTime(value);}}),\"h\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modalWindow__column\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"modalWindow__title\",children:\"Pick Color\"}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"modalWindow_column\",children:Tabs.map(function(section,idx){return/*#__PURE__*/_jsx(\"button\",{className:currentIdx===idx?\"modalWindow__tab-focus modalWindow__tab\":\"modalWindow__tab\",onClick:function onClick(event){event.preventDefault();changeItem(idx);},children:tabNames[idx]},idx);})}),/*#__PURE__*/_jsx(\"div\",{className:\"modalWindow__tab-content\",children:currentItem}),/*#__PURE__*/_jsx(\"button\",{className:\"modalWindow__submit modalWindow__btn\",onClick:onSubmitWork,children:\"SUBMIT\"})]});};/*\nhook을 사용하여 문제 해결하기.\nuseSubmit => set Name set Time set Color을 리턴하여\n각 탭에서 set Color을 사용하기. (이래야 저장한 색이 유지될듯. + 제출 시에 )\n왜냐면 네이티브가 아니기 때문이다.\n계속 submit되는 문제는 탭할 때 onTab에서 event.preventDefault()을 이용하여 해결하였음.\n\n*/","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/work/AddWorkWindow.js"],"names":["useTabs","usePushWork","CustomizeColor","IngredientList","AddWorkWindow","props","onChangeWorkColor","onChangeWorkName","onChangeWorkTime","onSubmitWork","Recommended","Favorite","Customize","tabNames","Tabs","currentItem","currentIdx","changeItem","value","target","map","section","idx","event","preventDefault"],"mappings":"uJAAA,MAAO,qCAAP,CACA,OAASA,OAAT,KAAwB,mCAAxB,CACA,OAASC,WAAT,KAA4B,6CAA5B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CACtC;AACA,iBAKIJ,WAAW,CAACI,KAAD,CALf,CACEC,iBADF,cACEA,iBADF,CAEEC,gBAFF,cAEEA,gBAFF,CAGEC,gBAHF,cAGEA,gBAHF,CAIEC,YAJF,cAIEA,YAJF,CAMA,GAAMC,CAAAA,WAAW,cAAG,KAAC,cAAD,EAAgB,iBAAiB,CAAEJ,iBAAnC,EAApB,CACA,GAAMK,CAAAA,QAAQ,cAAG,gCAAjB,CACA,GAAMC,CAAAA,SAAS,cAAG,KAAC,cAAD,EAAgB,iBAAiB,CAAEN,iBAAnC,EAAlB,CACA,GAAMO,CAAAA,QAAQ,CAAG,CAAC,aAAD,CAAgB,UAAhB,CAA4B,WAA5B,CAAjB,CACA,GAAMC,CAAAA,IAAI,CAAG,CAACJ,WAAD,CAAcC,QAAd,CAAwBC,SAAxB,CAAb,CACA,aAA8CZ,OAAO,CAAC,CAAD,CAAIc,IAAJ,CAArD,sCAAOC,WAAP,cAAoBC,UAApB,cAAgCC,UAAhC,cACA;AACA;AACA,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,qBAAf,uBACE,aAAM,SAAS,CAAC,kBAAhB,wBADF,EADF,cAIE,aAAK,SAAS,CAAC,6CAAf,wBACE,aAAM,SAAS,CAAC,0CAAhB,mBADF,cAEE,cACE,SAAS,CAAC,4CADZ,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,UAHP,CAIE,YAAY,CAAC,KAJf,CAKE,QAAQ,CAAE,2BAAaC,CAAAA,KAAb,MAAGC,MAAH,CAAaD,KAAb,OAA2BX,CAAAA,gBAAgB,CAACW,KAAD,CAA3C,EALZ,EAFF,cASE,aAAM,SAAS,CAAC,0CAAhB,mBATF,cAUE,cACE,SAAS,CAAC,4CADZ,CAEE,IAAI,CAAC,QAFP,CAGE,IAAI,CAAC,GAHP,CAIE,GAAG,CAAC,GAJN,CAKE,GAAG,CAAC,IALN,CAME,IAAI,CAAC,UANP,CAOE,WAAW,CAAC,GAPd,CAQE,QAAQ,CAAE,4BAAaA,CAAAA,KAAb,OAAGC,MAAH,CAAaD,KAAb,OAA2BV,CAAAA,gBAAgB,CAACU,KAAD,CAA3C,EARZ,EAVF,OAJF,cA0BE,aAAK,SAAS,CAAC,qBAAf,wBACE,aAAM,SAAS,CAAC,oBAAhB,wBADF,CACyD,GADzD,GA1BF,cA6BE,YAAK,SAAS,CAAC,oBAAf,UACGJ,IAAI,CAACM,GAAL,CAAS,SAACC,OAAD,CAAUC,GAAV,CAAkB,CAC1B,mBACE,eAEE,SAAS,CACPN,UAAU,GAAKM,GAAf,CACI,yCADJ,CAEI,kBALR,CAOE,OAAO,CAAE,iBAACC,KAAD,CAAW,CAClBA,KAAK,CAACC,cAAN,GACAP,UAAU,CAACK,GAAD,CAAV,CACD,CAVH,UAYGT,QAAQ,CAACS,GAAD,CAZX,EACOA,GADP,CADF,CAgBD,CAjBA,CADH,EA7BF,cAiDE,YAAK,SAAS,CAAC,0BAAf,UAA2CP,WAA3C,EAjDF,cAkDE,eACE,SAAS,CAAC,sCADZ,CAEE,OAAO,CAAEN,YAFX,oBAlDF,GADF,CA2DD,CA3EM,CA6EP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import \"../../../../css/workList/window.css\";\nimport { useTabs } from \"../../../../hooks/example/useTabs\";\nimport { usePushWork } from \"../../../../hooks/workList/work/usePushWork\";\nimport { CustomizeColor } from \"./tabs/CustomizeColor\";\nimport { IngredientList } from \"./tabs/IngredientList\";\nexport const AddWorkWindow = (props) => {\n  // const {  user, date, workList, setWorkList, callback } = props;\n  const {\n    onChangeWorkColor,\n    onChangeWorkName,\n    onChangeWorkTime,\n    onSubmitWork,\n  } = usePushWork(props);\n  const Recommended = <IngredientList onChangeWorkColor={onChangeWorkColor} />;\n  const Favorite = <h1>Favorite</h1>;\n  const Customize = <CustomizeColor onChangeWorkColor={onChangeWorkColor} />;\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const [currentItem, currentIdx, changeItem] = useTabs(0, Tabs);\n  // if (workList.length)\n  //   window.localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return (\n    <div className=\"modalWindow\">\n      <div className=\"modalWindow__column\">\n        <span className=\"addWinodw__title\">Input Work</span>\n      </div>\n      <div className=\"modalWindow__column modalWindow__inputSpace\">\n        <span className=\"modalWindow__desc modalWindow__desc-name\">Name:</span>\n        <input\n          className=\"modalWindow__input modalWindow__input-name\"\n          type=\"text\"\n          name=\"workName\"\n          autoComplete=\"off\"\n          onChange={({ target: { value } }) => onChangeWorkName(value)}\n        ></input>\n        <span className=\"modalWindow__desc modalWindow__desc-time\">Time:</span>\n        <input\n          className=\"modalWindow__input modalWindow__input-time\"\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          max=\"24\"\n          name=\"workTime\"\n          placeholder=\"0\"\n          onChange={({ target: { value } }) => onChangeWorkTime(value)}\n        ></input>\n        h\n      </div>\n      <div className=\"modalWindow__column\">\n        <span className=\"modalWindow__title\">Pick Color</span>{\" \"}\n      </div>\n      <div className=\"modalWindow_column\">\n        {Tabs.map((section, idx) => {\n          return (\n            <button\n              key={idx}\n              className={\n                currentIdx === idx\n                  ? \"modalWindow__tab-focus modalWindow__tab\"\n                  : \"modalWindow__tab\"\n              }\n              onClick={(event) => {\n                event.preventDefault();\n                changeItem(idx);\n              }}\n            >\n              {tabNames[idx]}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"modalWindow__tab-content\">{currentItem}</div>\n      <button\n        className=\"modalWindow__submit modalWindow__btn\"\n        onClick={onSubmitWork}\n      >\n        SUBMIT\n      </button>\n    </div>\n  );\n};\n\n/*\nhook을 사용하여 문제 해결하기.\nuseSubmit => set Name set Time set Color을 리턴하여\n각 탭에서 set Color을 사용하기. (이래야 저장한 색이 유지될듯. + 제출 시에 )\n왜냐면 네이티브가 아니기 때문이다.\n계속 submit되는 문제는 탭할 때 onTab에서 event.preventDefault()을 이용하여 해결하였음.\n\n*/\n"]},"metadata":{},"sourceType":"module"}