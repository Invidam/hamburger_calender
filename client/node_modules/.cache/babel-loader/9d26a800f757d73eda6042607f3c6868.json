{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/work/EmptyWork.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport \"../../../../css/modam.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"blue\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  }\n};\nexport const EmptyWork = ({\n  addWorkWindow\n}) => {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const toggleModal = () => {\n    console.log(\"OPEN\");\n    setIsOpen(!modalIsOpen);\n  };\n\n  const closeModal = () => {\n    console.log(\"CLOSE1\", modalIsOpen);\n    setIsOpen(false);\n    console.log(\"CLOSE2\", modalIsOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"empty-element workList__element-empty\",\n    onClick: openModal,\n    children: [\"Add your work\", /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      overlayClassName: \"Overlay\",\n      children: [addWorkWindow, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \" CLOSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmptyWork, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c = EmptyWork;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmptyWork\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/work/EmptyWork.js"],"names":["Modal","useState","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","overlay","position","EmptyWork","addWorkWindow","modalIsOpen","setIsOpen","openModal","toggleModal","console","log","closeModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,2BAAP;;AACAD,KAAK,CAACE,aAAN,CAAoB,OAApB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,KADE;AAEPC,IAAAA,IAAI,EAAE,KAFC;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,WAAW,EAAE,MALN;AAMPC,IAAAA,SAAS,EAAE,uBANJ;AAOPC,IAAAA,eAAe,EAAE;AAPV,GADU;AAUnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,OADH;AAEPR,IAAAA,GAAG,EAAE,CAFE;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPG,IAAAA,eAAe,EAAE;AANV;AAVU,CAArB;AAmBA,OAAO,MAAMG,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AAC9C,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BhB,QAAQ,CAAC,KAAD,CAAzC;;AACA,QAAMiB,SAAS,GAAG,MAAM;AACtBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAGA,QAAME,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAJ,IAAAA,SAAS,CAAC,CAACD,WAAF,CAAT;AACD,GAHD;;AAIA,QAAMM,UAAU,GAAG,MAAM;AACvBF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,WAAtB;AACAC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,WAAtB;AACD,GAJD;;AAMA,sBACE;AAAI,IAAA,SAAS,EAAE,uCAAf;AAAwD,IAAA,OAAO,EAAEE,SAAjE;AAAA,6CAEE,QAAC,KAAD;AACE,MAAA,MAAM,EAAEF,WADV;AAEE,MAAA,cAAc,EAAEM,UAFlB;AAGE,MAAA,KAAK,EAAEnB,YAHT;AAIE,MAAA,YAAY,EAAC,eAJf;AAKE,MAAA,gBAAgB,EAAC,SALnB;AAAA,iBAOGY,aAPH,eAQE;AAAQ,QAAA,OAAO,EAAEO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9BM;;GAAMR,S;;KAAAA,S","sourcesContent":["import Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport \"../../../../css/modam.css\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"blue\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\nexport const EmptyWork = ({ addWorkWindow }) => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const toggleModal = () => {\n    console.log(\"OPEN\");\n    setIsOpen(!modalIsOpen);\n  };\n  const closeModal = () => {\n    console.log(\"CLOSE1\", modalIsOpen);\n    setIsOpen(false);\n    console.log(\"CLOSE2\", modalIsOpen);\n  };\n\n  return (\n    <li className={\"empty-element workList__element-empty\"} onClick={openModal}>\n      Add your work\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n        overlayClassName=\"Overlay\"\n      >\n        {addWorkWindow}\n        <button onClick={closeModal}> CLOSE</button>\n      </Modal>\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}