{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { API, APIv2 } from \"../../tools/API\";\nimport { isEqualYYYYMMDateStr } from \"../../tools/time\";\nlet cancel = false;\nexport const useDateInfo = (user, date) => {\n  _s();\n\n  const [dateInfo, setDateInfo] = useState(); // const [activeDate, setActiveDate] = useState(undefined);\n  // const [isDateInfoLoad, setLoad] = useState(true);\n\n  const getUserInfo = async nextDate => {\n    try {\n      if (!nextDate) return;\n\n      if (user) {\n        // setLoad(true);\n        const data = await APIv2.workList(user, nextDate).dataInfo(); // setLoad(false);\n\n        if (!(data === null || data === void 0 ? void 0 : data.data)) throw new Error(\"Cannot found Your Work List\");\n        const response = data.data;\n        console.log(\"USER INFO SETTING STRAT\", nextDate, response);\n        if (!cancel) setDateInfo(response);\n      } else {// setDateInfo();\n      }\n    } catch (error) {\n      // setDateInfo();\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getUserInfo(date);\n    return () => cancel = true;\n  }, [user, date]);\n  return [dateInfo, getUserInfo];\n};\n\n_s(useDateInfo, \"MUyrrWvecrS4z/SOnIQmiG8sWG8=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/calendar/useDateInfo.js"],"names":["useEffect","useState","API","APIv2","isEqualYYYYMMDateStr","cancel","useDateInfo","user","date","dateInfo","setDateInfo","getUserInfo","nextDate","data","workList","dataInfo","Error","response","console","log","error","alert"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,iBAA3B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,IAAIC,MAAM,GAAG,KAAb;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC,CADyC,CAGzC;AACA;;AAEA,QAAMU,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,QAAI;AACF,UAAI,CAACA,QAAL,EAAe;;AACf,UAAIL,IAAJ,EAAU;AACR;AACA,cAAMM,IAAI,GAAG,MAAMV,KAAK,CAACW,QAAN,CAAeP,IAAf,EAAqBK,QAArB,EAA+BG,QAA/B,EAAnB,CAFQ,CAGR;;AACA,YAAI,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAJ,EAAiB,MAAM,IAAIG,KAAJ,CAAU,6BAAV,CAAN;AACjB,cAAMC,QAAQ,GAAGJ,IAAI,CAACA,IAAtB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCP,QAAvC,EAAiDK,QAAjD;AACA,YAAI,CAACZ,MAAL,EAAaK,WAAW,CAACO,QAAD,CAAX;AACd,OARD,MAQO,CACL;AACD;AACF,KAbD,CAaE,OAAOG,KAAP,EAAc;AACd;AACAC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,GAlBD;;AAmBApB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAACH,IAAD,CAAX;AAEA,WAAO,MAAOH,MAAM,GAAG,IAAvB;AACD,GAJQ,EAIN,CAACE,IAAD,EAAOC,IAAP,CAJM,CAAT;AAKA,SAAO,CAACC,QAAD,EAAWE,WAAX,CAAP;AACD,CA/BM;;GAAML,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API, APIv2 } from \"../../tools/API\";\nimport { isEqualYYYYMMDateStr } from \"../../tools/time\";\nlet cancel = false;\nexport const useDateInfo = (user, date) => {\n  const [dateInfo, setDateInfo] = useState();\n\n  // const [activeDate, setActiveDate] = useState(undefined);\n  // const [isDateInfoLoad, setLoad] = useState(true);\n\n  const getUserInfo = async (nextDate) => {\n    try {\n      if (!nextDate) return;\n      if (user) {\n        // setLoad(true);\n        const data = await APIv2.workList(user, nextDate).dataInfo();\n        // setLoad(false);\n        if (!data?.data) throw new Error(\"Cannot found Your Work List\");\n        const response = data.data;\n        console.log(\"USER INFO SETTING STRAT\", nextDate, response);\n        if (!cancel) setDateInfo(response);\n      } else {\n        // setDateInfo();\n      }\n    } catch (error) {\n      // setDateInfo();\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    getUserInfo(date);\n\n    return () => (cancel = true);\n  }, [user, date]);\n  return [dateInfo, getUserInfo];\n};\n"]},"metadata":{},"sourceType":"module"}