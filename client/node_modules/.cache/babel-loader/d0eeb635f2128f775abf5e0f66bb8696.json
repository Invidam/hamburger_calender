{"ast":null,"code":"import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"../../../../css/workList/window.css\";import{useTabs}from\"../../../../hooks/example/useTabs\";import{useEditWork}from\"../../../../hooks/workList/work/useEditWork\";import{CustomizeColor}from\"./tabs/CustomizeColor\";import{IngredientList}from\"./tabs/IngredientList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var EditWorkWindow=function EditWorkWindow(_ref){var workItem=_ref.workItem,setWork=_ref.setWork,callback=_ref.callback;// const { id } = workItem;\nvar _useEditWork=useEditWork(workItem,setWork,callback),onChangeWorkColor=_useEditWork.onChangeWorkColor,onChangeWorkName=_useEditWork.onChangeWorkName,onChangeWorkTime=_useEditWork.onChangeWorkTime,onEditWork=_useEditWork.onEditWork;var Recommended=/*#__PURE__*/_jsx(IngredientList,{onChangeWorkColor:onChangeWorkColor});var Favorite=/*#__PURE__*/_jsx(\"h1\",{children:\"Favorite\"});var Customize=/*#__PURE__*/_jsx(CustomizeColor,{onChangeWorkColor:onChangeWorkColor});var tabNames=[\"Recommended\",\"Favorite\",\"Customize\"];var Tabs=[Recommended,Favorite,Customize];var _useTabs=useTabs(0,Tabs),_useTabs2=_slicedToArray(_useTabs,3),currentItem=_useTabs2[0],currentIdx=_useTabs2[1],changeItem=_useTabs2[2];console.log(\"[EDITWINDOW]\");return/*#__PURE__*/_jsxs(\"div\",{className:\"modalWindow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modalWindow__column\",children:/*#__PURE__*/_jsx(\"span\",{className:\"addWinodw__title\",children:\"Input Work\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modalWindow__column modalWindow__inputSpace\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"modalWindow__desc modalWindow__desc-name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"modalWindow__input modalWindow__input-name\",type:\"text\",name:\"workName\",autoComplete:\"off\",defaultValue:workItem===null||workItem===void 0?void 0:workItem.workName,onChange:function onChange(_ref2){var value=_ref2.target.value;return onChangeWorkName(value);}}),/*#__PURE__*/_jsx(\"span\",{className:\"modalWindow__desc modalWindow__desc-time\",children:\"Time:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"modalWindow__input modalWindow__input-time\",type:\"number\",step:\"1\",min:\"0\",max:\"24\",name:\"workTime\",placeholder:\"0\",defaultValue:workItem===null||workItem===void 0?void 0:workItem.workTime,onChange:function onChange(_ref3){var value=_ref3.target.value;return onChangeWorkTime(value);}}),\"h\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modalWindow__column\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"addWinodw__title\",children:\"Pick Color\"}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"modalWindow_column\",children:Tabs.map(function(section,idx){return/*#__PURE__*/_jsx(\"button\",{className:currentIdx===idx?\"modalWindow__tab-focus modalWindow__tab\":\"modalWindow__tab\",onClick:function onClick(event){event.preventDefault();changeItem(idx);},children:tabNames[idx]},idx);})}),/*#__PURE__*/_jsx(\"div\",{className:\"modalWindow__tab-content\",children:currentItem}),/*#__PURE__*/_jsx(\"button\",{className:\"modalWindow__submit modalWindow__btn\",onClick:onEditWork,children:\"SUBMIT\"})]});};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/work/EditWorkWindow.js"],"names":["useTabs","useEditWork","CustomizeColor","IngredientList","EditWorkWindow","workItem","setWork","callback","onChangeWorkColor","onChangeWorkName","onChangeWorkTime","onEditWork","Recommended","Favorite","Customize","tabNames","Tabs","currentItem","currentIdx","changeItem","console","log","workName","value","target","workTime","map","section","idx","event","preventDefault"],"mappings":"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","sourcesContent":["import \"../../../../css/workList/window.css\";\nimport { useTabs } from \"../../../../hooks/example/useTabs\";\nimport { useEditWork } from \"../../../../hooks/workList/work/useEditWork\";\nimport { CustomizeColor } from \"./tabs/CustomizeColor\";\nimport { IngredientList } from \"./tabs/IngredientList\";\nexport const EditWorkWindow = ({ workItem, setWork, callback }) => {\n  // const { id } = workItem;\n  const { onChangeWorkColor, onChangeWorkName, onChangeWorkTime, onEditWork } =\n    useEditWork(workItem, setWork, callback);\n  const Recommended = <IngredientList onChangeWorkColor={onChangeWorkColor} />;\n  const Favorite = <h1>Favorite</h1>;\n  const Customize = <CustomizeColor onChangeWorkColor={onChangeWorkColor} />;\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const [currentItem, currentIdx, changeItem] = useTabs(0, Tabs);\n  console.log(\"[EDITWINDOW]\");\n  return (\n    <div className=\"modalWindow\">\n      <div className=\"modalWindow__column\">\n        <span className=\"addWinodw__title\">Input Work</span>\n      </div>\n      <div className=\"modalWindow__column modalWindow__inputSpace\">\n        <span className=\"modalWindow__desc modalWindow__desc-name\">Name:</span>\n        <input\n          className=\"modalWindow__input modalWindow__input-name\"\n          type=\"text\"\n          name=\"workName\"\n          autoComplete=\"off\"\n          defaultValue={workItem?.workName}\n          onChange={({ target: { value } }) => onChangeWorkName(value)}\n        ></input>\n        <span className=\"modalWindow__desc modalWindow__desc-time\">Time:</span>\n        <input\n          className=\"modalWindow__input modalWindow__input-time\"\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          max=\"24\"\n          name=\"workTime\"\n          placeholder=\"0\"\n          defaultValue={workItem?.workTime}\n          onChange={({ target: { value } }) => onChangeWorkTime(value)}\n        ></input>\n        h\n      </div>\n      <div className=\"modalWindow__column\">\n        <span className=\"addWinodw__title\">Pick Color</span>{\" \"}\n      </div>\n      <div className=\"modalWindow_column\">\n        {Tabs.map((section, idx) => {\n          return (\n            <button\n              key={idx}\n              className={\n                currentIdx === idx\n                  ? \"modalWindow__tab-focus modalWindow__tab\"\n                  : \"modalWindow__tab\"\n              }\n              onClick={(event) => {\n                event.preventDefault();\n                changeItem(idx);\n              }}\n            >\n              {tabNames[idx]}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"modalWindow__tab-content\">{currentItem}</div>\n      <button\n        className=\"modalWindow__submit modalWindow__btn\"\n        onClick={onEditWork}\n      >\n        SUBMIT\n      </button>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}