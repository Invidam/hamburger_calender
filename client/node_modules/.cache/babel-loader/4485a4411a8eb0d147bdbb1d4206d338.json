{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import isEmail from\"validator/lib/isEmail\";import{useState}from\"react\";import{API}from\"../../tools/API\";var isUserName=function isUserName(username){return!/[^\\w]/.exec(username);};export var useAttemptSignup=function useAttemptSignup(_ref){var history=_ref.history,locaiton=_ref.locaiton;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var handleAttemptSignup=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var errText,_errText;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log(\"CONNET ON REACT-REGISTER page: \");console.log(username,email,password);if(!(!isEmail(email)||!isUserName(username))){_context.next=9;break;}errText=\"\";if(!isEmail(email))errText+=\"Email\";if(!isEmail(email)&&!isUserName(username))errText+=\" and \";if(!isUserName(username))errText+=\"UserName\";throw new Error(\"Unexpected \".concat(errText,\" Form. Please chek your \").concat(errText,\".\"));case 9:if(!(!username||!email||!password)){_context.next=12;break;}_errText=\"[ERROR] \".concat(username?\"\":\"Username\").concat(!email+!password>0&&!username?\", \":\"\").concat(email?\"\":\"Email\").concat(!password>0&&!email?\", \":\"\").concat(password?\"\":\"Password\",\" \").concat(!username+!email+!password>1?\"are\":\"is\",\" not entered.\");throw _errText;case 12:_context.next=14;return API.auth().signup({username:username,email:email,password:password});case 14:// await API.post(\"/auth/signup\", {\n//   username,\n//   email,\n//   password,\n// });\nalert(\"Sign up complete. \\nLogin your entered email & password\");history.push(\"/login\");_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);alert(_context.t0);case 21:case\"end\":return _context.stop();}}},_callee,null,[[0,18]]);}));return function handleAttemptSignup(){return _ref2.apply(this,arguments);};}();return{username:username,setUsername:setUsername,email:email,setEmail:setEmail,password:password,setPassword:setPassword,handleAttemptSignup:handleAttemptSignup};};//","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useAttemptSignup.js"],"names":["isEmail","useState","API","isUserName","username","exec","useAttemptSignup","history","locaiton","setUsername","email","setEmail","password","setPassword","handleAttemptSignup","console","log","errText","Error","auth","signup","alert","push"],"mappings":"kcAAA,MAAOA,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,GAAT,KAAoB,iBAApB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,QAAc,CAAC,QAAQC,IAAR,CAAaD,QAAb,CAAf,EAAnB,CAEA,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAA2B,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,CACzD,cAAgCP,QAAQ,CAAC,EAAD,CAAxC,wCAAOG,QAAP,eAAiBK,WAAjB,eACA,eAA0BR,QAAQ,CAAC,EAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eACA,eAAgCV,QAAQ,CAAC,EAAD,CAAxC,yCAAOW,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,mBAAmB,2FAAG,wKAExBC,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACAD,OAAO,CAACC,GAAR,CAAYZ,QAAZ,CAAsBM,KAAtB,CAA6BE,QAA7B,EAHwB,KAIpB,CAACZ,OAAO,CAACU,KAAD,CAAR,EAAmB,CAACP,UAAU,CAACC,QAAD,CAJV,0BAKlBa,OALkB,CAKR,EALQ,CAMtB,GAAI,CAACjB,OAAO,CAACU,KAAD,CAAZ,CAAqBO,OAAO,EAAI,OAAX,CACrB,GAAI,CAACjB,OAAO,CAACU,KAAD,CAAR,EAAmB,CAACP,UAAU,CAACC,QAAD,CAAlC,CAA8Ca,OAAO,EAAI,OAAX,CAC9C,GAAI,CAACd,UAAU,CAACC,QAAD,CAAf,CAA2Ba,OAAO,EAAI,UAAX,CARL,KAShB,IAAIC,CAAAA,KAAJ,sBACUD,OADV,oCAC4CA,OAD5C,MATgB,aAapB,CAACb,QAAD,EAAa,CAACM,KAAd,EAAuB,CAACE,QAbJ,2BAclBK,QAdkB,mBAcGb,QAAQ,CAAG,EAAH,CAAQ,UAdnB,SAepB,CAACM,KAAD,CAAS,CAACE,QAAV,CAAqB,CAArB,EAA0B,CAACR,QAA3B,CAAsC,IAAtC,CAA6C,EAfzB,SAgBnBM,KAAK,CAAG,EAAH,CAAQ,OAhBM,SAgBI,CAACE,QAAD,CAAY,CAAZ,EAAiB,CAACF,KAAlB,CAA0B,IAA1B,CAAiC,EAhBrC,SAiBpBE,QAAQ,CAAG,EAAH,CAAQ,UAjBI,aAkBlB,CAACR,QAAD,CAAY,CAACM,KAAb,CAAqB,CAACE,QAAtB,CAAiC,CAAjC,CAAqC,KAArC,CAA6C,IAlB3B,uBAmBhBK,CAAAA,QAnBgB,gCAqBlBf,CAAAA,GAAG,CAACiB,IAAJ,GAAWC,MAAX,CAAkB,CACtBhB,QAAQ,CAARA,QADsB,CAEtBM,KAAK,CAALA,KAFsB,CAGtBE,QAAQ,CAARA,QAHsB,CAAlB,CArBkB,SA0BxB;AACA;AACA;AACA;AACA;AACAS,KAAK,2DAAL,CACAd,OAAO,CAACe,IAAR,CAAa,QAAb,EAhCwB,iFAkCxBD,KAAK,aAAL,CAlCwB,qEAAH,kBAAnBP,CAAAA,mBAAmB,2CAAzB,CAqCA,MAAO,CACLV,QAAQ,CAARA,QADK,CAELK,WAAW,CAAXA,WAFK,CAGLC,KAAK,CAALA,KAHK,CAILC,QAAQ,CAARA,QAJK,CAKLC,QAAQ,CAARA,QALK,CAMLC,WAAW,CAAXA,WANK,CAOLC,mBAAmB,CAAnBA,mBAPK,CAAP,CASD,CAlDM,CAoDP","sourcesContent":["import isEmail from \"validator/lib/isEmail\";\nimport { useState } from \"react\";\nimport { API } from \"../../tools/API\";\n\nconst isUserName = (username) => !/[^\\w]/.exec(username);\n\nexport const useAttemptSignup = ({ history, locaiton }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleAttemptSignup = async () => {\n    try {\n      console.log(\"CONNET ON REACT-REGISTER page: \");\n      console.log(username, email, password);\n      if (!isEmail(email) || !isUserName(username)) {\n        let errText = \"\";\n        if (!isEmail(email)) errText += \"Email\";\n        if (!isEmail(email) && !isUserName(username)) errText += \" and \";\n        if (!isUserName(username)) errText += \"UserName\";\n        throw new Error(\n          `Unexpected ${errText} Form. Please chek your ${errText}.`\n        );\n      }\n      if (!username || !email || !password) {\n        let errText = `[ERROR] ${username ? \"\" : \"Username\"}${\n          !email + !password > 0 && !username ? \", \" : \"\"\n        }${email ? \"\" : \"Email\"}${!password > 0 && !email ? \", \" : \"\"}${\n          password ? \"\" : \"Password\"\n        } ${!username + !email + !password > 1 ? \"are\" : \"is\"} not entered.`;\n        throw errText;\n      }\n      await API.auth().signup({\n        username,\n        email,\n        password,\n      });\n      // await API.post(\"/auth/signup\", {\n      //   username,\n      //   email,\n      //   password,\n      // });\n      alert(`Sign up complete. \\nLogin your entered email & password`);\n      history.push(\"/login\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return {\n    username,\n    setUsername,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleAttemptSignup,\n  };\n};\n\n//\n"]},"metadata":{},"sourceType":"module"}