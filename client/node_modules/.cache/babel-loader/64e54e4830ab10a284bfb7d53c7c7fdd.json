{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { useEffect } from \"react\";\nexport const GithubLoginPage = ({\n  history,\n  location\n}) => {\n  _s();\n\n  // const {code} =\n  console.log(\"locat\", location.search);\n  useEffect(() => {\n    const getToken = async () => {\n      const {\n        code\n      } = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n\n      try {\n        const {\n          access_token\n        } = await axios.post(\"/api/login/github, {code}\");\n        localStorage.setItem(\"access_token\", access_token);\n        history.push(\"/\");\n      } catch (error) {\n        alert(error);\n        history.push(\"/\");\n      }\n    };\n\n    getToken();\n  }, [location, history]);\n};\n\n_s(GithubLoginPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GithubLoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubLoginPage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/pages/GithubLoginPage.js"],"names":["axios","qs","useEffect","GithubLoginPage","history","location","console","log","search","getToken","code","parse","ignoreQueryPrefix","access_token","post","localStorage","setItem","push","error","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAAA;;AACxD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,QAAQ,CAACG,MAA9B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,QAAQ,GAAG,YAAY;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAWT,EAAE,CAACU,KAAH,CAASN,QAAQ,CAACG,MAAlB,EAA0B;AACzCI,QAAAA,iBAAiB,EAAE;AADsB,OAA1B,CAAjB;;AAGA,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAmB,MAAMb,KAAK,CAACc,IAAN,CAAW,2BAAX,CAA/B;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,YAArC;AACAT,QAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACAd,QAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD;AACF,KAZD;;AAaAR,IAAAA,QAAQ;AACT,GAfQ,EAeN,CAACJ,QAAD,EAAWD,OAAX,CAfM,CAAT;AAgBD,CAnBM;;GAAMD,e;;KAAAA,e","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nimport { useEffect } from \"react\";\nexport const GithubLoginPage = ({ history, location }) => {\n  // const {code} =\n  console.log(\"locat\", location.search);\n  useEffect(() => {\n    const getToken = async () => {\n      const { code } = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n      });\n      try {\n        const { access_token } = await axios.post(\"/api/login/github, {code}\");\n        localStorage.setItem(\"access_token\", access_token);\n        history.push(\"/\");\n      } catch (error) {\n        alert(error);\n        history.push(\"/\");\n      }\n    };\n    getToken();\n  }, [location, history]);\n};\n"]},"metadata":{},"sourceType":"module"}