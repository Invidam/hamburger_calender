{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { SORT_TYPE_CNT } from \"../../components/todoList/TodoList\"; // import { SORT_TYPE_CNT } from \"../../components/todoList/TodoListTemplate\";\n\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\n\nconst makeSortTypeStr = idx => {\n  let ret = {};\n  ret[\"type\"] = Math.floor(idx / SORT_TYPE_CNT) === 0 ? \"date\" : \"priority\";\n  ret[\"direction\"] = idx % 2 === 0 ? \"up\" : \"down\";\n  return ret;\n};\n\nexport const useTodoList = (user, initSortTypeIdx, sortTypeCnt, sortTypes) => {\n  _s();\n\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(false);\n  const [sortTypeIdx, setSortTypeIdx] = useState(initSortTypeIdx);\n\n  const getNextSortType = idx => (idx + 1) % sortTypes === 0 ? idx - sortTypes + 1 : idx + 1;\n\n  const onClickByTabIdx = tabIdx => {\n    // 같은 소속이었다면\n    if (Math.floor(sortTypeIdx / sortTypes) === tabIdx) setSortTypeIdx(getNextSortType(sortTypeIdx));else setSortTypeIdx(tabIdx * sortTypeCnt + 1);\n  };\n\n  const getTodoList = async (user, sortTypeIdx) => {\n    try {\n      if (user) {\n        setLoad(true);\n        console.log(\"SORT\", sortTypeIdx);\n        const data = await APIv2.todoList(user).get(makeSortTypeStr(sortTypeIdx));\n        setLoad(false);\n        const resTodoList = data === null || data === void 0 ? void 0 : data.data;\n        if (!data) throw new Error(\"TodoList can't found\");\n        console.log(\"INDI, RES TODO LIST: \", resTodoList);\n        setTodoList(typeof resTodoList === \"string\" ? JSON.parse(resTodoList) : resTodoList);\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getTodoList(user, sortTypeIdx);\n  }, [user, sortTypeIdx]);\n\n  const setTodo = (todoObj, idx) => {\n    const id = todoObj.id; //const _todoList = { ...todoList };\n\n    let _todoList = todoList.concat();\n\n    return {\n      create: async () => {\n        //_todoList[id] = todoObj;\n        _todoList.push([id, todoObj]);\n\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).create(todoObj);else LocalStroage.todoList().set(_todoList);\n      },\n      edit: async () => {\n        _todoList[idx] = [id, todoObj];\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).edit(todoObj);else LocalStroage.todoList().set(_todoList);\n      },\n      delete: async () => {\n        // if (!delete _todoList[id]) throw new Error(\"Cannot Delete TodoItem\");\n        _todoList = _todoList.filter((el, elemIdx) => elemIdx !== idx);\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).delete(todoObj);else LocalStroage.todoList().set(_todoList);\n      }\n    };\n  };\n\n  return [todoList, setTodo, isTodoListLoading, getNextSortType, onClickByTabIdx];\n};\n\n_s(useTodoList, \"3KXL1aGKmnc2Ksld5iZ7xgG+fU4=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodoList.js"],"names":["useEffect","useState","SORT_TYPE_CNT","APIv2","LocalStroage","makeSortTypeStr","idx","ret","Math","floor","useTodoList","user","initSortTypeIdx","sortTypeCnt","sortTypes","todoList","setTodoList","isTodoListLoading","setLoad","sortTypeIdx","setSortTypeIdx","getNextSortType","onClickByTabIdx","tabIdx","getTodoList","console","log","data","get","resTodoList","Error","JSON","parse","error","alert","setTodo","todoObj","id","_todoList","concat","create","push","todo","set","edit","delete","filter","el","elemIdx"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { SORT_TYPE_CNT } from \"../../components/todoList/TodoList\";\n// import { SORT_TYPE_CNT } from \"../../components/todoList/TodoListTemplate\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\n\nconst makeSortTypeStr = (idx) => {\n  let ret = {};\n  ret[\"type\"] = Math.floor(idx / SORT_TYPE_CNT) === 0 ? \"date\" : \"priority\";\n  ret[\"direction\"] = idx % 2 === 0 ? \"up\" : \"down\";\n  return ret;\n};\nexport const useTodoList = (user, initSortTypeIdx, sortTypeCnt, sortTypes) => {\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(false);\n  const [sortTypeIdx, setSortTypeIdx] = useState(initSortTypeIdx);\n  const getNextSortType = (idx) =>\n    (idx + 1) % sortTypes === 0 ? idx - sortTypes + 1 : idx + 1;\n  const onClickByTabIdx = (tabIdx) => {\n    // 같은 소속이었다면\n    if (Math.floor(sortTypeIdx / sortTypes) === tabIdx)\n      setSortTypeIdx(getNextSortType(sortTypeIdx));\n    else setSortTypeIdx(tabIdx * sortTypeCnt + 1);\n  };\n  const getTodoList = async (user, sortTypeIdx) => {\n    try {\n      if (user) {\n        setLoad(true);\n        console.log(\"SORT\", sortTypeIdx);\n        const data = await APIv2.todoList(user).get(\n          makeSortTypeStr(sortTypeIdx)\n        );\n        setLoad(false);\n        const resTodoList = data?.data;\n        if (!data) throw new Error(\"TodoList can't found\");\n        console.log(\"INDI, RES TODO LIST: \", resTodoList);\n        setTodoList(\n          typeof resTodoList === \"string\"\n            ? JSON.parse(resTodoList)\n            : resTodoList\n        );\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    getTodoList(user, sortTypeIdx);\n  }, [user, sortTypeIdx]);\n\n  const setTodo = (todoObj, idx) => {\n    const id = todoObj.id;\n    //const _todoList = { ...todoList };\n    let _todoList = todoList.concat();\n    return {\n      create: async () => {\n        //_todoList[id] = todoObj;\n        _todoList.push([id, todoObj]);\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).create(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n      edit: async () => {\n        _todoList[idx] = [id, todoObj];\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).edit(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n      delete: async () => {\n        // if (!delete _todoList[id]) throw new Error(\"Cannot Delete TodoItem\");\n        _todoList = _todoList.filter((el, elemIdx) => elemIdx !== idx);\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).delete(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n    };\n  };\n  return [\n    todoList,\n    setTodo,\n    isTodoListLoading,\n    getNextSortType,\n    onClickByTabIdx,\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}