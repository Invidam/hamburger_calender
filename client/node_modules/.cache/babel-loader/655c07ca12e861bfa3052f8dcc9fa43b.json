{"ast":null,"code":"/*! firebase-admin v9.11.1 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FirebaseAppCheckError = exports.APP_CHECK_ERROR_CODE_MAPPING = exports.AppCheckApiClient = void 0;\n\nvar api_request_1 = require(\"../utils/api-request\");\n\nvar error_1 = require(\"../utils/error\");\n\nvar utils = require(\"../utils/index\");\n\nvar validator = require(\"../utils/validator\"); // App Check backend constants\n\n\nvar FIREBASE_APP_CHECK_V1_API_URL_FORMAT = 'https://firebaseappcheck.googleapis.com/v1beta/projects/{projectId}/apps/{appId}:exchangeCustomToken';\nvar FIREBASE_APP_CHECK_CONFIG_HEADERS = {\n  'X-Firebase-Client': \"fire-admin-node/\" + utils.getSdkVersion()\n};\n/**\n * Class that facilitates sending requests to the Firebase App Check backend API.\n *\n * @internal\n */\n\nvar AppCheckApiClient = function () {\n  function AppCheckApiClient(app) {\n    this.app = app;\n\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new FirebaseAppCheckError('invalid-argument', 'First argument passed to admin.appCheck() must be a valid Firebase app instance.');\n    }\n\n    this.httpClient = new api_request_1.AuthorizedHttpClient(app);\n  }\n  /**\n   * Exchange a signed custom token to App Check token\n   *\n   * @param customToken The custom token to be exchanged.\n   * @param appId The mobile App ID.\n   * @return A promise that fulfills with a `AppCheckToken`.\n   */\n\n\n  AppCheckApiClient.prototype.exchangeToken = function (customToken, appId) {\n    var _this = this;\n\n    if (!validator.isNonEmptyString(appId)) {\n      throw new FirebaseAppCheckError('invalid-argument', '`appId` must be a non-empty string.');\n    }\n\n    if (!validator.isNonEmptyString(customToken)) {\n      throw new FirebaseAppCheckError('invalid-argument', '`customToken` must be a non-empty string.');\n    }\n\n    return this.getUrl(appId).then(function (url) {\n      var request = {\n        method: 'POST',\n        url: url,\n        headers: FIREBASE_APP_CHECK_CONFIG_HEADERS,\n        data: {\n          customToken: customToken\n        }\n      };\n      return _this.httpClient.send(request);\n    }).then(function (resp) {\n      return _this.toAppCheckToken(resp);\n    }).catch(function (err) {\n      throw _this.toFirebaseError(err);\n    });\n  };\n\n  AppCheckApiClient.prototype.getUrl = function (appId) {\n    return this.getProjectId().then(function (projectId) {\n      var urlParams = {\n        projectId: projectId,\n        appId: appId\n      };\n      var baseUrl = utils.formatString(FIREBASE_APP_CHECK_V1_API_URL_FORMAT, urlParams);\n      return utils.formatString(baseUrl);\n    });\n  };\n\n  AppCheckApiClient.prototype.getProjectId = function () {\n    var _this = this;\n\n    if (this.projectId) {\n      return Promise.resolve(this.projectId);\n    }\n\n    return utils.findProjectId(this.app).then(function (projectId) {\n      if (!validator.isNonEmptyString(projectId)) {\n        throw new FirebaseAppCheckError('unknown-error', 'Failed to determine project ID. Initialize the ' + 'SDK with service account credentials or set project ID as an app option. ' + 'Alternatively, set the GOOGLE_CLOUD_PROJECT environment variable.');\n      }\n\n      _this.projectId = projectId;\n      return projectId;\n    });\n  };\n\n  AppCheckApiClient.prototype.toFirebaseError = function (err) {\n    if (err instanceof error_1.PrefixedFirebaseError) {\n      return err;\n    }\n\n    var response = err.response;\n\n    if (!response.isJson()) {\n      return new FirebaseAppCheckError('unknown-error', \"Unexpected response with status: \" + response.status + \" and body: \" + response.text);\n    }\n\n    var error = response.data.error || {};\n    var code = 'unknown-error';\n\n    if (error.status && error.status in exports.APP_CHECK_ERROR_CODE_MAPPING) {\n      code = exports.APP_CHECK_ERROR_CODE_MAPPING[error.status];\n    }\n\n    var message = error.message || \"Unknown server error: \" + response.text;\n    return new FirebaseAppCheckError(code, message);\n  };\n  /**\n   * Creates an AppCheckToken from the API response.\n   *\n   * @param resp API response object.\n   * @return An AppCheckToken instance.\n   */\n\n\n  AppCheckApiClient.prototype.toAppCheckToken = function (resp) {\n    var token = resp.data.attestationToken; // `ttl` is a string with the suffix \"s\" preceded by the number of seconds,\n    // with nanoseconds expressed as fractional seconds.\n\n    var ttlMillis = this.stringToMilliseconds(resp.data.ttl);\n    return {\n      token: token,\n      ttlMillis: ttlMillis\n    };\n  };\n  /**\n   * Converts a duration string with the suffix `s` to milliseconds.\n   *\n   * @param duration The duration as a string with the suffix \"s\" preceded by the\n   * number of seconds, with fractional seconds. For example, 3 seconds with 0 nanoseconds\n   * is expressed as \"3s\", while 3 seconds and 1 nanosecond is expressed as \"3.000000001s\",\n   * and 3 seconds and 1 microsecond is expressed as \"3.000001s\".\n   *\n   * @return The duration in milliseconds.\n   */\n\n\n  AppCheckApiClient.prototype.stringToMilliseconds = function (duration) {\n    if (!validator.isNonEmptyString(duration) || !duration.endsWith('s')) {\n      throw new FirebaseAppCheckError('invalid-argument', '`ttl` must be a valid duration string with the suffix `s`.');\n    }\n\n    var seconds = duration.slice(0, -1);\n    return Math.floor(Number(seconds) * 1000);\n  };\n\n  return AppCheckApiClient;\n}();\n\nexports.AppCheckApiClient = AppCheckApiClient;\nexports.APP_CHECK_ERROR_CODE_MAPPING = {\n  ABORTED: 'aborted',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_CREDENTIAL: 'invalid-credential',\n  INTERNAL: 'internal-error',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  NOT_FOUND: 'not-found',\n  UNKNOWN: 'unknown-error'\n};\n/**\n * Firebase App Check error code structure. This extends PrefixedFirebaseError.\n *\n * @param {AppCheckErrorCode} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\n\nvar FirebaseAppCheckError = function (_super) {\n  __extends(FirebaseAppCheckError, _super);\n\n  function FirebaseAppCheckError(code, message) {\n    var _this = _super.call(this, 'app-check', code, message) || this;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    /* tslint:enable:max-line-length */\n\n\n    _this.__proto__ = FirebaseAppCheckError.prototype;\n    return _this;\n  }\n\n  return FirebaseAppCheckError;\n}(error_1.PrefixedFirebaseError);\n\nexports.FirebaseAppCheckError = FirebaseAppCheckError;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/firebase-admin/lib/app-check/app-check-api-client-internal.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","FirebaseAppCheckError","APP_CHECK_ERROR_CODE_MAPPING","AppCheckApiClient","api_request_1","require","error_1","utils","validator","FIREBASE_APP_CHECK_V1_API_URL_FORMAT","FIREBASE_APP_CHECK_CONFIG_HEADERS","getSdkVersion","app","isNonNullObject","httpClient","AuthorizedHttpClient","exchangeToken","customToken","appId","_this","isNonEmptyString","getUrl","then","url","request","method","headers","data","send","resp","toAppCheckToken","catch","err","toFirebaseError","getProjectId","projectId","urlParams","baseUrl","formatString","Promise","resolve","findProjectId","PrefixedFirebaseError","response","isJson","status","text","error","code","message","token","attestationToken","ttlMillis","stringToMilliseconds","ttl","duration","endsWith","seconds","slice","Math","floor","Number","ABORTED","INVALID_ARGUMENT","INVALID_CREDENTIAL","INTERNAL","PERMISSION_DENIED","UNAUTHENTICATED","NOT_FOUND","UNKNOWN","_super","call"],"mappings":"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","sourcesContent":["/*! firebase-admin v9.11.1 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FirebaseAppCheckError = exports.APP_CHECK_ERROR_CODE_MAPPING = exports.AppCheckApiClient = void 0;\nvar api_request_1 = require(\"../utils/api-request\");\nvar error_1 = require(\"../utils/error\");\nvar utils = require(\"../utils/index\");\nvar validator = require(\"../utils/validator\");\n// App Check backend constants\nvar FIREBASE_APP_CHECK_V1_API_URL_FORMAT = 'https://firebaseappcheck.googleapis.com/v1beta/projects/{projectId}/apps/{appId}:exchangeCustomToken';\nvar FIREBASE_APP_CHECK_CONFIG_HEADERS = {\n    'X-Firebase-Client': \"fire-admin-node/\" + utils.getSdkVersion()\n};\n/**\n * Class that facilitates sending requests to the Firebase App Check backend API.\n *\n * @internal\n */\nvar AppCheckApiClient = /** @class */ (function () {\n    function AppCheckApiClient(app) {\n        this.app = app;\n        if (!validator.isNonNullObject(app) || !('options' in app)) {\n            throw new FirebaseAppCheckError('invalid-argument', 'First argument passed to admin.appCheck() must be a valid Firebase app instance.');\n        }\n        this.httpClient = new api_request_1.AuthorizedHttpClient(app);\n    }\n    /**\n     * Exchange a signed custom token to App Check token\n     *\n     * @param customToken The custom token to be exchanged.\n     * @param appId The mobile App ID.\n     * @return A promise that fulfills with a `AppCheckToken`.\n     */\n    AppCheckApiClient.prototype.exchangeToken = function (customToken, appId) {\n        var _this = this;\n        if (!validator.isNonEmptyString(appId)) {\n            throw new FirebaseAppCheckError('invalid-argument', '`appId` must be a non-empty string.');\n        }\n        if (!validator.isNonEmptyString(customToken)) {\n            throw new FirebaseAppCheckError('invalid-argument', '`customToken` must be a non-empty string.');\n        }\n        return this.getUrl(appId)\n            .then(function (url) {\n            var request = {\n                method: 'POST',\n                url: url,\n                headers: FIREBASE_APP_CHECK_CONFIG_HEADERS,\n                data: { customToken: customToken }\n            };\n            return _this.httpClient.send(request);\n        })\n            .then(function (resp) {\n            return _this.toAppCheckToken(resp);\n        })\n            .catch(function (err) {\n            throw _this.toFirebaseError(err);\n        });\n    };\n    AppCheckApiClient.prototype.getUrl = function (appId) {\n        return this.getProjectId()\n            .then(function (projectId) {\n            var urlParams = {\n                projectId: projectId,\n                appId: appId,\n            };\n            var baseUrl = utils.formatString(FIREBASE_APP_CHECK_V1_API_URL_FORMAT, urlParams);\n            return utils.formatString(baseUrl);\n        });\n    };\n    AppCheckApiClient.prototype.getProjectId = function () {\n        var _this = this;\n        if (this.projectId) {\n            return Promise.resolve(this.projectId);\n        }\n        return utils.findProjectId(this.app)\n            .then(function (projectId) {\n            if (!validator.isNonEmptyString(projectId)) {\n                throw new FirebaseAppCheckError('unknown-error', 'Failed to determine project ID. Initialize the '\n                    + 'SDK with service account credentials or set project ID as an app option. '\n                    + 'Alternatively, set the GOOGLE_CLOUD_PROJECT environment variable.');\n            }\n            _this.projectId = projectId;\n            return projectId;\n        });\n    };\n    AppCheckApiClient.prototype.toFirebaseError = function (err) {\n        if (err instanceof error_1.PrefixedFirebaseError) {\n            return err;\n        }\n        var response = err.response;\n        if (!response.isJson()) {\n            return new FirebaseAppCheckError('unknown-error', \"Unexpected response with status: \" + response.status + \" and body: \" + response.text);\n        }\n        var error = response.data.error || {};\n        var code = 'unknown-error';\n        if (error.status && error.status in exports.APP_CHECK_ERROR_CODE_MAPPING) {\n            code = exports.APP_CHECK_ERROR_CODE_MAPPING[error.status];\n        }\n        var message = error.message || \"Unknown server error: \" + response.text;\n        return new FirebaseAppCheckError(code, message);\n    };\n    /**\n     * Creates an AppCheckToken from the API response.\n     *\n     * @param resp API response object.\n     * @return An AppCheckToken instance.\n     */\n    AppCheckApiClient.prototype.toAppCheckToken = function (resp) {\n        var token = resp.data.attestationToken;\n        // `ttl` is a string with the suffix \"s\" preceded by the number of seconds,\n        // with nanoseconds expressed as fractional seconds.\n        var ttlMillis = this.stringToMilliseconds(resp.data.ttl);\n        return {\n            token: token,\n            ttlMillis: ttlMillis\n        };\n    };\n    /**\n     * Converts a duration string with the suffix `s` to milliseconds.\n     *\n     * @param duration The duration as a string with the suffix \"s\" preceded by the\n     * number of seconds, with fractional seconds. For example, 3 seconds with 0 nanoseconds\n     * is expressed as \"3s\", while 3 seconds and 1 nanosecond is expressed as \"3.000000001s\",\n     * and 3 seconds and 1 microsecond is expressed as \"3.000001s\".\n     *\n     * @return The duration in milliseconds.\n     */\n    AppCheckApiClient.prototype.stringToMilliseconds = function (duration) {\n        if (!validator.isNonEmptyString(duration) || !duration.endsWith('s')) {\n            throw new FirebaseAppCheckError('invalid-argument', '`ttl` must be a valid duration string with the suffix `s`.');\n        }\n        var seconds = duration.slice(0, -1);\n        return Math.floor(Number(seconds) * 1000);\n    };\n    return AppCheckApiClient;\n}());\nexports.AppCheckApiClient = AppCheckApiClient;\nexports.APP_CHECK_ERROR_CODE_MAPPING = {\n    ABORTED: 'aborted',\n    INVALID_ARGUMENT: 'invalid-argument',\n    INVALID_CREDENTIAL: 'invalid-credential',\n    INTERNAL: 'internal-error',\n    PERMISSION_DENIED: 'permission-denied',\n    UNAUTHENTICATED: 'unauthenticated',\n    NOT_FOUND: 'not-found',\n    UNKNOWN: 'unknown-error',\n};\n/**\n * Firebase App Check error code structure. This extends PrefixedFirebaseError.\n *\n * @param {AppCheckErrorCode} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\nvar FirebaseAppCheckError = /** @class */ (function (_super) {\n    __extends(FirebaseAppCheckError, _super);\n    function FirebaseAppCheckError(code, message) {\n        var _this = _super.call(this, 'app-check', code, message) || this;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        _this.__proto__ = FirebaseAppCheckError.prototype;\n        return _this;\n    }\n    return FirebaseAppCheckError;\n}(error_1.PrefixedFirebaseError));\nexports.FirebaseAppCheckError = FirebaseAppCheckError;\n"]},"metadata":{},"sourceType":"script"}