{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/client/src/components/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport \"../../css/pages/pages.css\";\nimport { useAttemptLogin } from \"../../hooks/user/useAttemptLogin\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { LoadingElement } from \"../Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst element = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faGithub\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 17\n}, this);\n\nexport const LoginPage = ({\n  customLoginHook,\n  history,\n  location\n}) => {\n  _s();\n\n  const [,,, login] = customLoginHook;\n  const [email, setEmail, password, setPassword, handleSubmitNotSocial, authUrl, isLoginPageLoading] = useAttemptLogin(login, history);\n  console.log(\"RES LOADL \", isLoginPageLoading);\n  return isLoginPageLoading ? /*#__PURE__*/_jsxDEV(LoadingElement, {\n    text: \"LoginPage Loading. . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"url: \", authUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"load: \", isLoginPageLoading]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"page-input-box__input page-input-box__input-email\",\n        value: email,\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setEmail(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"page-input-box__input page-input-box__input-password\",\n        value: password,\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: ({\n          target: {\n            value\n          }\n        }) => setPassword(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-input-box__btn page-input-box__btn-login\",\n        onClick: handleSubmitNotSocial,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"page-input-box__btn page-input-box__btn-github\",\n        href: authUrl,\n        children: [element, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"page-input-box__btn-text\",\n          children: \" Github Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"Q3RCpKdMqn3RezwCEf+S8As0Lx0=\", false, function () {\n  return [useAttemptLogin];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/components/pages/LoginPage.js"],"names":["useAttemptLogin","FontAwesomeIcon","faGithub","LoadingElement","element","LoginPage","customLoginHook","history","location","login","email","setEmail","password","setPassword","handleSubmitNotSocial","authUrl","isLoginPageLoading","console","log","target","value"],"mappings":";;;AAAA,OAAO,2BAAP;AACA,SAASA,eAAT,QAAgC,kCAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,OAAO,gBAAG,QAAC,eAAD;AAAiB,EAAA,IAAI,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,QAAhB;;AAEA,OAAO,MAAMG,SAAS,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AACnE,QAAM,KAAOC,KAAP,IAAgBH,eAAtB;AAEA,QAAM,CACJI,KADI,EAEJC,QAFI,EAGJC,QAHI,EAIJC,WAJI,EAKJC,qBALI,EAMJC,OANI,EAOJC,kBAPI,IAQFhB,eAAe,CAACS,KAAD,EAAQF,OAAR,CARnB;AASAU,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,kBAA1B;AACA,SAAOA,kBAAkB,gBACvB,QAAC,cAAD;AAAgB,IAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,UADuB,gBAGvB;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4BAAUD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,6BAAWC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AACE,QAAA,SAAS,EAAC,mDADZ;AAEE,QAAA,KAAK,EAAEN,KAFT;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,OAJd;AAKE,QAAA,QAAQ,EAAE,CAAC;AAAES,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV,SAAD,KAA2BT,QAAQ,CAACS,KAAD;AAL/C;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AACE,QAAA,SAAS,EAAC,sDADZ;AAEE,QAAA,KAAK,EAAER,QAFT;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,WAAW,EAAC,UAJd;AAKE,QAAA,QAAQ,EAAE,CAAC;AAAEO,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV,SAAD,KAA2BP,WAAW,CAACO,KAAD;AALlD;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AACE,QAAA,SAAS,EAAC,+CADZ;AAEE,QAAA,OAAO,EAAEN,qBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAwBE;AACE,QAAA,SAAS,EAAC,gDADZ;AAEE,QAAA,IAAI,EAAEC,OAFR;AAAA,mBAIGX,OAJH,eAKE;AAAM,UAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAsCD,CAnDM;;GAAMC,S;UAWPL,e;;;KAXOK,S","sourcesContent":["import \"../../css/pages/pages.css\";\nimport { useAttemptLogin } from \"../../hooks/user/useAttemptLogin\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { LoadingElement } from \"../Loading\";\n\nconst element = <FontAwesomeIcon icon={faGithub} />;\n\nexport const LoginPage = ({ customLoginHook, history, location }) => {\n  const [, , , login] = customLoginHook;\n\n  const [\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleSubmitNotSocial,\n    authUrl,\n    isLoginPageLoading,\n  ] = useAttemptLogin(login, history);\n  console.log(\"RES LOADL \", isLoginPageLoading);\n  return isLoginPageLoading ? (\n    <LoadingElement text={\"LoginPage Loading. . .\"} />\n  ) : (\n    <section className=\"page\">\n      <div className=\"page-input-box\">\n        <h1>Login Page</h1>\n        <h2>url: {authUrl}</h2>\n        <h2>load: {isLoginPageLoading}</h2>\n        <input\n          className=\"page-input-box__input page-input-box__input-email\"\n          value={email}\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={({ target: { value } }) => setEmail(value)}\n        />\n        <input\n          className=\"page-input-box__input page-input-box__input-password\"\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={({ target: { value } }) => setPassword(value)}\n        />\n        <button\n          className=\"page-input-box__btn page-input-box__btn-login\"\n          onClick={handleSubmitNotSocial}\n        >\n          Login\n        </button>\n        <a\n          className=\"page-input-box__btn page-input-box__btn-github\"\n          href={authUrl}\n        >\n          {element}\n          <span className=\"page-input-box__btn-text\"> Github Login</span>\n        </a>\n      </div>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}