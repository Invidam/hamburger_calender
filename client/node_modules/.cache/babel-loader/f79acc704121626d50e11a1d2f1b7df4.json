{"ast":null,"code":"/* global BigInt */\nconst {\n  inherits\n} = require('util');\n\nconst {\n  DecoderBuffer\n} = require('../base/buffer');\n\nconst Node = require('../base/node'); // Import DER constants\n\n\nconst der = require('../constants/der');\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity; // Construct base tree\n\n  this.tree = new DERNode();\n\n  this.tree._init(entity.body);\n}\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n}; // Tree methods\n\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\n\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty()) {\n    return false;\n  }\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, `Failed to peek tag: \"${tag}\"`);\n\n  if (buffer.isError(decodedTag)) {\n    return decodedTag;\n  }\n\n  buffer.restore(state);\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + 'of' === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer, `Failed to decode tag of \"${tag}\"`);\n\n  if (buffer.isError(decodedTag)) {\n    return decodedTag;\n  }\n\n  let len = derDecodeLen(buffer, decodedTag.primitive, `Failed to get length of \"${tag}\"`); // Failure\n\n  if (buffer.isError(len)) {\n    return len;\n  }\n\n  if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error(`Failed to match tag: \"${tag}\"`);\n  }\n\n  if (decodedTag.primitive || len !== null) {\n    return buffer.skip(len, `Failed to match body of: \"${tag}\"`);\n  } // Indefinite length... find END tag\n\n\n  const state = buffer.save();\n\n  const res = this._skipUntilEnd(buffer, `Failed to skip indefinite length body: \"${this.tag}\"`);\n\n  if (buffer.isError(res)) {\n    return res;\n  }\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, `Failed to match body of: \"${tag}\"`);\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n\n    if (buffer.isError(tag)) {\n      return tag;\n    }\n\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n\n    if (buffer.isError(len)) {\n      return len;\n    }\n\n    let res;\n\n    if (tag.primitive || len !== null) {\n      res = buffer.skip(len);\n    } else {\n      res = this._skipUntilEnd(buffer, fail);\n    } // Failure\n\n\n    if (buffer.isError(res)) {\n      return res;\n    }\n\n    if (tag.tagStr === 'end') {\n      break;\n    }\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {\n  const result = [];\n\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n\n    if (buffer.isError(possibleEnd)) {\n      return possibleEnd;\n    }\n\n    const res = decoder.decode(buffer, 'der', options);\n\n    if (buffer.isError(res) && possibleEnd) {\n      break;\n    }\n\n    result.push(res);\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n\n    if (buffer.isError(unused)) {\n      return unused;\n    }\n\n    return {\n      unused: unused,\n      data: buffer.raw()\n    };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n\n    if (raw.length % 2 === 1) {\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n    }\n\n    let str = '';\n\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: numstr unsupported characters');\n    }\n\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: printstr unsupported characters');\n    }\n\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error(`Decoding of string type: ${tag} unsupported`);\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n\n  if (subident & 0x80) {\n    identifiers.push(ident);\n  }\n\n  const first = identifiers[0] / 40 | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative) {\n    result = identifiers;\n  } else {\n    result = [first, second].concat(identifiers.slice(1));\n  }\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n\n    if (tmp === undefined) {\n      tmp = values[result.join('.')];\n    }\n\n    if (tmp !== undefined) {\n      result = tmp;\n    }\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n\n    if (year < 70) {\n      year = 2000 + year;\n    } else {\n      year = 1900 + year;\n    }\n  } else {\n    return buffer.error(`Decoding ${tag} time is not supported yet`);\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n\n  if (buffer.isError(res)) {\n    return res;\n  } else {\n    return res !== 0;\n  }\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = BigInt(`0x${raw.toString('hex')}`);\n\n  if (values) {\n    res = values[res.toString(10)] || res;\n  }\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function') {\n    entity = entity(obj);\n  }\n\n  return entity._getDecoder('der').tree;\n}; // Utility methods\n\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n\n  if (buf.isError(tag)) {\n    return tag;\n  }\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0; // Multi-octet tag - load\n\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n\n      if (buf.isError(oct)) {\n        return oct;\n      }\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n\n  const tagStr = der.tag[tag];\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n\n  if (buf.isError(len)) {\n    return len;\n  } // Indefinite form\n\n\n  if (!primitive && len === 0x80) {\n    return null;\n  } // Definite form\n\n\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  } // Long form\n\n\n  const num = len & 0x7f;\n\n  if (num > 4) {\n    return buf.error('length octect is too long');\n  }\n\n  len = 0;\n\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n\n    if (buf.isError(j)) {\n      return j;\n    }\n\n    len |= j;\n  }\n\n  return len;\n}\n\nmodule.exports = DERDecoder;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/@panva/asn1.js/lib/asn1/decoders/der.js"],"names":["inherits","require","DecoderBuffer","Node","der","DERDecoder","entity","enc","name","tree","DERNode","_init","body","prototype","decode","data","options","isDecoderBuffer","_decode","parent","call","_peekTag","peekTag","buffer","tag","any","isEmpty","state","save","decodedTag","derDecodeTag","isError","restore","tagStr","_decodeTag","decodeTag","len","derDecodeLen","primitive","error","skip","res","_skipUntilEnd","offset","skipUntilEnd","fail","_decodeList","decodeList","decoder","result","possibleEnd","push","_decodeStr","decodeStr","unused","readUInt8","raw","length","str","i","String","fromCharCode","readUInt16BE","numstr","toString","_isNumstr","printstr","_isPrintstr","test","_decodeObjid","decodeObjid","values","relative","identifiers","ident","subident","first","second","concat","slice","tmp","join","undefined","_decodeTime","decodeTime","year","mon","day","hour","min","sec","Date","UTC","_decodeNull","decodeNull","_decodeBool","decodeBool","_decodeInt","decodeInt","BigInt","_use","use","obj","_getDecoder","buf","cls","tagClass","oct","num","j","module","exports"],"mappings":"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","sourcesContent":["/* global BigInt */\nconst { inherits } = require('util')\n\nconst { DecoderBuffer } = require('../base/buffer')\nconst Node = require('../base/node')\n\n// Import DER constants\nconst der = require('../constants/der')\n\nfunction DERDecoder (entity) {\n  this.enc = 'der'\n  this.name = entity.name\n  this.entity = entity\n\n  // Construct base tree\n  this.tree = new DERNode()\n  this.tree._init(entity.body)\n}\n\nDERDecoder.prototype.decode = function decode (data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options)\n  }\n\n  return this.tree._decode(data, options)\n}\n\n// Tree methods\n\nfunction DERNode (parent) {\n  Node.call(this, 'der', parent)\n}\ninherits(DERNode, Node)\n\nDERNode.prototype._peekTag = function peekTag (buffer, tag, any) {\n  if (buffer.isEmpty()) { return false }\n\n  const state = buffer.save()\n  const decodedTag = derDecodeTag(buffer, `Failed to peek tag: \"${tag}\"`)\n  if (buffer.isError(decodedTag)) { return decodedTag }\n\n  buffer.restore(state)\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || (decodedTag.tagStr + 'of') === tag || any\n}\n\nDERNode.prototype._decodeTag = function decodeTag (buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    `Failed to decode tag of \"${tag}\"`)\n  if (buffer.isError(decodedTag)) { return decodedTag }\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    `Failed to get length of \"${tag}\"`)\n\n  // Failure\n  if (buffer.isError(len)) { return len }\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error(`Failed to match tag: \"${tag}\"`)\n  }\n\n  if (decodedTag.primitive || len !== null) { return buffer.skip(len, `Failed to match body of: \"${tag}\"`) }\n\n  // Indefinite length... find END tag\n  const state = buffer.save()\n  const res = this._skipUntilEnd(\n    buffer,\n    `Failed to skip indefinite length body: \"${this.tag}\"`)\n  if (buffer.isError(res)) { return res }\n\n  len = buffer.offset - state.offset\n  buffer.restore(state)\n  return buffer.skip(len, `Failed to match body of: \"${tag}\"`)\n}\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd (buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail)\n    if (buffer.isError(tag)) { return tag }\n    const len = derDecodeLen(buffer, tag.primitive, fail)\n    if (buffer.isError(len)) { return len }\n\n    let res\n    if (tag.primitive || len !== null) { res = buffer.skip(len) } else { res = this._skipUntilEnd(buffer, fail) }\n\n    // Failure\n    if (buffer.isError(res)) { return res }\n\n    if (tag.tagStr === 'end') { break }\n  }\n}\n\nDERNode.prototype._decodeList = function decodeList (buffer, tag, decoder,\n  options) {\n  const result = []\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end')\n    if (buffer.isError(possibleEnd)) { return possibleEnd }\n\n    const res = decoder.decode(buffer, 'der', options)\n    if (buffer.isError(res) && possibleEnd) { break }\n    result.push(res)\n  }\n  return result\n}\n\nDERNode.prototype._decodeStr = function decodeStr (buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8()\n    if (buffer.isError(unused)) { return unused }\n    return { unused: unused, data: buffer.raw() }\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw()\n    if (raw.length % 2 === 1) { return buffer.error('Decoding of string type: bmpstr length mismatch') }\n\n    let str = ''\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2))\n    }\n    return str\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii')\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: numstr unsupported characters')\n    }\n    return numstr\n  } else if (tag === 'octstr') {\n    return buffer.raw()\n  } else if (tag === 'objDesc') {\n    return buffer.raw()\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii')\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: printstr unsupported characters')\n    }\n    return printstr\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString()\n  } else {\n    return buffer.error(`Decoding of string type: ${tag} unsupported`)\n  }\n}\n\nDERNode.prototype._decodeObjid = function decodeObjid (buffer, values, relative) {\n  let result\n  const identifiers = []\n  let ident = 0\n  let subident = 0\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8()\n    ident <<= 7\n    ident |= subident & 0x7f\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident)\n      ident = 0\n    }\n  }\n  if (subident & 0x80) { identifiers.push(ident) }\n\n  const first = (identifiers[0] / 40) | 0\n  const second = identifiers[0] % 40\n\n  if (relative) { result = identifiers } else { result = [first, second].concat(identifiers.slice(1)) }\n\n  if (values) {\n    let tmp = values[result.join(' ')]\n    if (tmp === undefined) { tmp = values[result.join('.')] }\n    if (tmp !== undefined) { result = tmp }\n  }\n\n  return result\n}\n\nDERNode.prototype._decodeTime = function decodeTime (buffer, tag) {\n  const str = buffer.raw().toString()\n\n  let year\n  let mon\n  let day\n  let hour\n  let min\n  let sec\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0\n    mon = str.slice(4, 6) | 0\n    day = str.slice(6, 8) | 0\n    hour = str.slice(8, 10) | 0\n    min = str.slice(10, 12) | 0\n    sec = str.slice(12, 14) | 0\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0\n    mon = str.slice(2, 4) | 0\n    day = str.slice(4, 6) | 0\n    hour = str.slice(6, 8) | 0\n    min = str.slice(8, 10) | 0\n    sec = str.slice(10, 12) | 0\n    if (year < 70) { year = 2000 + year } else { year = 1900 + year }\n  } else {\n    return buffer.error(`Decoding ${tag} time is not supported yet`)\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0)\n}\n\nDERNode.prototype._decodeNull = function decodeNull () {\n  return null\n}\n\nDERNode.prototype._decodeBool = function decodeBool (buffer) {\n  const res = buffer.readUInt8()\n  if (buffer.isError(res)) { return res } else { return res !== 0 }\n}\n\nDERNode.prototype._decodeInt = function decodeInt (buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw()\n  let res = BigInt(`0x${raw.toString('hex')}`)\n\n  if (values) {\n    res = values[res.toString(10)] || res\n  }\n\n  return res\n}\n\nDERNode.prototype._use = function use (entity, obj) {\n  if (typeof entity === 'function') { entity = entity(obj) }\n  return entity._getDecoder('der').tree\n}\n\n// Utility methods\n\nfunction derDecodeTag (buf, fail) {\n  let tag = buf.readUInt8(fail)\n  if (buf.isError(tag)) { return tag }\n\n  const cls = der.tagClass[tag >> 6]\n  const primitive = (tag & 0x20) === 0\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag\n    tag = 0\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail)\n      if (buf.isError(oct)) { return oct }\n\n      tag <<= 7\n      tag |= oct & 0x7f\n    }\n  } else {\n    tag &= 0x1f\n  }\n  const tagStr = der.tag[tag]\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  }\n}\n\nfunction derDecodeLen (buf, primitive, fail) {\n  let len = buf.readUInt8(fail)\n  if (buf.isError(len)) { return len }\n\n  // Indefinite form\n  if (!primitive && len === 0x80) { return null }\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len\n  }\n\n  // Long form\n  const num = len & 0x7f\n  if (num > 4) { return buf.error('length octect is too long') }\n\n  len = 0\n  for (let i = 0; i < num; i++) {\n    len <<= 8\n    const j = buf.readUInt8(fail)\n    if (buf.isError(j)) { return j }\n    len |= j\n  }\n\n  return len\n}\n\nmodule.exports = DERDecoder\n"]},"metadata":{},"sourceType":"script"}