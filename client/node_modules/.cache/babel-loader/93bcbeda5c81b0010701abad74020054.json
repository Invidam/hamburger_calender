{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\";\nimport \"./css/calendar.css\";\nimport { CalendarTemplate } from \"./components/calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"./hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"./hooks/workList/work/useUpdateWork\";\nimport { useEffect, useState } from \"react\";\nimport { changeFormatYYYYMMDD } from \"./tools/time\";\nimport axios from \"axios\";\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { NotFoundPage } from \"./components/pages/NotFoundPage\";\nimport { LoginPage } from \"./components/pages/LoginPage\";\nimport { HomePage } from \"./components/pages/HomePage\";\nimport { Header } from \"./components/Header\";\nimport { useLogin } from \"./hooks/user/useLogin\";\nimport { useSetDate } from \"./hooks/date/useSetDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER = \"TEST\";\n\nfunction App() {\n  _s();\n\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useSetDate();\n  console.log(\"HOOK DATE: \", updateDateHook);\n  const date = changeFormatYYYYMMDD(updateDateHook[0]); // const [t1, t2] = useSetDate();\n  // console.log(t1, t2);\n  //{ user, setUser, authenticated, login, logout }\n\n  const customLoginHook = useLogin();\n  const user = customLoginHook[0];\n  console.log(\"USER: \", user);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      date: date,\n      customLoginHook: customLoginHook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage,\n          updateDateHook: updateDateHook,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: props => /*#__PURE__*/_jsxDEV(LoginPage, {\n            customLoginHook: customLoginHook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DErJUP+ZOuK4cY48hO+B5/rLhnE=\", false, function () {\n  return [useSetDate, useLogin];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/App.js"],"names":["WorkListTemplate","CalendarTemplate","useUpdateTime","useUpdateWork","useEffect","useState","changeFormatYYYYMMDD","axios","Link","Route","Switch","BrowserRouter","Router","NotFoundPage","LoginPage","HomePage","Header","useLogin","useSetDate","USER","App","updateDateHook","console","log","date","customLoginHook","user","props"],"mappings":";;;AAAA;AACA,OAAO,eAAP;AACA,SAASA,gBAAT,QAAiC,wCAAjC;AACA,OAAO,oBAAP;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,aAAa,IAAIC,MAA/C,QAA6D,kBAA7D;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,MAAMC,IAAI,GAAG,MAAb;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA,QAAMC,cAAc,GAAGH,UAAU,EAAjC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,cAA3B;AACA,QAAMG,IAAI,GAAGlB,oBAAoB,CAACe,cAAc,CAAC,CAAD,CAAf,CAAjC,CAPa,CAQb;AACA;AACA;;AACA,QAAMI,eAAe,GAAGR,QAAQ,EAAhC;AACA,QAAMS,IAAI,GAAGD,eAAe,CAAC,CAAD,CAA5B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,IAAtB;AACA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF,IAAd;AAAoB,MAAA,eAAe,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,GAFP;AAGE,UAAA,SAAS,EAAEV,QAHb;AAIE,UAAA,cAAc,EAAEM,cAJlB;AAKE,UAAA,IAAI,EAAEK;AALR;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,MAAM,EAAGC,KAAD,iBAAW,QAAC,SAAD;AAAW,YAAA,eAAe,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFrB;AAAA;AAAA;AAAA;AAAA,gBARF,eAYE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEZ;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApCQO,G;UAKgBF,U,EAMCD,Q;;;KAXjBG,G;AAsCT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\";\nimport \"./css/calendar.css\";\nimport { CalendarTemplate } from \"./components/calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"./hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"./hooks/workList/work/useUpdateWork\";\nimport { useEffect, useState } from \"react\";\nimport { changeFormatYYYYMMDD } from \"./tools/time\";\nimport axios from \"axios\";\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { NotFoundPage } from \"./components/pages/NotFoundPage\";\nimport { LoginPage } from \"./components/pages/LoginPage\";\nimport { HomePage } from \"./components/pages/HomePage\";\nimport { Header } from \"./components/Header\";\nimport { useLogin } from \"./hooks/user/useLogin\";\nimport { useSetDate } from \"./hooks/date/useSetDate\";\n\nconst USER = \"TEST\";\nfunction App() {\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useSetDate();\n  console.log(\"HOOK DATE: \", updateDateHook);\n  const date = changeFormatYYYYMMDD(updateDateHook[0]);\n  // const [t1, t2] = useSetDate();\n  // console.log(t1, t2);\n  //{ user, setUser, authenticated, login, logout }\n  const customLoginHook = useLogin();\n  const user = customLoginHook[0];\n  console.log(\"USER: \", user);\n  return (\n    <Router>\n      <Header date={date} customLoginHook={customLoginHook} />\n      <main>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={HomePage}\n            updateDateHook={updateDateHook}\n            user={user}\n          />\n          <Route\n            path=\"/login\"\n            render={(props) => <LoginPage customLoginHook={customLoginHook} />}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </main>\n      <footer>footer</footer>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}