{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nexport const GithubLoginPage = ({\n  history,\n  location\n}) => {\n  // const {code} =\n  console.log(\"locat\", location.search);\n\n  const getTokeb = async () => {\n    const {\n      code\n    } = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n\n    try {\n      const {\n        access_token\n      } = await axios.post(\"/api/login/github, {code}\");\n      localStorage.setItem(\"access_token\", access_token);\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      history.push(\"/\");\n    }\n  };\n};\n_c = GithubLoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubLoginPage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/pages/GithubLoginPage.js"],"names":["axios","qs","GithubLoginPage","history","location","console","log","search","getTokeb","code","parse","ignoreQueryPrefix","access_token","post","localStorage","setItem","push","error","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AACxD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,QAAQ,CAACG,MAA9B;;AACA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAWR,EAAE,CAACS,KAAH,CAASN,QAAQ,CAACG,MAAlB,EAA0B;AACzCI,MAAAA,iBAAiB,EAAE;AADsB,KAA1B,CAAjB;;AAGA,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAmB,MAAMZ,KAAK,CAACa,IAAN,CAAW,2BAAX,CAA/B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,YAArC;AACAT,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACAd,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD;AACF,GAZD;AAaD,CAhBM;KAAMd,e","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nexport const GithubLoginPage = ({ history, location }) => {\n  // const {code} =\n  console.log(\"locat\", location.search);\n  const getTokeb = async () => {\n    const { code } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    try {\n      const { access_token } = await axios.post(\"/api/login/github, {code}\");\n      localStorage.setItem(\"access_token\", access_token);\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      history.push(\"/\");\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}