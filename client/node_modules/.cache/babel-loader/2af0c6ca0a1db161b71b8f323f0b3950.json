{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const usePushWork = validator => {\n  _s();\n\n  const [value, setValue] = useState([]);\n\n  const onSubmit = event => {\n    const workName = event.target.workName.value;\n    const workTime = event.target.workTime.value;\n    const workObj = {\n      work: workName,\n      time: workTime\n    };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(workObj);\n\n    if (willUpdate) {\n      setValue(value.push(workObj));\n    } // return value;\n\n  };\n\n  return {\n    value,\n    onSubmitWork\n  };\n};\n\n_s(usePushWork, \"nXyUXLCLqjbO8MhWxJGJNfpoKZM=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/usePushWork.js"],"names":["useState","usePushWork","validator","value","setValue","onSubmit","event","workName","target","workTime","workObj","work","time","willUpdate","push","onSubmitWork"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,WAAW,GAAIC,SAAD,IAAe;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMK,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaD,QAAb,CAAsBJ,KAAvC;AACA,UAAMM,QAAQ,GAAGH,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBN,KAAvC;AACA,UAAMO,OAAO,GAAG;AAAEC,MAAAA,IAAI,EAAEJ,QAAR;AAAkBK,MAAAA,IAAI,EAAEH;AAAxB,KAAhB;AACA,QAAII,UAAU,GAAG,IAAjB;AACA,QAAI,OAAOX,SAAP,KAAqB,UAAzB,EAAqCW,UAAU,GAAGX,SAAS,CAACQ,OAAD,CAAtB;;AACrC,QAAIG,UAAJ,EAAgB;AACdT,MAAAA,QAAQ,CAACD,KAAK,CAACW,IAAN,CAAWJ,OAAX,CAAD,CAAR;AACD,KARyB,CAS1B;;AACD,GAVD;;AAWA,SAAO;AAAEP,IAAAA,KAAF;AAASY,IAAAA;AAAT,GAAP;AACD,CAdM;;GAAMd,W","sourcesContent":["import { useState } from \"react\";\n\nexport const usePushWork = (validator) => {\n  const [value, setValue] = useState([]);\n  const onSubmit = (event) => {\n    const workName = event.target.workName.value;\n    const workTime = event.target.workTime.value;\n    const workObj = { work: workName, time: workTime };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(workObj);\n    if (willUpdate) {\n      setValue(value.push(workObj));\n    }\n    // return value;\n  };\n  return { value, onSubmitWork };\n};\n"]},"metadata":{},"sourceType":"module"}