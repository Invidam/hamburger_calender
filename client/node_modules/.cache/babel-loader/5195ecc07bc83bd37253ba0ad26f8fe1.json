{"ast":null,"code":"const {\n  strict: assert\n} = require('assert');\n\nconst {\n  inspect\n} = require('util');\n\nconst {\n  EOL\n} = require('os');\n\nconst {\n  keyObjectSupported\n} = require('../../help/runtime_support');\n\nconst {\n  createPublicKey\n} = require('../../help/key_object');\n\nconst {\n  keyObjectToJWK\n} = require('../../help/key_utils');\n\nconst {\n  THUMBPRINT_MATERIAL,\n  PUBLIC_MEMBERS,\n  PRIVATE_MEMBERS,\n  JWK_MEMBERS,\n  KEYOBJECT,\n  USES_MAPPING,\n  OPS,\n  USES\n} = require('../../help/consts');\n\nconst isObject = require('../../help/is_object');\n\nconst thumbprint = require('../thumbprint');\n\nconst errors = require('../../errors');\n\nconst privateApi = Symbol('privateApi');\n\nconst {\n  JWK\n} = require('../../registry');\n\nclass Key {\n  constructor(keyObject, {\n    alg,\n    use,\n    kid,\n    key_ops: ops,\n    x5c,\n    x5t,\n    'x5t#S256': x5t256\n  } = {}) {\n    if (use !== undefined) {\n      if (typeof use !== 'string' || !USES.has(use)) {\n        throw new TypeError('`use` must be either \"sig\" or \"enc\" string when provided');\n      }\n    }\n\n    if (alg !== undefined) {\n      if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('`alg` must be a non-empty string when provided');\n      }\n    }\n\n    if (kid !== undefined) {\n      if (typeof kid !== 'string' || !kid) {\n        throw new TypeError('`kid` must be a non-empty string when provided');\n      }\n    }\n\n    if (ops !== undefined) {\n      if (!Array.isArray(ops) || !ops.length || ops.some(o => typeof o !== 'string')) {\n        throw new TypeError('`key_ops` must be a non-empty array of strings when provided');\n      }\n\n      ops = Array.from(new Set(ops)).filter(x => OPS.has(x));\n    }\n\n    if (ops && use) {\n      if (use === 'enc' && ops.some(x => USES_MAPPING.sig.has(x)) || use === 'sig' && ops.some(x => USES_MAPPING.enc.has(x))) {\n        throw new errors.JWKInvalid('inconsistent JWK \"use\" and \"key_ops\"');\n      }\n    }\n\n    if (keyObjectSupported && x5c !== undefined) {\n      if (!Array.isArray(x5c) || !x5c.length || x5c.some(c => typeof c !== 'string')) {\n        throw new TypeError('`x5c` must be an array of one or more PKIX certificates when provided');\n      }\n\n      x5c.forEach((cert, i) => {\n        let publicKey;\n\n        try {\n          publicKey = createPublicKey({\n            key: `-----BEGIN CERTIFICATE-----${EOL}${(cert.match(/.{1,64}/g) || []).join(EOL)}${EOL}-----END CERTIFICATE-----`,\n            format: 'pem'\n          });\n        } catch (err) {\n          throw new errors.JWKInvalid(`\\`x5c\\` member at index ${i} is not a valid base64-encoded DER PKIX certificate`);\n        }\n\n        if (i === 0) {\n          try {\n            assert.deepEqual(publicKey.export({\n              type: 'spki',\n              format: 'der'\n            }), (keyObject.type === 'public' ? keyObject : createPublicKey(keyObject)).export({\n              type: 'spki',\n              format: 'der'\n            }));\n          } catch (err) {\n            throw new errors.JWKInvalid('The key in the first `x5c` certificate MUST match the public key represented by the JWK');\n          }\n        }\n      });\n    }\n\n    Object.defineProperties(this, {\n      [KEYOBJECT]: {\n        value: isObject(keyObject) ? undefined : keyObject\n      },\n      keyObject: {\n        get() {\n          if (!keyObjectSupported) {\n            throw new errors.JOSENotSupported('KeyObject class is not supported in your Node.js runtime version');\n          }\n\n          return this[KEYOBJECT];\n        }\n\n      },\n      type: {\n        value: keyObject.type\n      },\n      private: {\n        value: keyObject.type === 'private'\n      },\n      public: {\n        value: keyObject.type === 'public'\n      },\n      secret: {\n        value: keyObject.type === 'secret'\n      },\n      alg: {\n        value: alg,\n        enumerable: alg !== undefined\n      },\n      use: {\n        value: use,\n        enumerable: use !== undefined\n      },\n      x5c: {\n        enumerable: x5c !== undefined,\n        ...(x5c ? {\n          get() {\n            return [...x5c];\n          }\n\n        } : {\n          value: undefined\n        })\n      },\n      key_ops: {\n        enumerable: ops !== undefined,\n        ...(ops ? {\n          get() {\n            return [...ops];\n          }\n\n        } : {\n          value: undefined\n        })\n      },\n      kid: {\n        enumerable: true,\n        ...(kid ? {\n          value: kid\n        } : {\n          get() {\n            Object.defineProperty(this, 'kid', {\n              value: this.thumbprint,\n              configurable: false\n            });\n            return this.kid;\n          },\n\n          configurable: true\n        })\n      },\n      ...(x5c ? {\n        x5t: {\n          enumerable: true,\n          ...(x5t ? {\n            value: x5t\n          } : {\n            get() {\n              Object.defineProperty(this, 'x5t', {\n                value: thumbprint.x5t(this.x5c[0]),\n                configurable: false\n              });\n              return this.x5t;\n            },\n\n            configurable: true\n          })\n        }\n      } : undefined),\n      ...(x5c ? {\n        'x5t#S256': {\n          enumerable: true,\n          ...(x5t256 ? {\n            value: x5t256\n          } : {\n            get() {\n              Object.defineProperty(this, 'x5t#S256', {\n                value: thumbprint['x5t#S256'](this.x5c[0]),\n                configurable: false\n              });\n              return this['x5t#S256'];\n            },\n\n            configurable: true\n          })\n        }\n      } : undefined),\n      thumbprint: {\n        get() {\n          Object.defineProperty(this, 'thumbprint', {\n            value: thumbprint.kid(this[THUMBPRINT_MATERIAL]()),\n            configurable: false\n          });\n          return this.thumbprint;\n        },\n\n        configurable: true\n      }\n    });\n  }\n\n  toPEM(priv = false, encoding = {}) {\n    if (this.secret) {\n      throw new TypeError('symmetric keys cannot be exported as PEM');\n    }\n\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private');\n    }\n\n    const {\n      type = priv ? 'pkcs8' : 'spki',\n      cipher,\n      passphrase\n    } = encoding;\n    let keyObject = this[KEYOBJECT];\n\n    if (!priv) {\n      if (this.private) {\n        keyObject = createPublicKey(keyObject);\n      }\n\n      if (cipher || passphrase) {\n        throw new TypeError('cipher and passphrase can only be applied when exporting private keys');\n      }\n    }\n\n    if (priv) {\n      return keyObject.export({\n        format: 'pem',\n        type,\n        cipher,\n        passphrase\n      });\n    }\n\n    return keyObject.export({\n      format: 'pem',\n      type\n    });\n  }\n\n  toJWK(priv = false) {\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private');\n    }\n\n    const components = [...this.constructor[priv ? PRIVATE_MEMBERS : PUBLIC_MEMBERS]].map(k => [k, this[k]]);\n    const result = {};\n    Object.keys(components).forEach(key => {\n      const [k, v] = components[key];\n      result[k] = v;\n    });\n    result.kty = this.kty;\n    result.kid = this.kid;\n\n    if (this.alg) {\n      result.alg = this.alg;\n    }\n\n    if (this.key_ops && this.key_ops.length) {\n      result.key_ops = this.key_ops;\n    }\n\n    if (this.use) {\n      result.use = this.use;\n    }\n\n    if (this.x5c) {\n      result.x5c = this.x5c;\n    }\n\n    if (this.x5t) {\n      result.x5t = this.x5t;\n    }\n\n    if (this['x5t#S256']) {\n      result['x5t#S256'] = this['x5t#S256'];\n    }\n\n    return result;\n  }\n\n  [JWK_MEMBERS]() {\n    const props = this[KEYOBJECT].type === 'private' ? this.constructor[PRIVATE_MEMBERS] : this.constructor[PUBLIC_MEMBERS];\n    Object.defineProperties(this, [...props].reduce((acc, component) => {\n      acc[component] = {\n        get() {\n          const jwk = keyObjectToJWK(this[KEYOBJECT]);\n          Object.defineProperties(this, Object.entries(jwk).filter(([key]) => props.has(key)).reduce((acc, [key, value]) => {\n            acc[key] = {\n              value,\n              enumerable: this.constructor[PUBLIC_MEMBERS].has(key),\n              configurable: false\n            };\n            return acc;\n          }, {}));\n          return this[component];\n        },\n\n        enumerable: this.constructor[PUBLIC_MEMBERS].has(component),\n        configurable: true\n      };\n      return acc;\n    }, {}));\n  }\n  /* c8 ignore next 8 */\n\n\n  [inspect.custom]() {\n    return `${this.constructor.name} ${inspect(this.toJWK(false), {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    })}`;\n  }\n  /* c8 ignore next 3 */\n\n\n  [THUMBPRINT_MATERIAL]() {\n    throw new Error(`\"[THUMBPRINT_MATERIAL]()\" is not implemented on ${this.constructor.name}`);\n  }\n\n  algorithms(operation,\n  /* the rest is private API */\n  int, opts) {\n    const {\n      use = this.use,\n      alg = this.alg,\n      key_ops: ops = this.key_ops\n    } = int === privateApi ? opts : {};\n\n    if (alg) {\n      return new Set(this.algorithms(operation, privateApi, {\n        alg: null,\n        use,\n        key_ops: ops\n      }).has(alg) ? [alg] : undefined);\n    }\n\n    if (typeof operation === 'symbol') {\n      try {\n        return this[operation]();\n      } catch (err) {\n        return new Set();\n      }\n    }\n\n    if (operation && ops && !ops.includes(operation)) {\n      return new Set();\n    }\n\n    switch (operation) {\n      case 'decrypt':\n      case 'deriveKey':\n      case 'encrypt':\n      case 'sign':\n      case 'unwrapKey':\n      case 'verify':\n      case 'wrapKey':\n        return new Set(Object.entries(JWK[this.kty][operation]).map(([alg, fn]) => fn(this) ? alg : undefined).filter(Boolean));\n\n      case undefined:\n        return new Set([...this.algorithms('sign'), ...this.algorithms('verify'), ...this.algorithms('decrypt'), ...this.algorithms('encrypt'), ...this.algorithms('unwrapKey'), ...this.algorithms('wrapKey'), ...this.algorithms('deriveKey')]);\n\n      default:\n        throw new TypeError('invalid key operation');\n    }\n  }\n  /* c8 ignore next 3 */\n\n\n  static async generate() {\n    throw new Error(`\"static async generate()\" is not implemented on ${this.name}`);\n  }\n  /* c8 ignore next 3 */\n\n\n  static generateSync() {\n    throw new Error(`\"static generateSync()\" is not implemented on ${this.name}`);\n  }\n  /* c8 ignore next 3 */\n\n\n  static get [PUBLIC_MEMBERS]() {\n    throw new Error(`\"static get [PUBLIC_MEMBERS]()\" is not implemented on ${this.name}`);\n  }\n  /* c8 ignore next 3 */\n\n\n  static get [PRIVATE_MEMBERS]() {\n    throw new Error(`\"static get [PRIVATE_MEMBERS]()\" is not implemented on ${this.name}`);\n  }\n\n}\n\nmodule.exports = Key;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/jose/lib/jwk/key/base.js"],"names":["strict","assert","require","inspect","EOL","keyObjectSupported","createPublicKey","keyObjectToJWK","THUMBPRINT_MATERIAL","PUBLIC_MEMBERS","PRIVATE_MEMBERS","JWK_MEMBERS","KEYOBJECT","USES_MAPPING","OPS","USES","isObject","thumbprint","errors","privateApi","Symbol","JWK","Key","constructor","keyObject","alg","use","kid","key_ops","ops","x5c","x5t","x5t256","undefined","has","TypeError","Array","isArray","length","some","o","from","Set","filter","x","sig","enc","JWKInvalid","c","forEach","cert","i","publicKey","key","match","join","format","err","deepEqual","export","type","Object","defineProperties","value","get","JOSENotSupported","private","public","secret","enumerable","defineProperty","configurable","toPEM","priv","encoding","cipher","passphrase","toJWK","components","map","k","result","keys","v","kty","props","reduce","acc","component","jwk","entries","custom","name","depth","Infinity","colors","process","stdout","isTTY","compact","sorted","Error","algorithms","operation","int","opts","includes","fn","Boolean","generate","generateSync","module","exports"],"mappings":"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","sourcesContent":["const { strict: assert } = require('assert')\nconst { inspect } = require('util')\nconst { EOL } = require('os')\n\nconst { keyObjectSupported } = require('../../help/runtime_support')\nconst { createPublicKey } = require('../../help/key_object')\nconst { keyObjectToJWK } = require('../../help/key_utils')\nconst {\n  THUMBPRINT_MATERIAL, PUBLIC_MEMBERS, PRIVATE_MEMBERS, JWK_MEMBERS, KEYOBJECT,\n  USES_MAPPING, OPS, USES\n} = require('../../help/consts')\nconst isObject = require('../../help/is_object')\nconst thumbprint = require('../thumbprint')\nconst errors = require('../../errors')\n\nconst privateApi = Symbol('privateApi')\nconst { JWK } = require('../../registry')\n\nclass Key {\n  constructor (keyObject, { alg, use, kid, key_ops: ops, x5c, x5t, 'x5t#S256': x5t256 } = {}) {\n    if (use !== undefined) {\n      if (typeof use !== 'string' || !USES.has(use)) {\n        throw new TypeError('`use` must be either \"sig\" or \"enc\" string when provided')\n      }\n    }\n\n    if (alg !== undefined) {\n      if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('`alg` must be a non-empty string when provided')\n      }\n    }\n\n    if (kid !== undefined) {\n      if (typeof kid !== 'string' || !kid) {\n        throw new TypeError('`kid` must be a non-empty string when provided')\n      }\n    }\n\n    if (ops !== undefined) {\n      if (!Array.isArray(ops) || !ops.length || ops.some(o => typeof o !== 'string')) {\n        throw new TypeError('`key_ops` must be a non-empty array of strings when provided')\n      }\n      ops = Array.from(new Set(ops)).filter(x => OPS.has(x))\n    }\n\n    if (ops && use) {\n      if (\n        (use === 'enc' && ops.some(x => USES_MAPPING.sig.has(x))) ||\n        (use === 'sig' && ops.some(x => USES_MAPPING.enc.has(x)))\n      ) {\n        throw new errors.JWKInvalid('inconsistent JWK \"use\" and \"key_ops\"')\n      }\n    }\n\n    if (keyObjectSupported && x5c !== undefined) {\n      if (!Array.isArray(x5c) || !x5c.length || x5c.some(c => typeof c !== 'string')) {\n        throw new TypeError('`x5c` must be an array of one or more PKIX certificates when provided')\n      }\n\n      x5c.forEach((cert, i) => {\n        let publicKey\n        try {\n          publicKey = createPublicKey({\n            key: `-----BEGIN CERTIFICATE-----${EOL}${(cert.match(/.{1,64}/g) || []).join(EOL)}${EOL}-----END CERTIFICATE-----`, format: 'pem'\n          })\n        } catch (err) {\n          throw new errors.JWKInvalid(`\\`x5c\\` member at index ${i} is not a valid base64-encoded DER PKIX certificate`)\n        }\n        if (i === 0) {\n          try {\n            assert.deepEqual(\n              publicKey.export({ type: 'spki', format: 'der' }),\n              (keyObject.type === 'public' ? keyObject : createPublicKey(keyObject)).export({ type: 'spki', format: 'der' })\n            )\n          } catch (err) {\n            throw new errors.JWKInvalid('The key in the first `x5c` certificate MUST match the public key represented by the JWK')\n          }\n        }\n      })\n    }\n\n    Object.defineProperties(this, {\n      [KEYOBJECT]: { value: isObject(keyObject) ? undefined : keyObject },\n      keyObject: {\n        get () {\n          if (!keyObjectSupported) {\n            throw new errors.JOSENotSupported('KeyObject class is not supported in your Node.js runtime version')\n          }\n\n          return this[KEYOBJECT]\n        }\n      },\n      type: { value: keyObject.type },\n      private: { value: keyObject.type === 'private' },\n      public: { value: keyObject.type === 'public' },\n      secret: { value: keyObject.type === 'secret' },\n      alg: { value: alg, enumerable: alg !== undefined },\n      use: { value: use, enumerable: use !== undefined },\n      x5c: {\n        enumerable: x5c !== undefined,\n        ...(x5c ? { get () { return [...x5c] } } : { value: undefined })\n      },\n      key_ops: {\n        enumerable: ops !== undefined,\n        ...(ops ? { get () { return [...ops] } } : { value: undefined })\n      },\n      kid: {\n        enumerable: true,\n        ...(kid\n          ? { value: kid }\n          : {\n              get () {\n                Object.defineProperty(this, 'kid', { value: this.thumbprint, configurable: false })\n                return this.kid\n              },\n              configurable: true\n            })\n      },\n      ...(x5c\n        ? {\n            x5t: {\n              enumerable: true,\n              ...(x5t\n                ? { value: x5t }\n                : {\n                    get () {\n                      Object.defineProperty(this, 'x5t', { value: thumbprint.x5t(this.x5c[0]), configurable: false })\n                      return this.x5t\n                    },\n                    configurable: true\n                  })\n            }\n          }\n        : undefined),\n      ...(x5c\n        ? {\n            'x5t#S256': {\n              enumerable: true,\n              ...(x5t256\n                ? { value: x5t256 }\n                : {\n                    get () {\n                      Object.defineProperty(this, 'x5t#S256', { value: thumbprint['x5t#S256'](this.x5c[0]), configurable: false })\n                      return this['x5t#S256']\n                    },\n                    configurable: true\n                  })\n            }\n          }\n        : undefined),\n      thumbprint: {\n        get () {\n          Object.defineProperty(this, 'thumbprint', { value: thumbprint.kid(this[THUMBPRINT_MATERIAL]()), configurable: false })\n          return this.thumbprint\n        },\n        configurable: true\n      }\n    })\n  }\n\n  toPEM (priv = false, encoding = {}) {\n    if (this.secret) {\n      throw new TypeError('symmetric keys cannot be exported as PEM')\n    }\n\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private')\n    }\n\n    const { type = priv ? 'pkcs8' : 'spki', cipher, passphrase } = encoding\n\n    let keyObject = this[KEYOBJECT]\n\n    if (!priv) {\n      if (this.private) {\n        keyObject = createPublicKey(keyObject)\n      }\n      if (cipher || passphrase) {\n        throw new TypeError('cipher and passphrase can only be applied when exporting private keys')\n      }\n    }\n\n    if (priv) {\n      return keyObject.export({ format: 'pem', type, cipher, passphrase })\n    }\n\n    return keyObject.export({ format: 'pem', type })\n  }\n\n  toJWK (priv = false) {\n    if (priv && this.public === true) {\n      throw new TypeError('public key cannot be exported as private')\n    }\n\n    const components = [...this.constructor[priv ? PRIVATE_MEMBERS : PUBLIC_MEMBERS]]\n      .map(k => [k, this[k]])\n\n    const result = {}\n\n    Object.keys(components).forEach((key) => {\n      const [k, v] = components[key]\n\n      result[k] = v\n    })\n\n    result.kty = this.kty\n    result.kid = this.kid\n\n    if (this.alg) {\n      result.alg = this.alg\n    }\n\n    if (this.key_ops && this.key_ops.length) {\n      result.key_ops = this.key_ops\n    }\n\n    if (this.use) {\n      result.use = this.use\n    }\n\n    if (this.x5c) {\n      result.x5c = this.x5c\n    }\n\n    if (this.x5t) {\n      result.x5t = this.x5t\n    }\n\n    if (this['x5t#S256']) {\n      result['x5t#S256'] = this['x5t#S256']\n    }\n\n    return result\n  }\n\n  [JWK_MEMBERS] () {\n    const props = this[KEYOBJECT].type === 'private' ? this.constructor[PRIVATE_MEMBERS] : this.constructor[PUBLIC_MEMBERS]\n    Object.defineProperties(this, [...props].reduce((acc, component) => {\n      acc[component] = {\n        get () {\n          const jwk = keyObjectToJWK(this[KEYOBJECT])\n          Object.defineProperties(\n            this,\n            Object.entries(jwk)\n              .filter(([key]) => props.has(key))\n              .reduce((acc, [key, value]) => {\n                acc[key] = { value, enumerable: this.constructor[PUBLIC_MEMBERS].has(key), configurable: false }\n                return acc\n              }, {})\n          )\n\n          return this[component]\n        },\n        enumerable: this.constructor[PUBLIC_MEMBERS].has(component),\n        configurable: true\n      }\n      return acc\n    }, {}))\n  }\n\n  /* c8 ignore next 8 */\n  [inspect.custom] () {\n    return `${this.constructor.name} ${inspect(this.toJWK(false), {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    })}`\n  }\n\n  /* c8 ignore next 3 */\n  [THUMBPRINT_MATERIAL] () {\n    throw new Error(`\"[THUMBPRINT_MATERIAL]()\" is not implemented on ${this.constructor.name}`)\n  }\n\n  algorithms (operation, /* the rest is private API */ int, opts) {\n    const { use = this.use, alg = this.alg, key_ops: ops = this.key_ops } = int === privateApi ? opts : {}\n    if (alg) {\n      return new Set(this.algorithms(operation, privateApi, { alg: null, use, key_ops: ops }).has(alg) ? [alg] : undefined)\n    }\n\n    if (typeof operation === 'symbol') {\n      try {\n        return this[operation]()\n      } catch (err) {\n        return new Set()\n      }\n    }\n\n    if (operation && ops && !ops.includes(operation)) {\n      return new Set()\n    }\n\n    switch (operation) {\n      case 'decrypt':\n      case 'deriveKey':\n      case 'encrypt':\n      case 'sign':\n      case 'unwrapKey':\n      case 'verify':\n      case 'wrapKey':\n        return new Set(Object.entries(JWK[this.kty][operation]).map(([alg, fn]) => fn(this) ? alg : undefined).filter(Boolean))\n      case undefined:\n        return new Set([\n          ...this.algorithms('sign'),\n          ...this.algorithms('verify'),\n          ...this.algorithms('decrypt'),\n          ...this.algorithms('encrypt'),\n          ...this.algorithms('unwrapKey'),\n          ...this.algorithms('wrapKey'),\n          ...this.algorithms('deriveKey')\n        ])\n      default:\n        throw new TypeError('invalid key operation')\n    }\n  }\n\n  /* c8 ignore next 3 */\n  static async generate () {\n    throw new Error(`\"static async generate()\" is not implemented on ${this.name}`)\n  }\n\n  /* c8 ignore next 3 */\n  static generateSync () {\n    throw new Error(`\"static generateSync()\" is not implemented on ${this.name}`)\n  }\n\n  /* c8 ignore next 3 */\n  static get [PUBLIC_MEMBERS] () {\n    throw new Error(`\"static get [PUBLIC_MEMBERS]()\" is not implemented on ${this.name}`)\n  }\n\n  /* c8 ignore next 3 */\n  static get [PRIVATE_MEMBERS] () {\n    throw new Error(`\"static get [PRIVATE_MEMBERS]()\" is not implemented on ${this.name}`)\n  }\n}\n\nmodule.exports = Key\n"]},"metadata":{},"sourceType":"script"}