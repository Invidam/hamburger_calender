{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Deque } from \"../../classes/Deque\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { getAddedDateStr, getDiffDayInStr, subtractDayInStr } from \"../../tools/time\";\nconst DISPLAY_LENGTH = 5;\nconst ARRAY_LENGTH = 11;\n\nconst makeStartDate = date => getAddedDateStr(date, -1 * Math.floor(DISPLAY_LENGTH / 2)); // const makeStartDate = (date) => getAddedDateStr(date, -1 * STARTDATEDIFF);\n\n\nconst getStartDate = date => LocalStroage.startDate().isEmpty() ? makeStartDate(date) : LocalStroage.startDate().get();\n\nlet befStartDate;\nlet listDeque;\nexport const useListView = (user, date, setDate, workList) => {\n  _s();\n\n  console.log(\"LIST VIEW RENDERING\");\n  const [startDate, setStratDate] = useState(getStartDate(date));\n\n  const getEndDate = startDate => getAddedDateStr(startDate, ARRAY_LENGTH - 1);\n\n  const [listView, setListView] = useState();\n  const [isListViewLoading, setLoad] = useState(false);\n\n  const updateStartDate = nextDate => {\n    console.log(\"list change\");\n    LocalStroage.startDate().set(nextDate);\n    setStratDate(nextDate);\n  };\n\n  const onClickLeftBtn = () => {\n    const nextDate = getAddedDateStr(startDate, -1);\n    updateStartDate(nextDate);\n  };\n\n  const onClickRightBtn = () => {\n    const nextDate = getAddedDateStr(startDate, 1);\n    updateStartDate(nextDate);\n  };\n\n  useEffect(() => {\n    updateStartDate(makeStartDate(date));\n  }, [date]);\n\n  const getListView = async (startDate, endDate) => {\n    try {\n      setLoad(true);\n      const data = await APIv2.listView(user, startDate, endDate, ARRAY_LENGTH).get();\n      setLoad(false);\n      if (!(data === null || data === void 0 ? void 0 : data.data)) throw new Error(\"List View cann't found\");\n      console.log(\"[LISTVIEW] GET LIST VIEW:  \", data === null || data === void 0 ? void 0 : data.data);\n      return data.data;\n    } catch (error) {\n      setLoad(false);\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    //setListView를 좀 더 스마트하게 바꾸어야 한다.\n    const updateListView = async startDate => {\n      if (user && startDate) {\n        const response = await getListView(startDate, getEndDate(startDate));\n        listDeque = new Deque(response, DISPLAY_LENGTH);\n        setListView(listDeque.get());\n      }\n    };\n\n    const moveListView = (startDate, dateDiff) => {\n      if (user && startDate) {\n        const response = getListView(startDate, getEndDate(startDate));\n        setListView(listDeque.get());\n      }\n    };\n\n    console.log(\"Set list view start\");\n    const dateDiff = subtractDayInStr(befStartDate, startDate); // if (!befStartDate || dateDiff > 2 || dateDiff < -2)\n    //   updateListView(startDate);\n    // else moveListView(startDate, dateDiff);\n\n    updateListView(startDate);\n    befStartDate = startDate;\n    return () => setLoad(false);\n  }, [startDate]);\n  return {\n    isListViewLoading,\n    startDate,\n    listView,\n    onClickLeftBtn,\n    onClickRightBtn\n  };\n};\n\n_s(useListView, \"winhrkvjr+81rjeJ0SI6qLAjsAc=\");\n\nconst turnDeque = (deque, arr, cnt, isLeft) => {\n  if (isLeft) {\n    // <-- 방향으로 이동\n    while (cnt--) {\n      deque.pop_front();\n      deque.push_back(arr[cnt]);\n    }\n  } else {\n    let idx = 0;\n\n    while (idx++ < cnt) {\n      deque.pop_back();\n      deque.push_front(arr[idx]);\n    }\n  }\n};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/listView/useListView.js"],"names":["useEffect","useState","Deque","APIv2","LocalStroage","getAddedDateStr","getDiffDayInStr","subtractDayInStr","DISPLAY_LENGTH","ARRAY_LENGTH","makeStartDate","date","Math","floor","getStartDate","startDate","isEmpty","get","befStartDate","listDeque","useListView","user","setDate","workList","console","log","setStratDate","getEndDate","listView","setListView","isListViewLoading","setLoad","updateStartDate","nextDate","set","onClickLeftBtn","onClickRightBtn","getListView","endDate","data","Error","error","alert","updateListView","response","moveListView","dateDiff","turnDeque","deque","arr","cnt","isLeft","pop_front","push_back","idx","pop_back","push_front"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Deque } from \"../../classes/Deque\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport {\n  getAddedDateStr,\n  getDiffDayInStr,\n  subtractDayInStr,\n} from \"../../tools/time\";\nconst DISPLAY_LENGTH = 5;\nconst ARRAY_LENGTH = 11;\nconst makeStartDate = (date) =>\n  getAddedDateStr(date, -1 * Math.floor(DISPLAY_LENGTH / 2));\n// const makeStartDate = (date) => getAddedDateStr(date, -1 * STARTDATEDIFF);\nconst getStartDate = (date) =>\n  LocalStroage.startDate().isEmpty()\n    ? makeStartDate(date)\n    : LocalStroage.startDate().get();\n\nlet befStartDate;\nlet listDeque;\nexport const useListView = (user, date, setDate, workList) => {\n  console.log(\"LIST VIEW RENDERING\");\n  const [startDate, setStratDate] = useState(getStartDate(date));\n  const getEndDate = (startDate) =>\n    getAddedDateStr(startDate, ARRAY_LENGTH - 1);\n  const [listView, setListView] = useState();\n  const [isListViewLoading, setLoad] = useState(false);\n\n  const updateStartDate = (nextDate) => {\n    console.log(\"list change\");\n    LocalStroage.startDate().set(nextDate);\n    setStratDate(nextDate);\n  };\n  const onClickLeftBtn = () => {\n    const nextDate = getAddedDateStr(startDate, -1);\n    updateStartDate(nextDate);\n  };\n  const onClickRightBtn = () => {\n    const nextDate = getAddedDateStr(startDate, 1);\n    updateStartDate(nextDate);\n  };\n\n  useEffect(() => {\n    updateStartDate(makeStartDate(date));\n  }, [date]);\n  const getListView = async (startDate, endDate) => {\n    try {\n      setLoad(true);\n      const data = await APIv2.listView(\n        user,\n        startDate,\n        endDate,\n        ARRAY_LENGTH\n      ).get();\n      setLoad(false);\n      if (!data?.data) throw new Error(\"List View cann't found\");\n      console.log(\"[LISTVIEW] GET LIST VIEW:  \", data?.data);\n      return data.data;\n    } catch (error) {\n      setLoad(false);\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    //setListView를 좀 더 스마트하게 바꾸어야 한다.\n    const updateListView = async (startDate) => {\n      if (user && startDate) {\n        const response = await getListView(startDate, getEndDate(startDate));\n        listDeque = new Deque(response, DISPLAY_LENGTH);\n        setListView(listDeque.get());\n      }\n    };\n    const moveListView = (startDate, dateDiff) => {\n      if (user && startDate) {\n        const response = getListView(startDate, getEndDate(startDate));\n\n        setListView(listDeque.get());\n      }\n    };\n    console.log(\"Set list view start\");\n    const dateDiff = subtractDayInStr(befStartDate, startDate);\n    // if (!befStartDate || dateDiff > 2 || dateDiff < -2)\n    //   updateListView(startDate);\n    // else moveListView(startDate, dateDiff);\n    updateListView(startDate);\n    befStartDate = startDate;\n    return () => setLoad(false);\n  }, [startDate]);\n  return {\n    isListViewLoading,\n    startDate,\n    listView,\n    onClickLeftBtn,\n    onClickRightBtn,\n  };\n};\n\nconst turnDeque = (deque, arr, cnt, isLeft) => {\n  if (isLeft) {\n    // <-- 방향으로 이동\n    while (cnt--) {\n      deque.pop_front();\n      deque.push_back(arr[cnt]);\n    }\n  } else {\n    let idx = 0;\n    while (idx++ < cnt) {\n      deque.pop_back();\n      deque.push_front(arr[idx]);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}