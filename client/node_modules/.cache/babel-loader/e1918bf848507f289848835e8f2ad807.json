{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { API, APIv2 } from \"../../../tools/API\";\nimport { LocalStroage } from \"../../../tools/LocalStorage\";\nexport const useWorkList = (user, date) => {\n  _s();\n\n  const getEmptyWorkList = () => {\n    return {};\n  };\n\n  const isEmptyWorkList = workList => workList ? !Object.keys(workList).length : true;\n\n  const checkWorkList = workList => isEmptyWorkList(workList) ? getEmptyWorkList() : workList;\n\n  const getInitList = user => !user && window.localStorage.getItem(\"workList\") ? JSON.parse(window.localStorage.getItem(\"workList\")) : [];\n\n  const initList = getInitList();\n  const [workList, setWorkList] = useState(initList);\n\n  const getWorkList = async () => {\n    let resWorkList;\n\n    if (user) {\n      const data = await APIv2.workList(user, date).get();\n      console.log(\"useWORKLIST, data: \", data === null || data === void 0 ? void 0 : data.data);\n      resWorkList = checkWorkList(data === null || data === void 0 ? void 0 : data.data);\n    } else {\n      resWorkList = JSON.parse(localStorage.getItem(\"workList\"));\n    }\n\n    setWorkList(resWorkList);\n  };\n\n  useEffect(() => {\n    getWorkList();\n  }, [date, user]);\n\n  const setWork = workObj => {\n    const id = workObj.id;\n    const _workList = { ...workList\n    };\n    return {\n      create: async () => {\n        _workList[id] = workObj;\n        setWorkList(_workList);\n        if (user) await APIv2.workList(user, date).create(workObj);else LocalStroage.set(_workList);\n      },\n      edit: async () => {\n        _workList[id] = workObj;\n        setWorkList(_workList);\n        if (user) await APIv2.workList(user, date).edit(workObj);else LocalStroage.set(_workList);\n      },\n      delete: async () => {\n        if (!delete _workList[id]) throw new Error(\"Cannot Delete WorkItem\");\n        setWorkList(_workList);\n        if (user) await APIv2.workList(user, date).delete(workObj);else LocalStroage.set(_workList);\n      }\n    };\n  };\n\n  const updateWorkList = _workList => {\n    _workList = checkWorkList(_workList);\n    setWorkList(_workList);\n\n    if (user) {// API.post(`/api/${user}/${date}/worklist/worklist`, {\n      //   user: \"TEST\",\n      //   value: _workList,\n      // });\n    } else window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n  };\n\n  return {\n    workList,\n    updateWorkList,\n    setWork\n  };\n};\n\n_s(useWorkList, \"uUnjV6oTVBBPadCGz4VigBOSZFc=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/useWorkList.js"],"names":["useEffect","useState","API","APIv2","LocalStroage","useWorkList","user","date","getEmptyWorkList","isEmptyWorkList","workList","Object","keys","length","checkWorkList","getInitList","window","localStorage","getItem","JSON","parse","initList","setWorkList","getWorkList","resWorkList","data","get","console","log","setWork","workObj","id","_workList","create","set","edit","delete","Error","updateWorkList","setItem","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API, APIv2 } from \"../../../tools/API\";\nimport { LocalStroage } from \"../../../tools/LocalStorage\";\n\nexport const useWorkList = (user, date) => {\n  const getEmptyWorkList = () => {\n    return {};\n  };\n  const isEmptyWorkList = (workList) =>\n    workList ? !Object.keys(workList).length : true;\n\n  const checkWorkList = (workList) =>\n    isEmptyWorkList(workList) ? getEmptyWorkList() : workList;\n\n  const getInitList = (user) =>\n    !user && window.localStorage.getItem(\"workList\")\n      ? JSON.parse(window.localStorage.getItem(\"workList\"))\n      : [];\n\n  const initList = getInitList();\n  const [workList, setWorkList] = useState(initList);\n\n  const getWorkList = async () => {\n    let resWorkList;\n    if (user) {\n      const data = await APIv2.workList(user, date).get();\n      console.log(\"useWORKLIST, data: \", data?.data);\n      resWorkList = checkWorkList(data?.data);\n    } else {\n      resWorkList = JSON.parse(localStorage.getItem(\"workList\"));\n    }\n    setWorkList(resWorkList);\n  };\n  useEffect(() => {\n    getWorkList();\n  }, [date, user]);\n\n  const setWork = (workObj) => {\n    const id = workObj.id;\n    const _workList = { ...workList };\n    return {\n      create: async () => {\n        _workList[id] = workObj;\n        setWorkList(_workList);\n        if (user) await APIv2.workList(user, date).create(workObj);\n        else LocalStroage.set(_workList);\n      },\n      edit: async () => {\n        _workList[id] = workObj;\n        setWorkList(_workList);\n        if (user) await APIv2.workList(user, date).edit(workObj);\n        else LocalStroage.set(_workList);\n      },\n      delete: async () => {\n        if (!delete _workList[id]) throw new Error(\"Cannot Delete WorkItem\");\n        setWorkList(_workList);\n        if (user) await APIv2.workList(user, date).delete(workObj);\n        else LocalStroage.set(_workList);\n      },\n    };\n  };\n  const updateWorkList = (_workList) => {\n    _workList = checkWorkList(_workList);\n    setWorkList(_workList);\n    if (user) {\n      // API.post(`/api/${user}/${date}/worklist/worklist`, {\n      //   user: \"TEST\",\n      //   value: _workList,\n      // });\n    } else window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n  };\n  return { workList, updateWorkList, setWork };\n};\n"]},"metadata":{},"sourceType":"module"}