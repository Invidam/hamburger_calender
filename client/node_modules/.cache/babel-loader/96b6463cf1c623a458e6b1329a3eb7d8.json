{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/elements/Todo.js\",\n    _s = $RefreshSig$();\n\nimport StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\"; // import es from \"da\"\n\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon__check\",\n  icon: faCheck,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\nexport const Todo = ({\n  setTodo,\n  _isEditMode,\n  todoItem,\n  id\n}) => {\n  _s();\n\n  const isSubmitMode = () => id === 0;\n\n  const [isCheck, date, onClickCheck, onChangeText, onChangeDate, onChangePriority, onSubmitTodo, onEditTodo, onDeleteTodo, isStopPriority, onChangeStopPriority] = useTodo(setTodo, todoItem);\n  const [isEditMode, setEditMode] = useState(_isEditMode);\n  const inputBtn = !isEditMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item__btn-box todo-input__btn-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-input__btn todo-input__btn-edit\",\n      onClick: onEditTodo,\n      children: \"E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-input__btn todo-input__btn-delete\",\n      onClick: onDeleteTodo,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item__btn-box todo-input__btn-box\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-input__btn todo-input__btn-add\",\n      onClick: todoItem ? onEditTodo : onSubmitTodo,\n      children: todoItem ? \"Save\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  const inputElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: `todo-input__checkbox_${id}`,\n      className: \"todo-item__checkbox todo-input__checkbox todo-input__content\",\n      type: \"checkbox\",\n      name: \"todoCheck\",\n      defaultValue: todoItem === null || todoItem === void 0 ? void 0 : todoItem.isCheck,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => onClickCheck(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo-input__label\",\n      for: `todo-input__checkbox_${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo-input__label-icon\",\n        children: isCheck ? checkElement : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo-item__text todo-input__text todo-input__content\",\n      type: \"text\",\n      autocomplete: \"off\",\n      name: \"todoText\",\n      defaultValue: todoItem === null || todoItem === void 0 ? void 0 : todoItem.text,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => onChangeText(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePick, {\n      date: date,\n      onChangeDate: onChangeDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StarRatings // rating={todoItem?.priority}\n    , {\n      starRatedColor: \"rgba(241, 196, 15,0.8)\",\n      starEmptyColor: \"rgba(151, 151, 151, 0.707)\",\n      starHoverColor: \"rgba(241, 196, 15,0.9)\",\n      starSelectingHoverColor: \"red\",\n      changeRating: onChangePriority,\n      numberOfStars: 5,\n      name: \"rating\",\n      starDimension: \"12px\",\n      starSpacing: \"0px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), \" \", inputBtn]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo-item\",\n    children: [\" \", inputElement]\n  }, \"_\" + (todoItem === null || todoItem === void 0 ? void 0 : todoItem.id), true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"5Xv4D9rghsHFUIbtFwo9mCK9FHk=\", false, function () {\n  return [useTodo];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/elements/Todo.js"],"names":["StarRatings","DatePicker","registerLocale","setDefaultLocale","useTodo","getToday","faCheck","FontAwesomeIcon","DatePick","useState","checkElement","Todo","setTodo","_isEditMode","todoItem","id","isSubmitMode","isCheck","date","onClickCheck","onChangeText","onChangeDate","onChangePriority","onSubmitTodo","onEditTodo","onDeleteTodo","isStopPriority","onChangeStopPriority","isEditMode","setEditMode","inputBtn","inputElement","target","value","text"],"mappings":"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","sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\n\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\n// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\nconst checkElement = (\n  <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n);\nexport const Todo = ({ setTodo, _isEditMode, todoItem, id }) => {\n  const isSubmitMode = () => id === 0;\n  const [\n    isCheck,\n    date,\n    onClickCheck,\n    onChangeText,\n    onChangeDate,\n    onChangePriority,\n    onSubmitTodo,\n    onEditTodo,\n    onDeleteTodo,\n    isStopPriority,\n    onChangeStopPriority,\n  ] = useTodo(setTodo, todoItem);\n  const [isEditMode, setEditMode] = useState(_isEditMode);\n  const inputBtn = !isEditMode ? (\n    <div className=\"todo-item__btn-box todo-input__btn-box\">\n      <button\n        className=\"todo-input__btn todo-input__btn-edit\"\n        onClick={onEditTodo}\n      >\n        E\n      </button>\n      <button\n        className=\"todo-input__btn todo-input__btn-delete\"\n        onClick={onDeleteTodo}\n      >\n        X\n      </button>{\" \"}\n    </div>\n  ) : (\n    <div className=\"todo-item__btn-box todo-input__btn-box\">\n      <button\n        className=\"todo-input__btn todo-input__btn-add\"\n        onClick={todoItem ? onEditTodo : onSubmitTodo}\n      >\n        {todoItem ? \"Save\" : \"+\"}\n      </button>\n    </div>\n  );\n  const inputElement = (\n    <div className=\"todo-input\">\n      <input\n        id={`todo-input__checkbox_${id}`}\n        className=\"todo-item__checkbox todo-input__checkbox todo-input__content\"\n        type=\"checkbox\"\n        name=\"todoCheck\"\n        defaultValue={todoItem?.isCheck}\n        onChange={({ target: { value } }) => onClickCheck(value)}\n      ></input>\n      <label className=\"todo-input__label\" for={`todo-input__checkbox_${id}`}>\n        <span className=\"todo-input__label-icon\">\n          {isCheck ? checkElement : \"\"}\n        </span>\n      </label>\n      {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n      <input\n        className=\"todo-item__text todo-input__text todo-input__content\"\n        type=\"text\"\n        autocomplete=\"off\"\n        name=\"todoText\"\n        defaultValue={todoItem?.text}\n        onChange={({ target: { value } }) => onChangeText(value)}\n      ></input>\n      {/* <input\n        className=\"todo-input__date todo-input__content\"\n        type=\"date\"\n        name=\"todoDate\"\n        lang=\"en-us\"\n        required\n        pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n        defaultValue={isEditMode ? todoItem?.date : undefined}\n        min={getToday()}\n        onChange={({ target: { value } }) => onChangeDate(value)}\n      ></input> */}\n      <DatePick date={date} onChangeDate={onChangeDate} />\n      {/* <input\n        className=\"todo-input__priority todo-input__content\"\n        type=\"text\"\n        name=\"todoPriority\"\n        defaultValue={todoItem?.priority}\n        onChange={({ target: { value } }) => onChangePriority(value)}\n      ></input> */}\n      <StarRatings\n        // rating={todoItem?.priority}\n        starRatedColor=\"rgba(241, 196, 15,0.8)\"\n        starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n        starHoverColor=\"rgba(241, 196, 15,0.9)\"\n        starSelectingHoverColor=\"red\"\n        changeRating={onChangePriority}\n        numberOfStars={5}\n        name=\"rating\"\n        starDimension=\"12px\"\n        starSpacing=\"0px\"\n      />{\" \"}\n      {inputBtn}\n    </div>\n  );\n  return (\n    <li className=\"todo-item\" key={\"_\" + todoItem?.id}>\n      {\" \"}\n      {inputElement}\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}