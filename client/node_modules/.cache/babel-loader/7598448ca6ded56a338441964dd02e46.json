{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport qs from \"qs\";\nimport axios from \"axios\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { useState } from \"react\";\nexport const useAttemptSignup = ({\n  history,\n  locaiton\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleAttemptSignup = async () => {\n    // event.preventDefault();\n    //   const { code } = req.body;\n    console.log(\"CONNET ON REACT-REGISTER page: \");\n    console.log(username, email, password);\n\n    if (!username || !email || !password) {\n      let errText = `[ERROR] ${username ? \"\" : \"Username\"}${!email + !password > 0 && !username ? \", \" : \"\"}${email ? \"\" : \"Email\"}${!password > 0 && !email ? \", \" : \"\"}${password ? \"\" : \"Password\"} ${!username + !email + !password > 1 ? \"are\" : \"is\"} not entered.`;\n      alert(errText);\n    }\n\n    const response = await axios.post(\"/auth/signup\", {\n      username,\n      email,\n      password\n    });\n    console.log(\"RES: \", response);\n    alert(\"Sign up complete.\");\n    history.push(\"/\");\n  };\n\n  return {\n    username,\n    setUsername,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleAttemptSignup\n  };\n}; //\n\n_s(useAttemptSignup, \"qXzfcSnOp7L14Dddg986jK2+oO8=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useAttemptSignup.js"],"names":["qs","axios","isEmail","useState","useAttemptSignup","history","locaiton","username","setUsername","email","setEmail","password","setPassword","handleAttemptSignup","console","log","errText","alert","response","post","push"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAAA;;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMU,mBAAmB,GAAG,YAAY;AACtC;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBE,KAAtB,EAA6BE,QAA7B;;AAEA,QAAI,CAACJ,QAAD,IAAa,CAACE,KAAd,IAAuB,CAACE,QAA5B,EAAsC;AACpC,UAAIK,OAAO,GAAI,WAAUT,QAAQ,GAAG,EAAH,GAAQ,UAAW,GAClD,CAACE,KAAD,GAAS,CAACE,QAAV,GAAqB,CAArB,IAA0B,CAACJ,QAA3B,GAAsC,IAAtC,GAA6C,EAC9C,GAAEE,KAAK,GAAG,EAAH,GAAQ,OAAQ,GAAE,CAACE,QAAD,GAAY,CAAZ,IAAiB,CAACF,KAAlB,GAA0B,IAA1B,GAAiC,EAAG,GAC5DE,QAAQ,GAAG,EAAH,GAAQ,UACjB,IAAG,CAACJ,QAAD,GAAY,CAACE,KAAb,GAAqB,CAACE,QAAtB,GAAiC,CAAjC,GAAqC,KAArC,GAA6C,IAAK,eAJtD;AAKAM,MAAAA,KAAK,CAACD,OAAD,CAAL;AACD;;AACD,UAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,cAAX,EAA2B;AAChDZ,MAAAA,QADgD;AAEhDE,MAAAA,KAFgD;AAGhDE,MAAAA;AAHgD,KAA3B,CAAvB;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,QAArB;AACAD,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACAZ,IAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACD,GAtBD;;AAuBA,SAAO;AACLb,IAAAA,QADK;AAELC,IAAAA,WAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,WANK;AAOLC,IAAAA;AAPK,GAAP;AASD,CApCM,C,CAsCP;;GAtCaT,gB","sourcesContent":["import qs from \"qs\";\nimport axios from \"axios\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { useState } from \"react\";\n\nexport const useAttemptSignup = ({ history, locaiton }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleAttemptSignup = async () => {\n    // event.preventDefault();\n    //   const { code } = req.body;\n    console.log(\"CONNET ON REACT-REGISTER page: \");\n    console.log(username, email, password);\n\n    if (!username || !email || !password) {\n      let errText = `[ERROR] ${username ? \"\" : \"Username\"}${\n        !email + !password > 0 && !username ? \", \" : \"\"\n      }${email ? \"\" : \"Email\"}${!password > 0 && !email ? \", \" : \"\"}${\n        password ? \"\" : \"Password\"\n      } ${!username + !email + !password > 1 ? \"are\" : \"is\"} not entered.`;\n      alert(errText);\n    }\n    const response = await axios.post(\"/auth/signup\", {\n      username,\n      email,\n      password,\n    });\n    console.log(\"RES: \", response);\n    alert(\"Sign up complete.\");\n    history.push(\"/\");\n  };\n  return {\n    username,\n    setUsername,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleAttemptSignup,\n  };\n};\n\n//\n"]},"metadata":{},"sourceType":"module"}