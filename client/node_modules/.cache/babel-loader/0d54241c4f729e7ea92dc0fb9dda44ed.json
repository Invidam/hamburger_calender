{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\";\nimport \"./css/calendar.css\";\nimport { CalendarTemplate } from \"./components/calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"./hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"./hooks/workList/work/useUpdateWork\";\nimport { useEffect, useState } from \"react\";\nimport { changeFormatYYYYMMDD } from \"./tools/time\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER = \"TEST\";\n\nfunction App() {\n  _s();\n\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useState(new Date());\n  const date = changeFormatYYYYMMDD(updateDateHook[0]);\n  console.log(\"DATE: \", date);\n  const wakeTimeHook = useUpdateTime(\"wakeTime\", USER, date);\n  const bedTimeHook = useUpdateTime(\"bedTime\", USER, date);\n  const updateWorkHook = useUpdateWork([], USER, date);\n\n  const testBtn = async () => {\n    const data = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\"\n      },\n      url: `/api/test`,\n      method: \"post\",\n      data: {\n        firstName: \"Fred\",\n        lastName: \"Flintstone\"\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hamburger App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), date, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testBtn,\n        children: \"TEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(CalendarTemplate, {\n          user: \"TEST\",\n          updateDateHook: updateDateHook,\n          wakeTimeHook: wakeTimeHook,\n          bedTimeHook: bedTimeHook,\n          updateWorkHook: updateWorkHook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n          date: updateDateHook[0],\n          user: \"TEST\",\n          wakeTimeHook: wakeTimeHook,\n          bedTimeHook: bedTimeHook,\n          updateWorkHook: updateWorkHook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WWfRxFnjArGgPiy8lqtT6EHF7Lo=\", false, function () {\n  return [useUpdateTime, useUpdateTime, useUpdateWork];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/App.js"],"names":["WorkListTemplate","CalendarTemplate","useUpdateTime","useUpdateWork","useEffect","useState","changeFormatYYYYMMDD","axios","USER","App","updateDateHook","Date","date","console","log","wakeTimeHook","bedTimeHook","updateWorkHook","testBtn","data","headers","Authorization","url","method","firstName","lastName"],"mappings":";;;AAAA;AACA,OAAO,eAAP;AACA,SAASA,gBAAT,QAAiC,wCAAjC;AACA,OAAO,oBAAP;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,IAAI,GAAG,MAAb;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA,QAAMC,cAAc,GAAGL,QAAQ,CAAC,IAAIM,IAAJ,EAAD,CAA/B;AACA,QAAMC,IAAI,GAAGN,oBAAoB,CAACI,cAAc,CAAC,CAAD,CAAf,CAAjC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACA,QAAMG,YAAY,GAAGb,aAAa,CAAC,UAAD,EAAaM,IAAb,EAAmBI,IAAnB,CAAlC;AACA,QAAMI,WAAW,GAAGd,aAAa,CAAC,SAAD,EAAYM,IAAZ,EAAkBI,IAAlB,CAAjC;AACA,QAAMK,cAAc,GAAGd,aAAa,CAAC,EAAD,EAAKK,IAAL,EAAWI,IAAX,CAApC;;AACA,QAAMM,OAAO,GAAG,YAAY;AAC1B,UAAMC,IAAI,GAAG,MAAMZ,KAAK,CAAC;AACvBa,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,EADR;AAEP,wBAAgB;AAFT,OADc;AAKvBC,MAAAA,GAAG,EAAG,WALiB;AAMvBC,MAAAA,MAAM,EAAE,MANe;AAOvBJ,MAAAA,IAAI,EAAE;AACJK,QAAAA,SAAS,EAAE,MADP;AAEJC,QAAAA,QAAQ,EAAE;AAFN;AAPiB,KAAD,CAAxB;AAYD,GAbD;;AAcA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGb,IAFH,eAGE;AAAQ,QAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAA,+BACE,QAAC,gBAAD;AACE,UAAA,IAAI,EAAE,MADR;AAEE,UAAA,cAAc,EAAER,cAFlB;AAGE,UAAA,YAAY,EAAEK,YAHhB;AAIE,UAAA,WAAW,EAAEC,WAJf;AAKE,UAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,+BACE,QAAC,gBAAD;AACE,UAAA,IAAI,EAAEP,cAAc,CAAC,CAAD,CADtB;AAEE,UAAA,IAAI,EAAE,MAFR;AAGE,UAAA,YAAY,EAAEK,YAHhB;AAIE,UAAA,WAAW,EAAEC,WAJf;AAKE,UAAA,cAAc,EAAEC;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAvDQR,G;UAQcP,a,EACDA,a,EACGC,a;;;KAVhBM,G;AAyDT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\";\nimport \"./css/calendar.css\";\nimport { CalendarTemplate } from \"./components/calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"./hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"./hooks/workList/work/useUpdateWork\";\nimport { useEffect, useState } from \"react\";\nimport { changeFormatYYYYMMDD } from \"./tools/time\";\nimport axios from \"axios\";\nconst USER = \"TEST\";\nfunction App() {\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useState(new Date());\n  const date = changeFormatYYYYMMDD(updateDateHook[0]);\n  console.log(\"DATE: \", date);\n  const wakeTimeHook = useUpdateTime(\"wakeTime\", USER, date);\n  const bedTimeHook = useUpdateTime(\"bedTime\", USER, date);\n  const updateWorkHook = useUpdateWork([], USER, date);\n  const testBtn = async () => {\n    const data = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      url: `/api/test`,\n      method: \"post\",\n      data: {\n        firstName: \"Fred\",\n        lastName: \"Flintstone\",\n      },\n    });\n  };\n  return (\n    <main>\n      <header>\n        <h1>Hamburger App</h1>\n        {date}\n        <button onClick={testBtn}>TEST</button>\n      </header>\n      <section>\n        <article>\n          <CalendarTemplate\n            user={\"TEST\"}\n            updateDateHook={updateDateHook}\n            wakeTimeHook={wakeTimeHook}\n            bedTimeHook={bedTimeHook}\n            updateWorkHook={updateWorkHook}\n          />\n        </article>\n        <article>\n          <WorkListTemplate\n            date={updateDateHook[0]}\n            user={\"TEST\"}\n            wakeTimeHook={wakeTimeHook}\n            bedTimeHook={bedTimeHook}\n            updateWorkHook={updateWorkHook}\n          />\n        </article>\n      </section>\n      <footer>footer</footer>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}