{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/work/Work.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { useDeleteWork } from \"../../../../hooks/workList/work/useDeleteWork\";\nimport { useEditWork } from \"../../../../hooks/workList/work/useEditWork\";\nimport { EditWorkWindow } from \"../../window/work/EditWorkWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  }\n};\nexport const Work = ({\n  workItem,\n  workList,\n  setWorkList,\n  id\n}) => {\n  _s();\n\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n\n  const openEditModal = () => setEditModalIsOpen(true);\n\n  const closeEditModal = event => setEditModalIsOpen(false);\n\n  const {\n    onDeleteWork\n  } = useDeleteWork(workList, setWorkList, closeEditModal);\n\n  const editWorkWindow = /*#__PURE__*/_jsxDEV(EditWorkWindow, {\n    workList: workList,\n    setWorkList: setWorkList,\n    id: id,\n    callback: closeEditModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n\n  const editModal = /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: editModalIsOpen,\n    onRequestClose: closeEditModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    overlayClassName: \"Overlay\",\n    children: [editWorkWindow, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modalWindow__btn\",\n      onClick: event => {\n        closeEditModal();\n        onDeleteWork(event, id);\n      },\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modalWindow__close modalWindow__btn\",\n      onClick: closeEditModal,\n      children: \"CLOSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"workList__work tooltip\",\n      style: {\n        backgroundColor: workItem.workColor\n      },\n      onClick: openEditModal,\n      children: [workItem.workName, \" \", workItem.workTime, \"h\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tooltip-content\",\n        children: [workItem.workName, \" \", workItem.workTime, \"h\"]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), editModal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Work, \"ThEer1U4LpoKiCaGmNhEcHgGomA=\", false, function () {\n  return [useDeleteWork];\n});\n\n_c = Work;\n\nvar _c;\n\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/work/Work.js"],"names":["useState","Modal","useDeleteWork","useEditWork","EditWorkWindow","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","overlay","position","Work","workItem","workList","setWorkList","id","editModalIsOpen","setEditModalIsOpen","openEditModal","closeEditModal","event","onDeleteWork","editWorkWindow","editModal","workColor","workName","workTime"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { useDeleteWork } from \"../../../../hooks/workList/work/useDeleteWork\";\nimport { useEditWork } from \"../../../../hooks/workList/work/useEditWork\";\nimport { EditWorkWindow } from \"../../window/work/EditWorkWindow\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\nexport const Work = ({ workItem, workList, setWorkList, id }) => {\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const openEditModal = () => setEditModalIsOpen(true);\n  const closeEditModal = (event) => setEditModalIsOpen(false);\n\n  const { onDeleteWork } = useDeleteWork(workList, setWorkList, closeEditModal);\n\n  const editWorkWindow = (\n    <EditWorkWindow\n      workList={workList}\n      setWorkList={setWorkList}\n      id={id}\n      callback={closeEditModal}\n    />\n  );\n\n  const editModal = (\n    <Modal\n      isOpen={editModalIsOpen}\n      onRequestClose={closeEditModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      overlayClassName=\"Overlay\"\n    >\n      {editWorkWindow}\n      <button\n        className=\"modalWindow__btn\"\n        onClick={(event) => {\n          closeEditModal();\n          onDeleteWork(event, id);\n        }}\n      >\n        DELETE\n      </button>\n      <button\n        className=\"modalWindow__close modalWindow__btn\"\n        onClick={closeEditModal}\n      >\n        CLOSE\n      </button>\n    </Modal>\n  );\n\n  return (\n    <div>\n      <li\n        className=\"workList__work tooltip\"\n        style={{ backgroundColor: workItem.workColor }}\n        key={id}\n        onClick={openEditModal}\n      >\n        {workItem.workName} {workItem.workTime}h\n        <span className=\"tooltip-content\" key={id}>\n          {workItem.workName} {workItem.workTime}h\n        </span>\n      </li>\n      {editModal}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}