{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import isEmail from\"validator/lib/isEmail\";import{API}from\"../../tools/API\";// const baseUrl = \"https://github.com/login/oauth/authorize\";\n// const authConfig = {\n//   client_id: \"44089da06c95a868c4cb\",\n//   allow_signup: false,\n//   scope: \"read:user user:email\",\n// };\n// console.log(\"COMPARE: \", process.env.GH_CLIENT_ID, \"44089da06c95a868c4cb\");\nexport var useAttemptLogin=function useAttemptLogin(login,history){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),authUrl=_useState6[0],setAuthUrl=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoginPageLoading=_useState8[0],setLoad=_useState8[1];console.log(\"RES FIRST LOAD\",isLoginPageLoading);var handleSubmitNotSocial=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var userInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;event.preventDefault();userInfo={email:email,password:password};if(isEmail(email)){_context.next=5;break;}throw new Error(\"Entered Email form is wrong\");case 5:if(password){_context.next=7;break;}throw new Error(\"Password is empty\");case 7:_context.next=9;return login(userInfo,\"notSocial\");case 9:history.push(\"/\");_context.next=18;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);alert(_context.t0);setEmail(\"\");setPassword(\"\");history.push(\"/login\");case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function handleSubmitNotSocial(_x){return _ref.apply(this,arguments);};}();var getGithubAuthUrl=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _response$data;var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!isLoginPageLoading)setLoad(true);_context2.next=3;return API.auth().getGithubAuthUrl();case 3:response=_context2.sent;console.log(\"AUTH RES: \",response===null||response===void 0?void 0:response.data);setLoad(false);setAuthUrl(response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.authUrl);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function getGithubAuthUrl(){return _ref2.apply(this,arguments);};}();useEffect(function(){console.log(\"RES GO TO GET\",authUrl,isLoginPageLoading);getGithubAuthUrl();// return () => setLoad(false);\n},[]);useEffect(function(){return console.log(\"RES CHANGE: \",authUrl);},[authUrl]);useEffect(function(){return console.log(\"RES LOAD CHANGE: \",isLoginPageLoading);},[isLoginPageLoading]);return{email:email,setEmail:setEmail,password:password,setPassword:setPassword,handleSubmitNotSocial:handleSubmitNotSocial,authUrl:authUrl,isLoginPageLoading:isLoginPageLoading};};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptLogin.js"],"names":["useEffect","useState","isEmail","API","useAttemptLogin","login","history","email","setEmail","password","setPassword","authUrl","setAuthUrl","isLoginPageLoading","setLoad","console","log","handleSubmitNotSocial","event","preventDefault","userInfo","Error","push","alert","getGithubAuthUrl","auth","response","data"],"mappings":"udAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,OAAR,CAAoB,CACjD,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAAgCP,QAAQ,CAAC,EAAD,CAAxC,yCAAOQ,QAAP,eAAiBC,WAAjB,eACA,eAA8BT,QAAQ,CAAC,EAAD,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eACA,eAAsCX,QAAQ,CAAC,IAAD,CAA9C,yCAAOY,kBAAP,eAA2BC,OAA3B,eACAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BH,kBAA9B,EACA,GAAMI,CAAAA,qBAAqB,0FAAG,iBAAOC,KAAP,+IAE1BA,KAAK,CAACC,cAAN,GACMC,QAHoB,CAGT,CAAEb,KAAK,CAALA,KAAF,CAASE,QAAQ,CAARA,QAAT,CAHS,IAIrBP,OAAO,CAACK,KAAD,CAJc,8BAIC,IAAIc,CAAAA,KAAJ,CAAU,6BAAV,CAJD,WAKrBZ,QALqB,8BAKL,IAAIY,CAAAA,KAAJ,CAAU,mBAAV,CALK,8BAMpBhB,CAAAA,KAAK,CAACe,QAAD,CAAW,WAAX,CANe,QAO1Bd,OAAO,CAACgB,IAAR,CAAa,GAAb,EAP0B,iFAS1BC,KAAK,aAAL,CACAf,QAAQ,CAAC,EAAD,CAAR,CACAE,WAAW,CAAC,EAAD,CAAX,CACAJ,OAAO,CAACgB,IAAR,CAAa,QAAb,EAZ0B,qEAAH,kBAArBL,CAAAA,qBAAqB,4CAA3B,CAeA,GAAMO,CAAAA,gBAAgB,2FAAG,wKACvB,GAAI,CAACX,kBAAL,CAAyBC,OAAO,CAAC,IAAD,CAAP,CADF,uBAEAX,CAAAA,GAAG,CAACsB,IAAJ,GAAWD,gBAAX,EAFA,QAEjBE,QAFiB,gBAGvBX,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BU,QAA1B,SAA0BA,QAA1B,iBAA0BA,QAAQ,CAAEC,IAApC,EACAb,OAAO,CAAC,KAAD,CAAP,CACAF,UAAU,CAACc,QAAD,SAACA,QAAD,iCAACA,QAAQ,CAAEC,IAAX,yCAAC,eAAgBhB,OAAjB,CAAV,CALuB,wDAAH,kBAAhBa,CAAAA,gBAAgB,2CAAtB,CAQAxB,SAAS,CAAC,UAAM,CACde,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BL,OAA7B,CAAsCE,kBAAtC,EACAW,gBAAgB,GAChB;AACD,CAJQ,CAIN,EAJM,CAAT,CAKAxB,SAAS,CAAC,iBAAMe,CAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BL,OAA5B,CAAN,EAAD,CAA6C,CAACA,OAAD,CAA7C,CAAT,CACAX,SAAS,CACP,iBAAMe,CAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCH,kBAAjC,CAAN,EADO,CAEP,CAACA,kBAAD,CAFO,CAAT,CAIA,MAAO,CACLN,KAAK,CAALA,KADK,CAELC,QAAQ,CAARA,QAFK,CAGLC,QAAQ,CAARA,QAHK,CAILC,WAAW,CAAXA,WAJK,CAKLO,qBAAqB,CAArBA,qBALK,CAMLN,OAAO,CAAPA,OANK,CAOLE,kBAAkB,CAAlBA,kBAPK,CAAP,CASD,CAhDM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { API } from \"../../tools/API\";\n// const baseUrl = \"https://github.com/login/oauth/authorize\";\n// const authConfig = {\n//   client_id: \"44089da06c95a868c4cb\",\n//   allow_signup: false,\n//   scope: \"read:user user:email\",\n// };\n// console.log(\"COMPARE: \", process.env.GH_CLIENT_ID, \"44089da06c95a868c4cb\");\n\nexport const useAttemptLogin = (login, history) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [authUrl, setAuthUrl] = useState(\"\");\n  const [isLoginPageLoading, setLoad] = useState(true);\n  console.log(\"RES FIRST LOAD\", isLoginPageLoading);\n  const handleSubmitNotSocial = async (event) => {\n    try {\n      event.preventDefault();\n      const userInfo = { email, password };\n      if (!isEmail(email)) throw new Error(\"Entered Email form is wrong\");\n      if (!password) throw new Error(\"Password is empty\");\n      await login(userInfo, \"notSocial\");\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      setEmail(\"\");\n      setPassword(\"\");\n      history.push(\"/login\");\n    }\n  };\n  const getGithubAuthUrl = async () => {\n    if (!isLoginPageLoading) setLoad(true);\n    const response = await API.auth().getGithubAuthUrl();\n    console.log(\"AUTH RES: \", response?.data);\n    setLoad(false);\n    setAuthUrl(response?.data?.authUrl);\n  };\n\n  useEffect(() => {\n    console.log(\"RES GO TO GET\", authUrl, isLoginPageLoading);\n    getGithubAuthUrl();\n    // return () => setLoad(false);\n  }, []);\n  useEffect(() => console.log(\"RES CHANGE: \", authUrl), [authUrl]);\n  useEffect(\n    () => console.log(\"RES LOAD CHANGE: \", isLoginPageLoading),\n    [isLoginPageLoading]\n  );\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleSubmitNotSocial,\n    authUrl,\n    isLoginPageLoading,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}