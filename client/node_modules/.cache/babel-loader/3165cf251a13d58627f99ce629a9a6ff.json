{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/grade/WorkListGrade.js\",\n    _s = $RefreshSig$();\n\nimport { useWorkListGrade } from \"../../../../hooks/workList/useWorkListGrade\";\nimport { GradeStarList } from \"./GradeStarList\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst redoElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__redo\",\n  icon: faRedo,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\nexport const WorkListGrade = ({\n  user,\n  date\n}) => {\n  _s();\n\n  const [grade, difference, target, value, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n\n  const getGradeSum = () => grade ? Object.values(grade).reduce((prev, value) => prev += value, 0) : 0;\n\n  const gradeSum = getGradeSum();\n  console.log(\"SUM : \", grade, gradeSum); // const gradeElement = makeStar(getGradeSum()).map((elem, idx) => (\n  //   <div key={idx}> {elem}</div>\n  // ));\n\n  const testElement = /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"\\\\\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"WakeTime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"WorkTimeSum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"BedTime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Target\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this); // const targetElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">TargetTime:</span>\n  //     <span className=\"tooltip-box__value\">{targetTime}h</span>\n  //   </div>\n  // );\n  // const valueElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">Worktime Sum:</span>\n  //     <span className=\"tooltip-box__value\">{workTimeSum}h</span>\n  //   </div>\n  // );\n  // const differenceElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">TargetTime:</span>\n  //     <span className=\"tooltip-box__value\">{targetTime}h</span>\n  //   </div>\n  // );\n  // const gradeElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">Worktime Sum:</span>\n  //     <span className=\"tooltip-box__value\">{workTimeSum}h</span>\n  //   </div>\n  // );\n\n\n  const tooltipElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grade-tooltip-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-tooltip-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n\n  const getGradeBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: updateInfo,\n    children: [\" \", redoElement, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 23\n  }, this);\n\n  const displayGrade = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tooltip\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(GradeStarList, {\n      gradeSum: gradeSum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), getGradeBtn, testElement, tooltipElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  return grade ? displayGrade : getGradeBtn;\n};\n\n_s(WorkListGrade, \"OdxERPs4OLF945g2+zvNVozDjcs=\", false, function () {\n  return [useWorkListGrade];\n});\n\n_c = WorkListGrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListGrade\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/grade/WorkListGrade.js"],"names":["useWorkListGrade","GradeStarList","faRedo","FontAwesomeIcon","redoElement","WorkListGrade","user","date","grade","difference","target","value","isGradeLoading","updateInfo","getGradeSum","Object","values","reduce","prev","gradeSum","console","log","testElement","tooltipElement","getGradeBtn","displayGrade"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,6CAAjC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AACA,MAAMC,WAAW,gBACf,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,iBAA3B;AAA6C,EAAA,IAAI,EAAEF,MAAnD;AAA2D,EAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,QADF;;AAGA,OAAO,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,UAAR,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,cAAnC,EAAmDC,UAAnD,IACJb,gBAAgB,CAACM,IAAD,EAAOC,IAAP,CADlB;;AAEA,QAAMO,WAAW,GAAG,MAClBN,KAAK,GACDO,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqBS,MAArB,CAA4B,CAACC,IAAD,EAAOP,KAAP,KAAkBO,IAAI,IAAIP,KAAtD,EAA8D,CAA9D,CADC,GAED,CAHN;;AAIA,QAAMQ,QAAQ,GAAGL,WAAW,EAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBb,KAAtB,EAA6BW,QAA7B,EAR+C,CAS/C;AACA;AACA;;AACA,QAAMG,WAAW,gBACf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,oBACkB;AAAA;AAAA;AAAA;AAAA,cADlB,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAZ+C,CA0B/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,cAAc,gBAClB;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMC,WAAW,gBAAG;AAAQ,IAAA,OAAO,EAAEX,UAAjB;AAAA,oBAA+BT,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB;;AACA,QAAMqB,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACG,GADH,eAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEN;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGK,WAHH,EAIGF,WAJH,EAKGC,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,SAAOf,KAAK,GAAGiB,YAAH,GAAkBD,WAA9B;AACD,CApEM;;GAAMnB,a;UAETL,gB;;;KAFSK,a","sourcesContent":["import { useWorkListGrade } from \"../../../../hooks/workList/useWorkListGrade\";\nimport { GradeStarList } from \"./GradeStarList\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst redoElement = (\n  <FontAwesomeIcon className=\"work-icon__redo\" icon={faRedo} size=\"1x\" />\n);\nexport const WorkListGrade = ({ user, date }) => {\n  const [grade, difference, target, value, isGradeLoading, updateInfo] =\n    useWorkListGrade(user, date);\n  const getGradeSum = () =>\n    grade\n      ? Object.values(grade).reduce((prev, value) => (prev += value), 0)\n      : 0;\n  const gradeSum = getGradeSum();\n  console.log(\"SUM : \", grade, gradeSum);\n  // const gradeElement = makeStar(getGradeSum()).map((elem, idx) => (\n  //   <div key={idx}> {elem}</div>\n  // ));\n  const testElement = (\n    <table>\n      <th>\\</th>\n      <th>WakeTime</th>\n      <th>WorkTimeSum</th>\n      <th>BedTime</th>\n      <tr>\n        <td>Target</td> <td></td>\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </table>\n  );\n  // const targetElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">TargetTime:</span>\n  //     <span className=\"tooltip-box__value\">{targetTime}h</span>\n  //   </div>\n  // );\n  // const valueElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">Worktime Sum:</span>\n  //     <span className=\"tooltip-box__value\">{workTimeSum}h</span>\n  //   </div>\n  // );\n  // const differenceElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">TargetTime:</span>\n  //     <span className=\"tooltip-box__value\">{targetTime}h</span>\n  //   </div>\n  // );\n  // const gradeElement = (\n  //   <div className=\"tooltip-box__target\">\n  //     <span className=\"tooltip-box__key\">Worktime Sum:</span>\n  //     <span className=\"tooltip-box__value\">{workTimeSum}h</span>\n  //   </div>\n  // );\n\n  const tooltipElement = (\n    <div className=\"grade-tooltip-content\">\n      <div className=\"grade-tooltip-box\">{}</div>\n    </div>\n  );\n\n  const getGradeBtn = <button onClick={updateInfo}> {redoElement} </button>;\n  const displayGrade = (\n    <div className=\"tooltip\">\n      {\" \"}\n      <GradeStarList gradeSum={gradeSum} />\n      {getGradeBtn}\n      {testElement}\n      {tooltipElement}\n    </div>\n  );\n  return grade ? displayGrade : getGradeBtn;\n};\n"]},"metadata":{},"sourceType":"module"}