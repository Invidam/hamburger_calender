{"ast":null,"code":"/*! firebase-admin v9.11.1 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Installations = void 0;\n\nvar error_1 = require(\"../utils/error\");\n\nvar installations_request_handler_1 = require(\"./installations-request-handler\");\n\nvar validator = require(\"../utils/validator\");\n/**\n * The `Installations` service for the current app.\n */\n\n\nvar Installations = function () {\n  /**\n   * @param app The app for this Installations service.\n   * @constructor\n   */\n  function Installations(app) {\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new error_1.FirebaseInstallationsError(error_1.InstallationsClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.installations() must be a valid Firebase app instance.');\n    }\n\n    this.app_ = app;\n    this.requestHandler = new installations_request_handler_1.FirebaseInstallationsRequestHandler(app);\n  }\n  /**\n   * Deletes the specified installation ID and the associated data from Firebase.\n   *\n   * @param fid The Firebase installation ID to be deleted.\n   *\n   * @return A promise fulfilled when the installation ID is deleted.\n   */\n\n\n  Installations.prototype.deleteInstallation = function (fid) {\n    return this.requestHandler.deleteInstallation(fid);\n  };\n\n  Object.defineProperty(Installations.prototype, \"app\", {\n    /**\n     * Returns the app associated with this Installations instance.\n     *\n     * @return The app associated with this Installations instance.\n     */\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Installations;\n}();\n\nexports.Installations = Installations;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/firebase-admin/lib/installations/installations.js"],"names":["Object","defineProperty","exports","value","Installations","error_1","require","installations_request_handler_1","validator","app","isNonNullObject","FirebaseInstallationsError","InstallationsClientErrorCode","INVALID_ARGUMENT","app_","requestHandler","FirebaseInstallationsRequestHandler","prototype","deleteInstallation","fid","get","enumerable","configurable"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,+BAA+B,GAAGD,OAAO,CAAC,iCAAD,CAA7C;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAvB;AACA;AACA;AACA;;;AACA,IAAIF,aAAa,GAAkB,YAAY;AAC3C;AACJ;AACA;AACA;AACI,WAASA,aAAT,CAAuBK,GAAvB,EAA4B;AACxB,QAAI,CAACD,SAAS,CAACE,eAAV,CAA0BD,GAA1B,CAAD,IAAmC,EAAE,aAAaA,GAAf,CAAvC,EAA4D;AACxD,YAAM,IAAIJ,OAAO,CAACM,0BAAZ,CAAuCN,OAAO,CAACO,4BAAR,CAAqCC,gBAA5E,EAA8F,uFAA9F,CAAN;AACH;;AACD,SAAKC,IAAL,GAAYL,GAAZ;AACA,SAAKM,cAAL,GAAsB,IAAIR,+BAA+B,CAACS,mCAApC,CAAwEP,GAAxE,CAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,aAAa,CAACa,SAAd,CAAwBC,kBAAxB,GAA6C,UAAUC,GAAV,EAAe;AACxD,WAAO,KAAKJ,cAAL,CAAoBG,kBAApB,CAAuCC,GAAvC,CAAP;AACH,GAFD;;AAGAnB,EAAAA,MAAM,CAACC,cAAP,CAAsBG,aAAa,CAACa,SAApC,EAA+C,KAA/C,EAAsD;AAClD;AACR;AACA;AACA;AACA;AACQG,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKN,IAAZ;AACH,KARiD;AASlDO,IAAAA,UAAU,EAAE,KATsC;AAUlDC,IAAAA,YAAY,EAAE;AAVoC,GAAtD;AAYA,SAAOlB,aAAP;AACH,CAnCkC,EAAnC;;AAoCAF,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["/*! firebase-admin v9.11.1 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Installations = void 0;\nvar error_1 = require(\"../utils/error\");\nvar installations_request_handler_1 = require(\"./installations-request-handler\");\nvar validator = require(\"../utils/validator\");\n/**\n * The `Installations` service for the current app.\n */\nvar Installations = /** @class */ (function () {\n    /**\n     * @param app The app for this Installations service.\n     * @constructor\n     */\n    function Installations(app) {\n        if (!validator.isNonNullObject(app) || !('options' in app)) {\n            throw new error_1.FirebaseInstallationsError(error_1.InstallationsClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.installations() must be a valid Firebase app instance.');\n        }\n        this.app_ = app;\n        this.requestHandler = new installations_request_handler_1.FirebaseInstallationsRequestHandler(app);\n    }\n    /**\n     * Deletes the specified installation ID and the associated data from Firebase.\n     *\n     * @param fid The Firebase installation ID to be deleted.\n     *\n     * @return A promise fulfilled when the installation ID is deleted.\n     */\n    Installations.prototype.deleteInstallation = function (fid) {\n        return this.requestHandler.deleteInstallation(fid);\n    };\n    Object.defineProperty(Installations.prototype, \"app\", {\n        /**\n         * Returns the app associated with this Installations instance.\n         *\n         * @return The app associated with this Installations instance.\n         */\n        get: function () {\n            return this.app_;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Installations;\n}());\nexports.Installations = Installations;\n"]},"metadata":{},"sourceType":"script"}