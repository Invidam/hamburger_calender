{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{API}from\"../../tools/API\";var makeTargetSetting=function makeTargetSetting(targetWorkTime,targetWakeHour,targetWakeMinute,targetBedHour,targetBedMinute){return{targetWorkTime:targetWorkTime,targetWakeTime:{hour:targetWakeHour,minute:targetWakeMinute},targetBedTime:{hour:targetBedHour,minute:targetBedMinute}};};var makeEmptySetting=function makeEmptySetting(){return makeTargetSetting(-1,-1,-1,-1,-1);};export var useTargetSetting=function useTargetSetting(user,isLoginLoading){console.log(\"UPDATE SETTING HOOK USER: \",user,isLoginLoading);var _useState=useState(makeEmptySetting()),_useState2=_slicedToArray(_useState,2),targetSetting=_useState2[0],setTargetSetting=_useState2[1];// const [targetWorkTime, setTargetWorkTime] = useState(-1);\n// const [targetWakeHour, setTargetWakeHour] = useState(-1);\n// const [targetBedHour, setTargetBedHour] = useState(-1);\n// const [targetWakeMinute, setTargetWakeMinute] = useState(-1);\n// const [targetBedMinute, setTargetBedMinute] = useState(-1);\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isSettingHookLoading=_useState4[0],setLoad=_useState4[1];var getUserSetting=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,settingObj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log(\"SETTING USE EFFECT : \",user,isLoginLoading);if(!(user&&!isLoginLoading)){_context.next=14;break;}console.log(\"SETTIN-G\",user);// setLoad(true);\n_context.next=6;return API.userSetting(user).get();case 6:data=_context.sent;//API.get(`/auth/setting/${user}`);\nsettingObj=data===null||data===void 0?void 0:data.data;if(data){_context.next=10;break;}throw new Error(\"Cannot find data\");case 10:setTargetSetting(settingObj);setLoad(false);// setTargetWorkTime(settingObj?.targetWorkTime);\n// setTargetWakeHour(settingObj?.targetWakeTime.hour);\n// setTargetBedHour(settingObj?.targetBedTime.hour);\n// setTargetWakeMinute(settingObj?.targetWakeTime.minute);\n// setTargetBedMinute(settingObj?.targetBedTime.minute);\n_context.next=15;break;case 14:if(!isLoginLoading)setLoad(false);//\ncase 15:_context.next=21;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](0);setLoad(false);alert(_context.t0);// history.push(\"/setting\");\ncase 21:case\"end\":return _context.stop();}}},_callee,null,[[0,17]]);}));return function getUserSetting(){return _ref.apply(this,arguments);};}();useEffect(function(){getUserSetting();},[user,isLoginLoading]);var validator=function validator(targetSetting){return targetSetting.targetWorkTime!==-1&&targetSetting.targetWakeTime.hour!==-1&&targetSetting.targetBedTime.hour!==-1&&targetSetting.targetWakeTime.minute!==-1&&targetSetting.targetBedTime.minute!==-1;};var setTargetTime=function setTargetTime(targetSetting){try{var willUpdate=true;console.log(\"EDIT TARGET\");if(typeof validator===\"function\")willUpdate=validator(targetSetting);if(willUpdate){console.log(\"API START~~\");API.userSetting(user).edit(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWorkTime,targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWakeTime,targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetBedTime);setTargetSetting(targetSetting);// setTargetWorkTime(targetSetting?.targetWorkTime);\n// setTargetWakeHour(targetSetting?.targetWakeTime.hour);\n// setTargetBedHour(targetSetting?.targetBedTime.hour);\n// setTargetWakeMinute(targetSetting?.targetWakeTime.minute);\n// setTargetBedMinute(targetSetting?.targetBedTime.minute);\n}else{var targetWakeTime=(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWakeHour)&&(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWakeMinute);var targetBedTime=(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetBedHour)&&(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetBedMinute);var errText=\"[ERROR] \".concat((targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWorkTime)?\"\":\"TargetWorkTime\").concat(!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWakeTime)+!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetBedTime)>0&&!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWorkTime)?\", \":\"\").concat((targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWakeTime)?\"\":\"TargetWakeTime\").concat(!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetBedTime)>0&&!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWakeTime)?\", \":\"\").concat((targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetBedTime)?\"\":\"TargetBedtime\",\" \").concat(!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWorkTime)+!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetWakeTime)+!(targetSetting===null||targetSetting===void 0?void 0:targetSetting.targetBedTime)>1?\"are\":\"is\",\" not entered.\");throw new Error(errText);}}catch(error){alert(error);}};// const targetSetting = makeTargetSetting(\n//   targetWorkTime,\n//   targetWakeHour,\n//   targetBedHour,\n//   targetWakeMinute,\n//   targetBedMinute\n// );\nreturn{setTargetTime:setTargetTime,targetSetting:targetSetting,isSettingHookLoading:isSettingHookLoading};};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useTargetSetting.js"],"names":["useEffect","useState","API","makeTargetSetting","targetWorkTime","targetWakeHour","targetWakeMinute","targetBedHour","targetBedMinute","targetWakeTime","hour","minute","targetBedTime","makeEmptySetting","useTargetSetting","user","isLoginLoading","console","log","targetSetting","setTargetSetting","isSettingHookLoading","setLoad","getUserSetting","userSetting","get","data","settingObj","Error","alert","validator","setTargetTime","willUpdate","edit","errText","error"],"mappings":"kcAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CACxBC,cADwB,CAExBC,cAFwB,CAGxBC,gBAHwB,CAIxBC,aAJwB,CAKxBC,eALwB,CAMrB,CACH,MAAO,CACLJ,cAAc,CAAdA,cADK,CAELK,cAAc,CAAE,CAAEC,IAAI,CAAEL,cAAR,CAAwBM,MAAM,CAAEL,gBAAhC,CAFX,CAGLM,aAAa,CAAE,CAAEF,IAAI,CAAEH,aAAR,CAAuBI,MAAM,CAAEH,eAA/B,CAHV,CAAP,CAKD,CAZD,CAaA,GAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMV,CAAAA,iBAAiB,CAAC,CAAC,CAAF,CAAK,CAAC,CAAN,CAAS,CAAC,CAAV,CAAa,CAAC,CAAd,CAAiB,CAAC,CAAlB,CAAvB,EAAzB,CACA,MAAO,IAAMW,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAOC,cAAP,CAA0B,CACxDC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CH,IAA1C,CAAgDC,cAAhD,EACA,cAA0Cf,QAAQ,CAACY,gBAAgB,EAAjB,CAAlD,wCAAOM,aAAP,eAAsBC,gBAAtB,eACA;AACA;AACA;AACA;AACA;AACA,eAAwCnB,QAAQ,CAAC,IAAD,CAAhD,yCAAOoB,oBAAP,eAA6BC,OAA7B,eACA,GAAMC,CAAAA,cAAc,0FAAG,uKAEnBN,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCH,IAArC,CAA2CC,cAA3C,EAFmB,KAGfD,IAAI,EAAI,CAACC,cAHM,2BAIjBC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBH,IAAxB,EACA;AALiB,sBAMEb,CAAAA,GAAG,CAACsB,WAAJ,CAAgBT,IAAhB,EAAsBU,GAAtB,EANF,QAMXC,IANW,eAM+B;AAC1CC,UAPW,CAOED,IAPF,SAOEA,IAPF,iBAOEA,IAAI,CAAEA,IAPR,IAQZA,IARY,+BAQA,IAAIE,CAAAA,KAAJ,CAAU,kBAAV,CARA,SASjBR,gBAAgB,CAACO,UAAD,CAAhB,CACAL,OAAO,CAAC,KAAD,CAAP,CACA;AACA;AACA;AACA;AACA;AAfiB,+BAiBjB,GAAI,CAACN,cAAL,CAAqBM,OAAO,CAAC,KAAD,CAAP,CACrB;AAlBiB,yFAqBnBA,OAAO,CAAC,KAAD,CAAP,CACAO,KAAK,aAAL,CACA;AAvBmB,qEAAH,kBAAdN,CAAAA,cAAc,0CAApB,CA0BAvB,SAAS,CAAC,UAAM,CACduB,cAAc,GACf,CAFQ,CAEN,CAACR,IAAD,CAAOC,cAAP,CAFM,CAAT,CAIA,GAAMc,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACX,aAAD,CAAmB,CACnC,MACEA,CAAAA,aAAa,CAACf,cAAd,GAAiC,CAAC,CAAlC,EACAe,aAAa,CAACV,cAAd,CAA6BC,IAA7B,GAAsC,CAAC,CADvC,EAEAS,aAAa,CAACP,aAAd,CAA4BF,IAA5B,GAAqC,CAAC,CAFtC,EAGAS,aAAa,CAACV,cAAd,CAA6BE,MAA7B,GAAwC,CAAC,CAHzC,EAIAQ,aAAa,CAACP,aAAd,CAA4BD,MAA5B,GAAuC,CAAC,CAL1C,CAOD,CARD,CASA,GAAMoB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACZ,aAAD,CAAmB,CACvC,GAAI,CACF,GAAIa,CAAAA,UAAU,CAAG,IAAjB,CACAf,OAAO,CAACC,GAAR,CAAY,aAAZ,EACA,GAAI,MAAOY,CAAAA,SAAP,GAAqB,UAAzB,CACEE,UAAU,CAAGF,SAAS,CAACX,aAAD,CAAtB,CACF,GAAIa,UAAJ,CAAgB,CACdf,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAhB,GAAG,CAACsB,WAAJ,CAAgBT,IAAhB,EAAsBkB,IAAtB,CACEd,aADF,SACEA,aADF,iBACEA,aAAa,CAAEf,cADjB,CAEEe,aAFF,SAEEA,aAFF,iBAEEA,aAAa,CAAEV,cAFjB,CAGEU,aAHF,SAGEA,aAHF,iBAGEA,aAAa,CAAEP,aAHjB,EAKAQ,gBAAgB,CAACD,aAAD,CAAhB,CACA;AACA;AACA;AACA;AACA;AACD,CAbD,IAaO,CACL,GAAMV,CAAAA,cAAc,CAClB,CAAAU,aAAa,OAAb,EAAAA,aAAa,SAAb,QAAAA,aAAa,CAAEd,cAAf,IAAiCc,aAAjC,SAAiCA,aAAjC,iBAAiCA,aAAa,CAAEb,gBAAhD,CADF,CAEA,GAAMM,CAAAA,aAAa,CACjB,CAAAO,aAAa,OAAb,EAAAA,aAAa,SAAb,QAAAA,aAAa,CAAEZ,aAAf,IAAgCY,aAAhC,SAAgCA,aAAhC,iBAAgCA,aAAa,CAAEX,eAA/C,CADF,CAEA,GAAI0B,CAAAA,OAAO,mBACT,CAAAf,aAAa,OAAb,EAAAA,aAAa,SAAb,QAAAA,aAAa,CAAEf,cAAf,EAAgC,EAAhC,CAAqC,gBAD5B,SAGT,EAACe,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEV,cAAhB,EAAiC,EAACU,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEP,aAAhB,CAAjC,CAAiE,CAAjE,EACA,EAACO,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEf,cAAhB,CADA,CAEI,IAFJ,CAGI,EANK,SAOR,CAAAe,aAAa,OAAb,EAAAA,aAAa,SAAb,QAAAA,aAAa,CAAEV,cAAf,EAAgC,EAAhC,CAAqC,gBAP7B,SAQT,EAACU,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEP,aAAhB,EAAgC,CAAhC,EAAqC,EAACO,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEV,cAAhB,CAArC,CACI,IADJ,CAEI,EAVK,SAWR,CAAAU,aAAa,OAAb,EAAAA,aAAa,SAAb,QAAAA,aAAa,CAAEP,aAAf,EAA+B,EAA/B,CAAoC,eAX5B,aAYT,EAACO,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEf,cAAhB,EACE,EAACe,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEV,cAAhB,CADF,CAEE,EAACU,aAAD,SAACA,aAAD,iBAACA,aAAa,CAAEP,aAAhB,CAFF,CAGA,CAHA,CAII,KAJJ,CAKI,IAjBK,iBAAX,CAmBA,KAAM,IAAIgB,CAAAA,KAAJ,CAAUM,OAAV,CAAN,CACD,CACF,CAAC,MAAOC,KAAP,CAAc,CACdN,KAAK,CAACM,KAAD,CAAL,CACD,CACF,CAhDD,CAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CACLJ,aAAa,CAAbA,aADK,CAELZ,aAAa,CAAbA,aAFK,CAGLE,oBAAoB,CAApBA,oBAHK,CAAP,CAKD,CA7GM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\nconst makeTargetSetting = (\n  targetWorkTime,\n  targetWakeHour,\n  targetWakeMinute,\n  targetBedHour,\n  targetBedMinute\n) => {\n  return {\n    targetWorkTime,\n    targetWakeTime: { hour: targetWakeHour, minute: targetWakeMinute },\n    targetBedTime: { hour: targetBedHour, minute: targetBedMinute },\n  };\n};\nconst makeEmptySetting = () => makeTargetSetting(-1, -1, -1, -1, -1);\nexport const useTargetSetting = (user, isLoginLoading) => {\n  console.log(\"UPDATE SETTING HOOK USER: \", user, isLoginLoading);\n  const [targetSetting, setTargetSetting] = useState(makeEmptySetting());\n  // const [targetWorkTime, setTargetWorkTime] = useState(-1);\n  // const [targetWakeHour, setTargetWakeHour] = useState(-1);\n  // const [targetBedHour, setTargetBedHour] = useState(-1);\n  // const [targetWakeMinute, setTargetWakeMinute] = useState(-1);\n  // const [targetBedMinute, setTargetBedMinute] = useState(-1);\n  const [isSettingHookLoading, setLoad] = useState(true);\n  const getUserSetting = async () => {\n    try {\n      console.log(\"SETTING USE EFFECT : \", user, isLoginLoading);\n      if (user && !isLoginLoading) {\n        console.log(\"SETTIN-G\", user);\n        // setLoad(true);\n        const data = await API.userSetting(user).get(); //API.get(`/auth/setting/${user}`);\n        const settingObj = data?.data;\n        if (!data) throw new Error(\"Cannot find data\");\n        setTargetSetting(settingObj);\n        setLoad(false);\n        // setTargetWorkTime(settingObj?.targetWorkTime);\n        // setTargetWakeHour(settingObj?.targetWakeTime.hour);\n        // setTargetBedHour(settingObj?.targetBedTime.hour);\n        // setTargetWakeMinute(settingObj?.targetWakeTime.minute);\n        // setTargetBedMinute(settingObj?.targetBedTime.minute);\n      } else {\n        if (!isLoginLoading) setLoad(false);\n        //\n      }\n    } catch (error) {\n      setLoad(false);\n      alert(error);\n      // history.push(\"/setting\");\n    }\n  };\n  useEffect(() => {\n    getUserSetting();\n  }, [user, isLoginLoading]);\n\n  const validator = (targetSetting) => {\n    return (\n      targetSetting.targetWorkTime !== -1 &&\n      targetSetting.targetWakeTime.hour !== -1 &&\n      targetSetting.targetBedTime.hour !== -1 &&\n      targetSetting.targetWakeTime.minute !== -1 &&\n      targetSetting.targetBedTime.minute !== -1\n    );\n  };\n  const setTargetTime = (targetSetting) => {\n    try {\n      let willUpdate = true;\n      console.log(\"EDIT TARGET\");\n      if (typeof validator === \"function\")\n        willUpdate = validator(targetSetting);\n      if (willUpdate) {\n        console.log(\"API START~~\");\n        API.userSetting(user).edit(\n          targetSetting?.targetWorkTime,\n          targetSetting?.targetWakeTime,\n          targetSetting?.targetBedTime\n        );\n        setTargetSetting(targetSetting);\n        // setTargetWorkTime(targetSetting?.targetWorkTime);\n        // setTargetWakeHour(targetSetting?.targetWakeTime.hour);\n        // setTargetBedHour(targetSetting?.targetBedTime.hour);\n        // setTargetWakeMinute(targetSetting?.targetWakeTime.minute);\n        // setTargetBedMinute(targetSetting?.targetBedTime.minute);\n      } else {\n        const targetWakeTime =\n          targetSetting?.targetWakeHour && targetSetting?.targetWakeMinute;\n        const targetBedTime =\n          targetSetting?.targetBedHour && targetSetting?.targetBedMinute;\n        let errText = `[ERROR] ${\n          targetSetting?.targetWorkTime ? \"\" : \"TargetWorkTime\"\n        }${\n          !targetSetting?.targetWakeTime + !targetSetting?.targetBedTime > 0 &&\n          !targetSetting?.targetWorkTime\n            ? \", \"\n            : \"\"\n        }${targetSetting?.targetWakeTime ? \"\" : \"TargetWakeTime\"}${\n          !targetSetting?.targetBedTime > 0 && !targetSetting?.targetWakeTime\n            ? \", \"\n            : \"\"\n        }${targetSetting?.targetBedTime ? \"\" : \"TargetBedtime\"} ${\n          !targetSetting?.targetWorkTime +\n            !targetSetting?.targetWakeTime +\n            !targetSetting?.targetBedTime >\n          1\n            ? \"are\"\n            : \"is\"\n        } not entered.`;\n        throw new Error(errText);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  // const targetSetting = makeTargetSetting(\n  //   targetWorkTime,\n  //   targetWakeHour,\n  //   targetBedHour,\n  //   targetWakeMinute,\n  //   targetBedMinute\n  // );\n  return {\n    setTargetTime,\n    targetSetting,\n    isSettingHookLoading,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}