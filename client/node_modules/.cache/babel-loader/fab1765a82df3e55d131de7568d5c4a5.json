{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\n\nconst getEmptyWorkList = () => {\n  return [{\n    workTime: -1\n  }];\n};\n\nconst isEmptyWorkList = workList => {\n  var _workList$;\n\n  return workList ? ((_workList$ = workList[0]) === null || _workList$ === void 0 ? void 0 : _workList$.workTime) === -1 : true;\n};\n\nconst checkWorkList = workList => isEmptyWorkList(workList) ? getEmptyWorkList() : workList;\n\nexport const useUpdateWork = (initList, user, date) => {\n  _s();\n\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\") ? JSON.parse(window.localStorage.getItem(\"workList\")) : [];\n  const [workList, setWorkList] = useState();\n  useEffect(() => {\n    getAndUpdateWorkList();\n  }, [date]);\n\n  const getAndUpdateWorkList = async () => {\n    const data = await axios.get(`/api/${user}/${date}/worklist/worklist`);\n    const resWorkList = checkWorkList(data === null || data === void 0 ? void 0 : data.data);\n    console.log(\"SET AFT\", resWorkList);\n    setWorkList(resWorkList);\n  };\n\n  const updateWorkList = _workList => {\n    console.log(\"BEF\", _workList);\n    _workList = checkWorkList(_workList);\n    console.log(\"AFT\", _workList);\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList\n    }); // if (_workList?.length)\n    //   window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n    // else window.localStorage.removeItem(\"workList\");\n  };\n\n  return [workList, updateWorkList];\n}; //:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n\n_s(useUpdateWork, \"JK4s//pofYMHoAup+tILQomfvO4=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/useUpdateWork.js"],"names":["useEffect","useState","axios","getToday","getEmptyWorkList","workTime","isEmptyWorkList","workList","checkWorkList","useUpdateWork","initList","user","date","window","localStorage","getItem","JSON","parse","setWorkList","getAndUpdateWorkList","data","get","resWorkList","console","log","updateWorkList","_workList","post","value"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SAAO,CAAC;AAAEC,IAAAA,QAAQ,EAAE,CAAC;AAAb,GAAD,CAAP;AACD,CAFD;;AAGA,MAAMC,eAAe,GAAIC,QAAD;AAAA;;AAAA,SACtBA,QAAQ,GAAG,eAAAA,QAAQ,CAAC,CAAD,CAAR,0DAAaF,QAAb,MAA0B,CAAC,CAA9B,GAAkC,IADpB;AAAA,CAAxB;;AAGA,MAAMG,aAAa,GAAID,QAAD,IACpBD,eAAe,CAACC,QAAD,CAAf,GAA4BH,gBAAgB,EAA5C,GAAiDG,QADnD;;AAGA,OAAO,MAAME,aAAa,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,KAA0B;AAAA;;AACrD;AACAF,EAAAA,QAAQ,GAAGG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,IACPC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CADO,GAEP,EAFJ;AAGA,QAAM,CAACR,QAAD,EAAWW,WAAX,IAA0BjB,QAAQ,EAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,CAACP,IAAD,CAFM,CAAT;;AAIA,QAAMO,oBAAoB,GAAG,YAAY;AACvC,UAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,QAAOV,IAAK,IAAGC,IAAK,oBAA/B,CAAnB;AACA,UAAMU,WAAW,GAAGd,aAAa,CAACY,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAjC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,WAAvB;AACAJ,IAAAA,WAAW,CAACI,WAAD,CAAX;AACD,GALD;;AAOA,QAAMG,cAAc,GAAIC,SAAD,IAAe;AACpCH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,SAAnB;AACAA,IAAAA,SAAS,GAAGlB,aAAa,CAACkB,SAAD,CAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,SAAnB;AACAR,IAAAA,WAAW,CAACQ,SAAD,CAAX;AACAxB,IAAAA,KAAK,CAACyB,IAAN,CAAY,QAAOhB,IAAK,IAAGC,IAAK,oBAAhC,EAAqD;AACnDD,MAAAA,IAAI,EAAE,MAD6C;AAEnDiB,MAAAA,KAAK,EAAEF;AAF4C,KAArD,EALoC,CASpC;AACA;AACA;AACD,GAZD;;AAaA,SAAO,CAACnB,QAAD,EAAWkB,cAAX,CAAP;AACD,CA/BM,C,CAgCP;AACA;;GAjCahB,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\n\nconst getEmptyWorkList = () => {\n  return [{ workTime: -1 }];\n};\nconst isEmptyWorkList = (workList) =>\n  workList ? workList[0]?.workTime === -1 : true;\n\nconst checkWorkList = (workList) =>\n  isEmptyWorkList(workList) ? getEmptyWorkList() : workList;\n\nexport const useUpdateWork = (initList, user, date) => {\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\")\n    ? JSON.parse(window.localStorage.getItem(\"workList\"))\n    : [];\n  const [workList, setWorkList] = useState();\n  useEffect(() => {\n    getAndUpdateWorkList();\n  }, [date]);\n\n  const getAndUpdateWorkList = async () => {\n    const data = await axios.get(`/api/${user}/${date}/worklist/worklist`);\n    const resWorkList = checkWorkList(data?.data);\n    console.log(\"SET AFT\", resWorkList);\n    setWorkList(resWorkList);\n  };\n\n  const updateWorkList = (_workList) => {\n    console.log(\"BEF\", _workList);\n    _workList = checkWorkList(_workList);\n    console.log(\"AFT\", _workList);\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList,\n    });\n    // if (_workList?.length)\n    //   window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n    // else window.localStorage.removeItem(\"workList\");\n  };\n  return [workList, updateWorkList];\n};\n//:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n"]},"metadata":{},"sourceType":"module"}