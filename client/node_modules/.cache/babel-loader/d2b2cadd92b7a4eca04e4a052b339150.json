{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport randomToken from \"rand-token\";\nexport const useTodo = (setTodo, todoItem) => {\n  _s();\n\n  const [isCheck, setCheck] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.check);\n  const [text, setContent] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.text);\n  const [date, setDate] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.date);\n  const [priority, setPriority] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.priority);\n\n  const onClickCheck = () => setCheck(!isCheck);\n\n  const onChangeContent = text => setContent(text);\n\n  const onChangeDate = date => setDate(date); //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n\n  const validator = todoItem => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n\n  const getErrText = () => {\n    let errText = `[ERROR] In, TodoList ${text ? \"\" : \" Text\"}${!date + !priority > 0 && !text ? \", \" : \"\"}${date ? \"\" : \" Date\"}${!priority > 0 && !date ? \", \" : \"\"}${priority ? \"\" : \" Prioirty\"} ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n\n  const onChangePriority = value => setPriority(value);\n\n  const onSubmitTodo = event => {\n    try {\n      event.preventDefault();\n      const id = Date.now().toString(16) + randomToken.generate(5);\n      const todoItem = {\n        isCheck,\n        text,\n        date,\n        priority,\n        id\n      };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n\n      if (willUpdate) {\n        setTodo(todoItem).create();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onEditTodo = event => {\n    try {\n      event.preventDefault();\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n\n      if (willUpdate) {\n        setTodo(todoItem).edit();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onDeleteTodo = event => {\n    try {\n      event.preventDefault();\n\n      const deleteAction = () => setTodo(todoItem).delete();\n\n      const cancelAction = () => console.log(\"CANCEL DELETE WORK\");\n\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\n        deleteAction();\n      } else {\n        cancelAction();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority, onSubmitTodo, onEditTodo, onDeleteTodo];\n};\n\n_s(useTodo, \"7uw8nPDi0d6j657GwIuqgCNda8Q=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodo.js"],"names":["useState","randomToken","useTodo","setTodo","todoItem","isCheck","setCheck","check","text","setContent","date","setDate","priority","setPriority","onClickCheck","onChangeContent","onChangeDate","validator","getErrText","errText","onChangePriority","value","onSubmitTodo","event","preventDefault","id","Date","now","toString","generate","willUpdate","create","Error","error","alert","onEditTodo","edit","onDeleteTodo","deleteAction","delete","cancelAction","console","log","window","confirm"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport randomToken from \"rand-token\";\nexport const useTodo = (setTodo, todoItem) => {\n  const [isCheck, setCheck] = useState(todoItem?.check);\n  const [text, setContent] = useState(todoItem?.text);\n  const [date, setDate] = useState(todoItem?.date);\n  const [priority, setPriority] = useState(todoItem?.priority);\n\n  const onClickCheck = () => setCheck(!isCheck);\n  const onChangeContent = (text) => setContent(text);\n  const onChangeDate = (date) => setDate(date);\n  //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n  const validator = (todoItem) => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n  const getErrText = () => {\n    let errText = `[ERROR] In, TodoList ${text ? \"\" : \" Text\"}${\n      !date + !priority > 0 && !text ? \", \" : \"\"\n    }${date ? \"\" : \" Date\"}${!priority > 0 && !date ? \", \" : \"\"}${\n      priority ? \"\" : \" Prioirty\"\n    } ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n  const onChangePriority = (value) => setPriority(value);\n  const onSubmitTodo = (event) => {\n    try {\n      event.preventDefault();\n      const id = Date.now().toString(16) + randomToken.generate(5);\n      const todoItem = { isCheck, text, date, priority, id };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n      if (willUpdate) {\n        setTodo(todoItem).create();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onEditTodo = (event) => {\n    try {\n      event.preventDefault();\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n      if (willUpdate) {\n        setTodo(todoItem).edit();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onDeleteTodo = (event) => {\n    try {\n      event.preventDefault();\n      const deleteAction = () => setTodo(todoItem).delete();\n      const cancelAction = () => console.log(\"CANCEL DELETE WORK\");\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\n        deleteAction();\n      } else {\n        cancelAction();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return [\n    onClickCheck,\n    onChangeContent,\n    onChangeDate,\n    onChangePriority,\n    onSubmitTodo,\n    onEditTodo,\n    onDeleteTodo,\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}