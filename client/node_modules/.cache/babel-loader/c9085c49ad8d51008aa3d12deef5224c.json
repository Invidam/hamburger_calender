{"ast":null,"code":"const retrieveSigningKeys = require('../utils').retrieveSigningKeys;\n/**\n * Uses getKeysInterceptor to allow users to retrieve keys from a file,\n * external cache, or provided object before falling back to the jwksUri endpoint\n */\n\n\nfunction getKeysInterceptor(client, {\n  getKeysInterceptor\n}) {\n  const getSigningKey = client.getSigningKey.bind(client);\n  return async kid => {\n    const keys = await getKeysInterceptor();\n    let signingKeys;\n\n    if (keys && keys.length) {\n      signingKeys = retrieveSigningKeys(keys);\n    }\n\n    if (signingKeys && signingKeys.length) {\n      const key = signingKeys.find(k => !kid || k.kid === kid);\n\n      if (key) {\n        return key;\n      }\n    }\n\n    return getSigningKey(kid);\n  };\n}\n\nmodule.exports.default = getKeysInterceptor;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/jwks-rsa/src/wrappers/interceptor.js"],"names":["retrieveSigningKeys","require","getKeysInterceptor","client","getSigningKey","bind","kid","keys","signingKeys","length","key","find","k","module","exports","default"],"mappings":"AAAA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,mBAAhD;AAEA;AACA;AACA;AACA;;;AACA,SAASE,kBAAT,CAA4BC,MAA5B,EAAoC;AAAED,EAAAA;AAAF,CAApC,EAA4D;AAC1D,QAAME,aAAa,GAAGD,MAAM,CAACC,aAAP,CAAqBC,IAArB,CAA0BF,MAA1B,CAAtB;AAEA,SAAO,MAAOG,GAAP,IAAe;AACpB,UAAMC,IAAI,GAAG,MAAML,kBAAkB,EAArC;AAEA,QAAIM,WAAJ;;AACA,QAAID,IAAI,IAAIA,IAAI,CAACE,MAAjB,EAAyB;AACvBD,MAAAA,WAAW,GAAGR,mBAAmB,CAACO,IAAD,CAAjC;AACD;;AAED,QAAIC,WAAW,IAAIA,WAAW,CAACC,MAA/B,EAAuC;AACrC,YAAMC,GAAG,GAAGF,WAAW,CAACG,IAAZ,CAAiBC,CAAC,IAAI,CAACN,GAAD,IAAQM,CAAC,CAACN,GAAF,KAAUA,GAAxC,CAAZ;;AAEA,UAAII,GAAJ,EAAS;AACP,eAAOA,GAAP;AACD;AACF;;AAED,WAAON,aAAa,CAACE,GAAD,CAApB;AACD,GAjBD;AAkBD;;AAEDO,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBb,kBAAzB","sourcesContent":["const retrieveSigningKeys = require('../utils').retrieveSigningKeys;\n\n/**\n * Uses getKeysInterceptor to allow users to retrieve keys from a file,\n * external cache, or provided object before falling back to the jwksUri endpoint\n */\nfunction getKeysInterceptor(client, { getKeysInterceptor }) {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  return async (kid) => {\n    const keys = await getKeysInterceptor();\n\n    let signingKeys;\n    if (keys && keys.length) {\n      signingKeys = retrieveSigningKeys(keys);\n    }\n\n    if (signingKeys && signingKeys.length) {\n      const key = signingKeys.find(k => !kid || k.kid === kid);\n\n      if (key) {\n        return key;\n      }\n    }\n\n    return getSigningKey(kid);\n  };\n}\n\nmodule.exports.default = getKeysInterceptor;\n"]},"metadata":{},"sourceType":"script"}