{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport randomToken from \"rand-token\";\nexport const useTodo = (setTodo, todoItem) => {\n  _s();\n\n  const [isCheck, setCheck] = useState(todoItem ? todoItem === null || todoItem === void 0 ? void 0 : todoItem.check : undefined);\n  const [text, setContent] = useState(todoItem ? todoItem === null || todoItem === void 0 ? void 0 : todoItem.text : undefined);\n  const [date, setDate] = useState(todoItem ? todoItem === null || todoItem === void 0 ? void 0 : todoItem.date : undefined);\n  const [priority, setPriority] = useState(todoItem ? todoItem === null || todoItem === void 0 ? void 0 : todoItem.priority : undefined);\n\n  const onClickCheck = () => setCheck(!isCheck);\n\n  const onChangeContent = text => setContent(text);\n\n  const onChangeDate = date => setDate(date); //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n\n  const getErrText = () => {\n    let errText = `[ERROR] ${text ? \"\" : \"Todo Text\"}${!date + !priority > 0 && !text ? \", \" : \"\"}${date ? \"\" : \"Todo Date\"}${!priority > 0 && !date ? \", \" : \"\"}${priority ? \"\" : \"Todo Prioirty\"} ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n\n  const onChangePriority = value => setPriority(value);\n\n  const onSubmitTodo = event => {\n    event.preventDefault();\n    const id = Date.now().toString(16) + randomToken.generate(5);\n    setTodo().create();\n  };\n\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n\n_s(useTodo, \"qFMEfUKe6Sh1SuXkiwQmX4KiHAk=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodo.js"],"names":["useState","randomToken","useTodo","setTodo","todoItem","isCheck","setCheck","check","undefined","text","setContent","date","setDate","priority","setPriority","onClickCheck","onChangeContent","onChangeDate","getErrText","errText","onChangePriority","value","onSubmitTodo","event","preventDefault","id","Date","now","toString","generate","create"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAAA;;AAC5C,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBN,QAAQ,CAACI,QAAQ,GAAGA,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEG,KAAb,GAAqBC,SAA9B,CAApC;AACA,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBV,QAAQ,CAACI,QAAQ,GAAGA,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEK,IAAb,GAAoBD,SAA7B,CAAnC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACI,QAAQ,GAAGA,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEO,IAAb,GAAoBH,SAA7B,CAAhC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CACtCI,QAAQ,GAAGA,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAES,QAAb,GAAwBL,SADM,CAAxC;;AAIA,QAAMO,YAAY,GAAG,MAAMT,QAAQ,CAAC,CAACD,OAAF,CAAnC;;AACA,QAAMW,eAAe,GAAIP,IAAD,IAAUC,UAAU,CAACD,IAAD,CAA5C;;AACA,QAAMQ,YAAY,GAAIN,IAAD,IAAUC,OAAO,CAACD,IAAD,CAAtC,CAV4C,CAW5C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvB,QAAIC,OAAO,GAAI,WAAUV,IAAI,GAAG,EAAH,GAAQ,WAAY,GAC/C,CAACE,IAAD,GAAQ,CAACE,QAAT,GAAoB,CAApB,IAAyB,CAACJ,IAA1B,GAAiC,IAAjC,GAAwC,EACzC,GAAEE,IAAI,GAAG,EAAH,GAAQ,WAAY,GAAE,CAACE,QAAD,GAAY,CAAZ,IAAiB,CAACF,IAAlB,GAAyB,IAAzB,GAAgC,EAAG,GAC9DE,QAAQ,GAAG,EAAH,GAAQ,eACjB,IAAG,CAACJ,IAAD,GAAQ,CAACE,IAAT,GAAgB,CAACE,QAAjB,GAA4B,CAA5B,GAAgC,KAAhC,GAAwC,IAAK,eAJjD;AAKA,WAAOM,OAAP;AACD,GAPD;;AAQA,QAAMC,gBAAgB,GAAIC,KAAD,IAAWP,WAAW,CAACO,KAAD,CAA/C;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,GAAWC,QAAX,CAAoB,EAApB,IAA0B3B,WAAW,CAAC4B,QAAZ,CAAqB,CAArB,CAArC;AACA1B,IAAAA,OAAO,GAAG2B,MAAV;AACD,GAJD;;AAKA,SAAO,CAACf,YAAD,EAAeC,eAAf,EAAgCC,YAAhC,EAA8CG,gBAA9C,CAAP;AACD,CAlCM;;GAAMlB,O","sourcesContent":["import { useState } from \"react\";\nimport randomToken from \"rand-token\";\nexport const useTodo = (setTodo, todoItem) => {\n  const [isCheck, setCheck] = useState(todoItem ? todoItem?.check : undefined);\n  const [text, setContent] = useState(todoItem ? todoItem?.text : undefined);\n  const [date, setDate] = useState(todoItem ? todoItem?.date : undefined);\n  const [priority, setPriority] = useState(\n    todoItem ? todoItem?.priority : undefined\n  );\n\n  const onClickCheck = () => setCheck(!isCheck);\n  const onChangeContent = (text) => setContent(text);\n  const onChangeDate = (date) => setDate(date);\n  //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n  const getErrText = () => {\n    let errText = `[ERROR] ${text ? \"\" : \"Todo Text\"}${\n      !date + !priority > 0 && !text ? \", \" : \"\"\n    }${date ? \"\" : \"Todo Date\"}${!priority > 0 && !date ? \", \" : \"\"}${\n      priority ? \"\" : \"Todo Prioirty\"\n    } ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n  const onChangePriority = (value) => setPriority(value);\n  const onSubmitTodo = (event) => {\n    event.preventDefault();\n    const id = Date.now().toString(16) + randomToken.generate(5);\n    setTodo().create();\n  };\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n"]},"metadata":{},"sourceType":"module"}