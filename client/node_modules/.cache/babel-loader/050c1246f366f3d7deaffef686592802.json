{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport randomToken from \"rand-token\";\nexport const useTodo = setTodo => {\n  _s();\n\n  const [isCheck, setCheck] = useState();\n  const [content, setContent] = useState();\n  const [date, setDate] = useState();\n  const [priority, setPriority] = useState();\n\n  const onClickCheck = () => setCheck(!isCheck);\n\n  const onChangeContent = content => setContent(content);\n\n  const onChangeDate = date => setDate(date); //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n\n  const onChangePriority = value => setPriority(value);\n\n  const onSubmitTodo = event => {\n    const id = Date.now().toString(16) + randomToken.generate(5);\n    setTodo().create();\n  };\n\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n\n_s(useTodo, \"wKLG4s8ucK8H6LsayS3y6K5TBww=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodo.js"],"names":["useState","randomToken","useTodo","setTodo","isCheck","setCheck","content","setContent","date","setDate","priority","setPriority","onClickCheck","onChangeContent","onChangeDate","onChangePriority","value","onSubmitTodo","event","id","Date","now","toString","generate","create"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAO,MAAMC,OAAO,GAAIC,OAAD,IAAa;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBL,QAAQ,EAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;;AAEA,QAAMY,YAAY,GAAG,MAAMP,QAAQ,CAAC,CAACD,OAAF,CAAnC;;AACA,QAAMS,eAAe,GAAIP,OAAD,IAAaC,UAAU,CAACD,OAAD,CAA/C;;AACA,QAAMQ,YAAY,GAAIN,IAAD,IAAUC,OAAO,CAACD,IAAD,CAAtC,CARkC,CASlC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMO,gBAAgB,GAAIC,KAAD,IAAWL,WAAW,CAACK,KAAD,CAA/C;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,GAAWC,QAAX,CAAoB,EAApB,IAA0BrB,WAAW,CAACsB,QAAZ,CAAqB,CAArB,CAArC;AACApB,IAAAA,OAAO,GAAGqB,MAAV;AACD,GAHD;;AAIA,SAAO,CAACZ,YAAD,EAAeC,eAAf,EAAgCC,YAAhC,EAA8CC,gBAA9C,CAAP;AACD,CAvBM;;GAAMb,O","sourcesContent":["import { useState } from \"react\";\n\nimport randomToken from \"rand-token\";\nexport const useTodo = (setTodo) => {\n  const [isCheck, setCheck] = useState();\n  const [content, setContent] = useState();\n  const [date, setDate] = useState();\n  const [priority, setPriority] = useState();\n\n  const onClickCheck = () => setCheck(!isCheck);\n  const onChangeContent = (content) => setContent(content);\n  const onChangeDate = (date) => setDate(date);\n  //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n  const onChangePriority = (value) => setPriority(value);\n  const onSubmitTodo = (event) => {\n    const id = Date.now().toString(16) + randomToken.generate(5);\n    setTodo().create();\n  };\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n"]},"metadata":{},"sourceType":"module"}