{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fixRequestBody = void 0;\n\nconst querystring = require(\"querystring\");\n/**\n * Fix proxied body if bodyParser is involved.\n */\n\n\nfunction fixRequestBody(proxyReq, req) {\n  const requestBody = req.body;\n\n  if (!requestBody || !Object.keys(requestBody).length) {\n    return;\n  }\n\n  const contentType = proxyReq.getHeader('Content-Type');\n\n  const writeBody = bodyData => {\n    // deepcode ignore ContentLengthInCode: bodyParser fix\n    proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n    proxyReq.write(bodyData);\n  };\n\n  if (contentType && contentType.includes('application/json')) {\n    writeBody(JSON.stringify(requestBody));\n  }\n\n  if (contentType === 'application/x-www-form-urlencoded') {\n    writeBody(querystring.stringify(requestBody));\n  }\n}\n\nexports.fixRequestBody = fixRequestBody;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/node_modules/http-proxy-middleware/dist/handlers/fix-request-body.js"],"names":["Object","defineProperty","exports","value","fixRequestBody","querystring","require","proxyReq","req","requestBody","body","keys","length","contentType","getHeader","writeBody","bodyData","setHeader","Buffer","byteLength","write","includes","JSON","stringify"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBG,QAAxB,EAAkCC,GAAlC,EAAuC;AACnC,QAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB;;AACA,MAAI,CAACD,WAAD,IAAgB,CAACT,MAAM,CAACW,IAAP,CAAYF,WAAZ,EAAyBG,MAA9C,EAAsD;AAClD;AACH;;AACD,QAAMC,WAAW,GAAGN,QAAQ,CAACO,SAAT,CAAmB,cAAnB,CAApB;;AACA,QAAMC,SAAS,GAAIC,QAAD,IAAc;AAC5B;AACAT,IAAAA,QAAQ,CAACU,SAAT,CAAmB,gBAAnB,EAAqCC,MAAM,CAACC,UAAP,CAAkBH,QAAlB,CAArC;AACAT,IAAAA,QAAQ,CAACa,KAAT,CAAeJ,QAAf;AACH,GAJD;;AAKA,MAAIH,WAAW,IAAIA,WAAW,CAACQ,QAAZ,CAAqB,kBAArB,CAAnB,EAA6D;AACzDN,IAAAA,SAAS,CAACO,IAAI,CAACC,SAAL,CAAed,WAAf,CAAD,CAAT;AACH;;AACD,MAAII,WAAW,KAAK,mCAApB,EAAyD;AACrDE,IAAAA,SAAS,CAACV,WAAW,CAACkB,SAAZ,CAAsBd,WAAtB,CAAD,CAAT;AACH;AACJ;;AACDP,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixRequestBody = void 0;\nconst querystring = require(\"querystring\");\n/**\n * Fix proxied body if bodyParser is involved.\n */\nfunction fixRequestBody(proxyReq, req) {\n    const requestBody = req.body;\n    if (!requestBody || !Object.keys(requestBody).length) {\n        return;\n    }\n    const contentType = proxyReq.getHeader('Content-Type');\n    const writeBody = (bodyData) => {\n        // deepcode ignore ContentLengthInCode: bodyParser fix\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n        proxyReq.write(bodyData);\n    };\n    if (contentType && contentType.includes('application/json')) {\n        writeBody(JSON.stringify(requestBody));\n    }\n    if (contentType === 'application/x-www-form-urlencoded') {\n        writeBody(querystring.stringify(requestBody));\n    }\n}\nexports.fixRequestBody = fixRequestBody;\n"]},"metadata":{},"sourceType":"script"}