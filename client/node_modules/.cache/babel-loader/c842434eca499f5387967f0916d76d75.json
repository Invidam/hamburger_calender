{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\";\nimport { useAxios } from \"./hooks/example/useAxios\"; // import \"react-calendar/dist/Calendar.css\";\n\nimport \"./css/calendar.css\";\nimport { changeFormatYYYYMMDD, UTCtoKTC } from \"./tools/time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [value, onChange] = useState(new Date());\n  const [test, testtest] = useState(0);\n\n  const clickDay = (event, value) => alert(\"Clicked day: \", value);\n\n  const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hamburger App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), changeFormatYYYYMMDD(value, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"caldendar\",\n          onChange: onChange,\n          value: value,\n          locale: \"en\",\n          calendarType: \"US\",\n          onClickDay: (value, event) => {\n            console.log(\"Clic123ked day: \", value, changeFormatYYYYMMDD(value));\n            const timeObj = {\n              hour: parseInt(changeFormatYYYYMMDD(value).substr(5, 2), 10),\n              minute: parseInt(changeFormatYYYYMMDD(value).substr(8, 2), 10)\n            };\n            window.localStorage.setItem(\"wakeTime\", JSON.stringify(timeObj));\n          },\n          tileClassName: ({\n            date,\n            view\n          }) => {\n            if (mark.find(markedDate => markedDate === changeFormatYYYYMMDD(date))) return \"highlight\"; //data: Sun Sep 12 2021 00:00:00 GMT+0900 (한국 표준시)\n            // if (mark.find((x) => x === date.format(\"DD-MM-YYYY\"))) {\n            //   return \"highlight\";\n            // }\n          } //DB에 있는 날짜는 체크표시 해야함.\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n          date: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aqJl85c91TGxkr6aIhVVmHMqyts=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/App.js"],"names":["axios","useState","Calendar","WorkListTemplate","useAxios","changeFormatYYYYMMDD","UTCtoKTC","App","value","onChange","Date","test","testtest","clickDay","event","alert","mark","console","log","timeObj","hour","parseInt","substr","minute","window","localStorage","setItem","JSON","stringify","date","view","find","markedDate"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,eAAP;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AACA,SAASC,QAAT,QAAyB,0BAAzB,C,CACA;;AACA,OAAO,oBAAP;AACA,SAASC,oBAAT,EAA+BC,QAA/B,QAA+C,cAA/C;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,CAAD,CAAjC;;AACA,QAAMY,QAAQ,GAAG,CAACC,KAAD,EAAQN,KAAR,KAAkBO,KAAK,CAAC,eAAD,EAAkBP,KAAlB,CAAxC;;AACA,QAAMQ,IAAI,GAAG,CAAC,YAAD,EAAe,YAAf,EAA6B,YAA7B,CAAb;AACA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGX,oBAAoB,CAACG,KAAD,EAAQ,KAAR,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,8BACE;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,QAAQ,EAAEC,QAFZ;AAGE,UAAA,KAAK,EAAED,KAHT;AAIE,UAAA,MAAM,EAAE,IAJV;AAKE,UAAA,YAAY,EAAE,IALhB;AAME,UAAA,UAAU,EAAE,CAACA,KAAD,EAAQM,KAAR,KAAkB;AAC5BG,YAAAA,OAAO,CAACC,GAAR,CACE,kBADF,EAEEV,KAFF,EAGEH,oBAAoB,CAACG,KAAD,CAHtB;AAKA,kBAAMW,OAAO,GAAG;AACdC,cAAAA,IAAI,EAAEC,QAAQ,CAAChB,oBAAoB,CAACG,KAAD,CAApB,CAA4Bc,MAA5B,CAAmC,CAAnC,EAAsC,CAAtC,CAAD,EAA2C,EAA3C,CADA;AAEdC,cAAAA,MAAM,EAAEF,QAAQ,CAAChB,oBAAoB,CAACG,KAAD,CAApB,CAA4Bc,MAA5B,CAAmC,CAAnC,EAAsC,CAAtC,CAAD,EAA2C,EAA3C;AAFF,aAAhB;AAIAE,YAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAxC;AACD,WAjBH;AAkBE,UAAA,aAAa,EAAE,CAAC;AAAEU,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD,KAAoB;AACjC,gBACEd,IAAI,CAACe,IAAL,CACGC,UAAD,IAAgBA,UAAU,KAAK3B,oBAAoB,CAACwB,IAAD,CADrD,CADF,EAKE,OAAO,WAAP,CAN+B,CAOjC;AACA;AACA;AACA;AACD,WA7BH,CA8BE;;AA9BF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAmCE;AAAA,+BACE,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAErB;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GArDQD,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\";\nimport { useAxios } from \"./hooks/example/useAxios\";\n// import \"react-calendar/dist/Calendar.css\";\nimport \"./css/calendar.css\";\nimport { changeFormatYYYYMMDD, UTCtoKTC } from \"./tools/time\";\nfunction App() {\n  const [value, onChange] = useState(new Date());\n  const [test, testtest] = useState(0);\n  const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  return (\n    <main>\n      <header>\n        <h1>Hamburger App</h1>\n        {changeFormatYYYYMMDD(value, false)}\n      </header>\n      <section>\n        <article>\n          <Calendar\n            className=\"caldendar\"\n            onChange={onChange}\n            value={value}\n            locale={\"en\"}\n            calendarType={\"US\"}\n            onClickDay={(value, event) => {\n              console.log(\n                \"Clic123ked day: \",\n                value,\n                changeFormatYYYYMMDD(value)\n              );\n              const timeObj = {\n                hour: parseInt(changeFormatYYYYMMDD(value).substr(5, 2), 10),\n                minute: parseInt(changeFormatYYYYMMDD(value).substr(8, 2), 10),\n              };\n              window.localStorage.setItem(\"wakeTime\", JSON.stringify(timeObj));\n            }}\n            tileClassName={({ date, view }) => {\n              if (\n                mark.find(\n                  (markedDate) => markedDate === changeFormatYYYYMMDD(date)\n                )\n              )\n                return \"highlight\";\n              //data: Sun Sep 12 2021 00:00:00 GMT+0900 (한국 표준시)\n              // if (mark.find((x) => x === date.format(\"DD-MM-YYYY\"))) {\n              //   return \"highlight\";\n              // }\n            }}\n            //DB에 있는 날짜는 체크표시 해야함.\n          />\n        </article>\n        <article>\n          <WorkListTemplate date={value} />\n        </article>\n      </section>\n      <footer>footer</footer>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}