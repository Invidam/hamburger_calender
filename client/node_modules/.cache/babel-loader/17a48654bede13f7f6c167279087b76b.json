{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import qs from\"qs\";import{useEffect}from\"react\";export var useAttemptGithubLogin=function useAttemptGithubLogin(_ref){var history=_ref.history,location=_ref.location,customLoginHook=_ref.customLoginHook;var login=customLoginHook[3];var getToken=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _qs$parse,code,userInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_qs$parse=qs.parse(location===null||location===void 0?void 0:location.search,{ignoreQueryPrefix:true}),code=_qs$parse.code;_context.prev=1;userInfo={code:code};_context.next=5;return login(userInfo,\"github\");case 5:history.push(\"/\");_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);alert(_context.t0);history.push(\"/login\");case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function getToken(){return _ref2.apply(this,arguments);};}();useEffect(function(){console.log(\"ATT GITHUB LOGIN EFFECT\",location,history);getToken();},[location,history]);};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useAttemptGithubLogin.js"],"names":["qs","useEffect","useAttemptGithubLogin","history","location","customLoginHook","login","getToken","parse","search","ignoreQueryPrefix","code","userInfo","push","alert","console","log"],"mappings":"2SAAA,MAAOA,CAAAA,EAAP,KAAe,IAAf,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,MAI/B,IAHJC,CAAAA,OAGI,MAHJA,OAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,eACI,MADJA,eACI,CACJ,GAAMC,CAAAA,KAAK,CAAGD,eAAe,CAAC,CAAD,CAA7B,CACA,GAAME,CAAAA,QAAQ,2FAAG,yKACEP,EAAE,CAACQ,KAAH,CAASJ,QAAT,SAASA,QAAT,iBAASA,QAAQ,CAAEK,MAAnB,CAA2B,CAC1CC,iBAAiB,CAAE,IADuB,CAA3B,CADF,CACPC,IADO,WACPA,IADO,iBAKPC,QALO,CAKI,CAAED,IAAI,CAAJA,IAAF,CALJ,uBAMPL,CAAAA,KAAK,CAACM,QAAD,CAAW,QAAX,CANE,QAObT,OAAO,CAACU,IAAR,CAAa,GAAb,EAPa,+EASbC,KAAK,aAAL,CACAX,OAAO,CAACU,IAAR,CAAa,QAAb,EAVa,oEAAH,kBAARN,CAAAA,QAAQ,2CAAd,CAaAN,SAAS,CAAC,UAAM,CACdc,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCZ,QAAvC,CAAiDD,OAAjD,EACAI,QAAQ,GACT,CAHQ,CAGN,CAACH,QAAD,CAAWD,OAAX,CAHM,CAAT,CAID,CAvBM","sourcesContent":["import qs from \"qs\";\nimport { useEffect } from \"react\";\nexport const useAttemptGithubLogin = ({\n  history,\n  location,\n  customLoginHook,\n}) => {\n  const login = customLoginHook[3];\n  const getToken = async () => {\n    const { code } = qs.parse(location?.search, {\n      ignoreQueryPrefix: true,\n    });\n    try {\n      const userInfo = { code };\n      await login(userInfo, \"github\");\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      history.push(\"/login\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"ATT GITHUB LOGIN EFFECT\", location, history);\n    getToken();\n  }, [location, history]);\n};\n"]},"metadata":{},"sourceType":"module"}