{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nconst users = [{\n  email: \"kim@test.com\",\n  password: \"123\",\n  name: \"TEST\"\n}, {\n  email: \"lee@test.com\",\n  password: \"456\",\n  name: \"Lee\"\n}, {\n  email: \"park@test.com\",\n  password: \"789\",\n  name: \"Park\"\n}];\nexport const signIn = ({\n  email,\n  password\n}) => {\n  const user = users.find(user => {\n    // console.log(\"CHECK\", user.email,em)\n    return user.email === email && user.password === password;\n  });\n  if (!user) throw new Error(\"User not found\");\n  return user;\n};\nexport const useLogin = () => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n  const authenticated = user != null;\n\n  const onSetUser = username => {\n    setUser(username);\n    history.push(\"/\");\n  };\n\n  const login = async ({\n    email,\n    password\n  }) => {\n    // setUser(signIn({ email, password }));\n    const response = await axios.post(`/auth/login/notSocial`, {\n      email,\n      password\n    });\n  };\n\n  const logout = () => {\n    onSetUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, onSetUser, authenticated, login, logout];\n};\n\n_s(useLogin, \"WODElURF+MGJwTO1IsM6qkE8duQ=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useLogin.js"],"names":["axios","useState","useHistory","users","email","password","name","signIn","user","find","Error","useLogin","setUser","history","authenticated","onSetUser","username","push","login","response","post","logout","localStorage","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,QAAQ,EAAE,KAAnC;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CADY,EAEZ;AAAEF,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,QAAQ,EAAE,KAAnC;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CAFY,EAGZ;AAAEF,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,QAAQ,EAAE,KAApC;AAA2CC,EAAAA,IAAI,EAAE;AAAjD,CAHY,CAAd;AAKA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEH,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC7C,QAAMG,IAAI,GAAGL,KAAK,CAACM,IAAN,CAAYD,IAAD,IAAU;AAChC;AACA,WAAOA,IAAI,CAACJ,KAAL,KAAeA,KAAf,IAAwBI,IAAI,CAACH,QAAL,KAAkBA,QAAjD;AACD,GAHY,CAAb;AAIA,MAAI,CAACG,IAAL,EAAW,MAAM,IAAIE,KAAJ,CAAU,gBAAV,CAAN;AACX,SAAOF,IAAP;AACD,CAPM;AAQP,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMY,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,aAAa,GAAGN,IAAI,IAAI,IAA9B;;AACA,QAAMO,SAAS,GAAIC,QAAD,IAAc;AAC9BJ,IAAAA,OAAO,CAACI,QAAD,CAAP;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,GAHD;;AAIA,QAAMC,KAAK,GAAG,OAAO;AAAEd,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AAC3C;AAEA,UAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAY,uBAAZ,EAAoC;AACzDhB,MAAAA,KADyD;AAEzDC,MAAAA;AAFyD,KAApC,CAAvB;AAID,GAPD;;AAQA,QAAMgB,MAAM,GAAG,MAAM;AACnBN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,IAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACD,GAHD;;AAKA,SAAO,CAACf,IAAD,EAAOO,SAAP,EAAkBD,aAAlB,EAAiCI,KAAjC,EAAwCG,MAAxC,CAAP;AACD,CAtBM;;GAAMV,Q;UAEKT,U","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst users = [\n  { email: \"kim@test.com\", password: \"123\", name: \"TEST\" },\n  { email: \"lee@test.com\", password: \"456\", name: \"Lee\" },\n  { email: \"park@test.com\", password: \"789\", name: \"Park\" },\n];\nexport const signIn = ({ email, password }) => {\n  const user = users.find((user) => {\n    // console.log(\"CHECK\", user.email,em)\n    return user.email === email && user.password === password;\n  });\n  if (!user) throw new Error(\"User not found\");\n  return user;\n};\nexport const useLogin = () => {\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n  const authenticated = user != null;\n  const onSetUser = (username) => {\n    setUser(username);\n    history.push(\"/\");\n  };\n  const login = async ({ email, password }) => {\n    // setUser(signIn({ email, password }));\n\n    const response = await axios.post(`/auth/login/notSocial`, {\n      email,\n      password,\n    });\n  };\n  const logout = () => {\n    onSetUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, onSetUser, authenticated, login, logout];\n};\n"]},"metadata":{},"sourceType":"module"}