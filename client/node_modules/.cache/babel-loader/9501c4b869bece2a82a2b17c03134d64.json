{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nconst users = [{\n  email: \"kim@test.com\",\n  password: \"123\",\n  name: \"Kim\"\n}, {\n  email: \"lee@test.com\",\n  password: \"456\",\n  name: \"Lee\"\n}, {\n  email: \"park@test.com\",\n  password: \"789\",\n  name: \"Park\"\n}];\nexport const signIn = ({\n  emain,\n  password\n}) => {\n  const user = users.find(user => user.email === emain && user.password === password);\n  if (!user) throw new Error(\"User not found\");\n  return user;\n};\nexport const useLogin = () => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const authenticated = user != null;\n\n  const login = ({\n    email,\n    password\n  }) => setUser(signIn({\n    email,\n    password\n  }));\n\n  const logout = () => setUser(null);\n\n  return [user, setUser, authenticated, login, logout];\n};\n\n_s(useLogin, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useLogin.js"],"names":["useState","users","email","password","name","signIn","emain","user","find","Error","useLogin","setUser","authenticated","login","logout"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,QAAQ,EAAE,KAAnC;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CADY,EAEZ;AAAEF,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,QAAQ,EAAE,KAAnC;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CAFY,EAGZ;AAAEF,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,QAAQ,EAAE,KAApC;AAA2CC,EAAAA,IAAI,EAAE;AAAjD,CAHY,CAAd;AAKA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA;AAAT,CAAD,KAAyB;AAC7C,QAAMI,IAAI,GAAGN,KAAK,CAACO,IAAN,CACVD,IAAD,IAAUA,IAAI,CAACL,KAAL,KAAeI,KAAf,IAAwBC,IAAI,CAACJ,QAAL,KAAkBA,QADzC,CAAb;AAGA,MAAI,CAACI,IAAL,EAAW,MAAM,IAAIE,KAAJ,CAAU,gBAAV,CAAN;AACX,SAAOF,IAAP;AACD,CANM;AAOP,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMY,aAAa,GAAGL,IAAI,IAAI,IAA9B;;AAEA,QAAMM,KAAK,GAAG,CAAC;AAAEX,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAyBQ,OAAO,CAACN,MAAM,CAAC;AAAEH,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAP,CAA9C;;AACA,QAAMW,MAAM,GAAG,MAAMH,OAAO,CAAC,IAAD,CAA5B;;AAEA,SAAO,CAACJ,IAAD,EAAOI,OAAP,EAAgBC,aAAhB,EAA+BC,KAA/B,EAAsCC,MAAtC,CAAP;AACD,CARM;;GAAMJ,Q","sourcesContent":["import { useState } from \"react\";\n\nconst users = [\n  { email: \"kim@test.com\", password: \"123\", name: \"Kim\" },\n  { email: \"lee@test.com\", password: \"456\", name: \"Lee\" },\n  { email: \"park@test.com\", password: \"789\", name: \"Park\" },\n];\nexport const signIn = ({ emain, password }) => {\n  const user = users.find(\n    (user) => user.email === emain && user.password === password\n  );\n  if (!user) throw new Error(\"User not found\");\n  return user;\n};\nexport const useLogin = () => {\n  const [user, setUser] = useState(null);\n  const authenticated = user != null;\n\n  const login = ({ email, password }) => setUser(signIn({ email, password }));\n  const logout = () => setUser(null);\n\n  return [user, setUser, authenticated, login, logout];\n};\n"]},"metadata":{},"sourceType":"module"}