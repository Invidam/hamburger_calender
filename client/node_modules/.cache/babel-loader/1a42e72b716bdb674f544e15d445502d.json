{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\n\nconst maketargetSetting = (targetWorkTime, targetWakeHour, targetWakeMinute, targetBedHour, targetBedMinute) => {\n  return {\n    targetWorkTime,\n    targetWakeTime: {\n      hour: targetWakeHour,\n      minute: targetWakeMinute\n    },\n    targetBedTime: {\n      hour: targetBedHour,\n      minute: targetBedMinute\n    }\n  };\n};\n\nexport const useTargetSettingOnPage = ({\n  targetSetting,\n  setTargetTime\n}) => {\n  _s();\n\n  console.log(\"UPDATE SETTING PAGE HOOK USER: \", targetSetting);\n  const [targetWorkTime, setTargetWorkTime] = useState((targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetWorkTime) === -1 ? undefined : targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetWorkTime);\n  const [targetWakeHour, setTargetWakeHour] = useState((targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetWakeTime.hour) === -1 ? undefined : targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetWakeTime.hour);\n  const [targetWakeMinute, setTargetWakeMinute] = useState((targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetWakeTime.minute) === -1 ? undefined : targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetWakeTime.minute);\n  const [targetBedHour, setTargetBedHour] = useState((targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetBedTime.hour) === -1 ? undefined : targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetBedTime.hour);\n  const [targetBedMinute, setTargetBedMinute] = useState((targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetBedTime.minute) === -1 ? undefined : targetSetting === null || targetSetting === void 0 ? void 0 : targetSetting.targetBedTime.minute);\n\n  const onChangeTargetWorkTime = workTime => setTargetWorkTime(parseInt(workTime));\n\n  const onChangeTargetWakeHour = wakeHour => setTargetWakeHour(parseInt(wakeHour));\n\n  const onChangeTargetWakeMinute = wakeMinute => {\n    console.log(\" CHANGE WWKAE TIME MIUUTE\", wakeMinute);\n    setTargetWakeMinute(parseInt(wakeMinute));\n  };\n\n  const onChangeTargetBedHour = bedHour => setTargetBedHour(parseInt(bedHour));\n\n  const onChangeTargetBedMinute = bedMinute => setTargetBedMinute(parseInt(bedMinute));\n\n  const onEditTargetTime = event => {\n    event.preventDefault();\n    setTargetTime(maketargetSetting(targetWorkTime, targetWakeHour, targetBedHour, targetWakeMinute, targetBedMinute));\n  };\n\n  const displayObj = maketargetSetting(targetWorkTime, targetWakeHour, targetWakeMinute, targetBedHour, targetBedMinute);\n  console.log(\"DIS\", displayObj);\n  return {\n    displayObj,\n    onChangeTargetWorkTime,\n    onChangeTargetWakeHour,\n    onChangeTargetWakeMinute,\n    onChangeTargetBedHour,\n    onChangeTargetBedMinute,\n    onEditTargetTime\n  };\n};\n\n_s(useTargetSettingOnPage, \"x2MsqSQa106jGBTF3O/B+4ikOew=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/hooks/user/useTargetSettingOnPage.js"],"names":["useEffect","useState","API","maketargetSetting","targetWorkTime","targetWakeHour","targetWakeMinute","targetBedHour","targetBedMinute","targetWakeTime","hour","minute","targetBedTime","useTargetSettingOnPage","targetSetting","setTargetTime","console","log","setTargetWorkTime","undefined","setTargetWakeHour","setTargetWakeMinute","setTargetBedHour","setTargetBedMinute","onChangeTargetWorkTime","workTime","parseInt","onChangeTargetWakeHour","wakeHour","onChangeTargetWakeMinute","wakeMinute","onChangeTargetBedHour","bedHour","onChangeTargetBedMinute","bedMinute","onEditTargetTime","event","preventDefault","displayObj"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\n\nconst maketargetSetting = (\n  targetWorkTime,\n  targetWakeHour,\n  targetWakeMinute,\n  targetBedHour,\n  targetBedMinute\n) => {\n  return {\n    targetWorkTime,\n    targetWakeTime: { hour: targetWakeHour, minute: targetWakeMinute },\n    targetBedTime: { hour: targetBedHour, minute: targetBedMinute },\n  };\n};\nexport const useTargetSettingOnPage = ({ targetSetting, setTargetTime }) => {\n  console.log(\"UPDATE SETTING PAGE HOOK USER: \", targetSetting);\n  const [targetWorkTime, setTargetWorkTime] = useState(\n    targetSetting?.targetWorkTime === -1\n      ? undefined\n      : targetSetting?.targetWorkTime\n  );\n  const [targetWakeHour, setTargetWakeHour] = useState(\n    targetSetting?.targetWakeTime.hour === -1\n      ? undefined\n      : targetSetting?.targetWakeTime.hour\n  );\n  const [targetWakeMinute, setTargetWakeMinute] = useState(\n    targetSetting?.targetWakeTime.minute === -1\n      ? undefined\n      : targetSetting?.targetWakeTime.minute\n  );\n  const [targetBedHour, setTargetBedHour] = useState(\n    targetSetting?.targetBedTime.hour === -1\n      ? undefined\n      : targetSetting?.targetBedTime.hour\n  );\n  const [targetBedMinute, setTargetBedMinute] = useState(\n    targetSetting?.targetBedTime.minute === -1\n      ? undefined\n      : targetSetting?.targetBedTime.minute\n  );\n  const onChangeTargetWorkTime = (workTime) =>\n    setTargetWorkTime(parseInt(workTime));\n  const onChangeTargetWakeHour = (wakeHour) =>\n    setTargetWakeHour(parseInt(wakeHour));\n  const onChangeTargetWakeMinute = (wakeMinute) => {\n    console.log(\" CHANGE WWKAE TIME MIUUTE\", wakeMinute);\n    setTargetWakeMinute(parseInt(wakeMinute));\n  };\n  const onChangeTargetBedHour = (bedHour) =>\n    setTargetBedHour(parseInt(bedHour));\n  const onChangeTargetBedMinute = (bedMinute) =>\n    setTargetBedMinute(parseInt(bedMinute));\n\n  const onEditTargetTime = (event) => {\n    event.preventDefault();\n    setTargetTime(\n      maketargetSetting(\n        targetWorkTime,\n        targetWakeHour,\n        targetBedHour,\n        targetWakeMinute,\n        targetBedMinute\n      )\n    );\n  };\n  const displayObj = maketargetSetting(\n    targetWorkTime,\n    targetWakeHour,\n    targetWakeMinute,\n    targetBedHour,\n    targetBedMinute\n  );\n  console.log(\"DIS\", displayObj);\n  return {\n    displayObj,\n    onChangeTargetWorkTime,\n    onChangeTargetWakeHour,\n    onChangeTargetWakeMinute,\n    onChangeTargetBedHour,\n    onChangeTargetBedMinute,\n    onEditTargetTime,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}