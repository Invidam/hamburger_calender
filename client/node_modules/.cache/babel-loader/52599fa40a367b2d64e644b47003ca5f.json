{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { SORT_TYPE_CNT } from \"../../components/todoList/TodoList\"; // import { SORT_TYPE_CNT } from \"../../components/todoList/TodoListTemplate\";\n\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\n\nconst makeSortTypeStr = idx => {\n  let ret = {};\n  ret[\"type\"] = Math.floor(idx / SORT_TYPE_CNT) === 0 ? \"date\" : \"priority\";\n  ret[\"direction\"] = idx % 2 === 0 ? \"up\" : \"down\";\n  return ret;\n};\n\nexport const useTodoList = (user, initSortTypeIdx, sortTypeCnt, sortTypes) => {\n  _s();\n\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(true);\n  const [sortTypeIdx, setSortTypeIdx] = useState(initSortTypeIdx);\n\n  const getNextSortType = idx => (idx + 1) % sortTypes === 0 ? idx - sortTypes + 1 : idx + 1;\n\n  const onClickByTabIdx = tabIdx => {\n    // 같은 소속이었다면\n    setLoad(true);\n    if (Math.floor(sortTypeIdx / sortTypes) === tabIdx) setSortTypeIdx(getNextSortType(sortTypeIdx));else setSortTypeIdx(tabIdx * sortTypeCnt + 1);\n  };\n\n  const getTodoList = async (user, sortTypeIdx) => {\n    try {\n      if (user) {\n        console.log(\"TODO SORT\", sortTypeIdx);\n        const data = await APIv2.todoList(user).get(makeSortTypeStr(sortTypeIdx));\n        setLoad(false);\n        let resTodoList = data === null || data === void 0 ? void 0 : data.data;\n        resTodoList = typeof resTodoList === \"string\" ? JSON.parse(resTodoList) : resTodoList;\n        resTodoList = resTodoList.map(([idx, value]) => {\n          return value;\n        });\n        if (!data) throw new Error(\"TodoList can't found\");\n        console.log(\"INDI, RES TODO LIST: \", resTodoList);\n        setTodoList();\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"TODO USE EFFECT START GET TODO START\");\n    getTodoList(user, sortTypeIdx);\n  }, [user, sortTypeIdx]);\n  useEffect(() => console.log(\"TODO STAT CHANGE\", isTodoListLoading), [isTodoListLoading]);\n\n  const setTodo = (todoObj, idx) => {\n    // const id = todoObj.id;\n    //const _todoList = { ...todoList };\n    let _todoList = todoList.concat();\n\n    return {\n      create: async () => {\n        //_todoList[id] = todoObj;\n        // _todoList.push([id, todoObj]);\n        _todoList.push(todoObj);\n\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).create(todoObj);else LocalStroage.todoList().set(_todoList);\n      },\n      edit: async () => {\n        // _todoList[idx] = [id, todoObj];\n        _todoList[idx] = todoObj;\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).edit(todoObj);else LocalStroage.todoList().set(_todoList);\n      },\n      delete: async () => {\n        // if (!delete _todoList[id]) throw new Error(\"Cannot Delete TodoItem\");\n        _todoList = _todoList.filter((el, elemIdx) => elemIdx !== idx);\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).delete(todoObj);else LocalStroage.todoList().set(_todoList);\n      }\n    };\n  };\n\n  return [todoList, setTodo, isTodoListLoading, sortTypeIdx, onClickByTabIdx];\n};\n\n_s(useTodoList, \"JCv2vi3uB9jbIllA3ZR8W87xhw4=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodoList.js"],"names":["useEffect","useState","SORT_TYPE_CNT","APIv2","LocalStroage","makeSortTypeStr","idx","ret","Math","floor","useTodoList","user","initSortTypeIdx","sortTypeCnt","sortTypes","todoList","setTodoList","isTodoListLoading","setLoad","sortTypeIdx","setSortTypeIdx","getNextSortType","onClickByTabIdx","tabIdx","getTodoList","console","log","data","get","resTodoList","JSON","parse","map","value","Error","error","alert","setTodo","todoObj","_todoList","concat","create","push","todo","set","edit","delete","filter","el","elemIdx"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { SORT_TYPE_CNT } from \"../../components/todoList/TodoList\";\n// import { SORT_TYPE_CNT } from \"../../components/todoList/TodoListTemplate\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\n\nconst makeSortTypeStr = (idx) => {\n  let ret = {};\n  ret[\"type\"] = Math.floor(idx / SORT_TYPE_CNT) === 0 ? \"date\" : \"priority\";\n  ret[\"direction\"] = idx % 2 === 0 ? \"up\" : \"down\";\n  return ret;\n};\nexport const useTodoList = (user, initSortTypeIdx, sortTypeCnt, sortTypes) => {\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(true);\n  const [sortTypeIdx, setSortTypeIdx] = useState(initSortTypeIdx);\n  const getNextSortType = (idx) =>\n    (idx + 1) % sortTypes === 0 ? idx - sortTypes + 1 : idx + 1;\n  const onClickByTabIdx = (tabIdx) => {\n    // 같은 소속이었다면\n    setLoad(true);\n    if (Math.floor(sortTypeIdx / sortTypes) === tabIdx)\n      setSortTypeIdx(getNextSortType(sortTypeIdx));\n    else setSortTypeIdx(tabIdx * sortTypeCnt + 1);\n  };\n  const getTodoList = async (user, sortTypeIdx) => {\n    try {\n      if (user) {\n        console.log(\"TODO SORT\", sortTypeIdx);\n        const data = await APIv2.todoList(user).get(\n          makeSortTypeStr(sortTypeIdx)\n        );\n        setLoad(false);\n        let resTodoList = data?.data;\n\n        resTodoList =\n          typeof resTodoList === \"string\"\n            ? JSON.parse(resTodoList)\n            : resTodoList;\n        resTodoList = resTodoList.map(([idx, value]) => {\n          return value;\n        });\n        if (!data) throw new Error(\"TodoList can't found\");\n        console.log(\"INDI, RES TODO LIST: \", resTodoList);\n        setTodoList();\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"TODO USE EFFECT START GET TODO START\");\n    getTodoList(user, sortTypeIdx);\n  }, [user, sortTypeIdx]);\n  useEffect(\n    () => console.log(\"TODO STAT CHANGE\", isTodoListLoading),\n    [isTodoListLoading]\n  );\n  const setTodo = (todoObj, idx) => {\n    // const id = todoObj.id;\n    //const _todoList = { ...todoList };\n    let _todoList = todoList.concat();\n    return {\n      create: async () => {\n        //_todoList[id] = todoObj;\n        // _todoList.push([id, todoObj]);\n        _todoList.push(todoObj);\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).create(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n      edit: async () => {\n        // _todoList[idx] = [id, todoObj];\n\n        _todoList[idx] = todoObj;\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).edit(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n      delete: async () => {\n        // if (!delete _todoList[id]) throw new Error(\"Cannot Delete TodoItem\");\n        _todoList = _todoList.filter((el, elemIdx) => elemIdx !== idx);\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user).delete(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n    };\n  };\n  return [todoList, setTodo, isTodoListLoading, sortTypeIdx, onClickByTabIdx];\n};\n"]},"metadata":{},"sourceType":"module"}