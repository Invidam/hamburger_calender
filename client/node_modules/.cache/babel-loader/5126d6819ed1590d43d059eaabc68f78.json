{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/work/AddWorkWindow.js\",\n    _s = $RefreshSig$();\n\nimport \"../../../../css/workList/window.css\";\nimport { useTabs } from \"../../../../hooks/example/useTabs\";\nimport { usePushWork } from \"../../../../hooks/workList/work/usePushWork\";\nimport { CustomizeColor } from \"./tabs/CustomizeColor\";\nimport { IngredientList } from \"./tabs/IngredientList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddWorkWindow = props => {\n  _s();\n\n  // const {  user, date, workList, setWorkList, callback } = props;\n  const {\n    onChangeWorkColor,\n    onChangeWorkName,\n    onChangeWorkTime,\n    onSubmitWork\n  } = usePushWork(props);\n\n  const Recommended = /*#__PURE__*/_jsxDEV(IngredientList, {\n    onChangeWorkColor: onChangeWorkColor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 23\n  }, this);\n\n  const Favorite = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Favorite\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 20\n  }, this);\n\n  const Customize = /*#__PURE__*/_jsxDEV(CustomizeColor, {\n    onChangeWorkColor: onChangeWorkColor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const [currentItem, currentIdx, changeItem] = useTabs(0, Tabs); // if (workList.length)\n  //   window.localStorage.setItem(\"workList\", JSON.stringify(workList));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalWindow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWindow__column\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWinodw__title\",\n        children: \"Input Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWindow__column modalWindow__inputSpace\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"modalWindow__desc modalWindow__desc-name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"modalWindow__input modalWindow__input-name\",\n        type: \"text\",\n        name: \"workName\",\n        autoComplete: \"off\",\n        onChange: ({\n          target: {\n            value\n          }\n        }) => onChangeWorkName(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"modalWindow__desc modalWindow__desc-time\",\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"modalWindow__input modalWindow__input-time\",\n        type: \"number\",\n        step: \"1\",\n        min: \"0\",\n        max: \"24\",\n        name: \"workTime\",\n        placeholder: \"0\",\n        onChange: ({\n          target: {\n            value\n          }\n        }) => onChangeWorkTime(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \"h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWindow__column\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"modalWindow__title\",\n        children: \"Pick Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWindow_column\",\n      children: Tabs.map((section, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentIdx === idx ? \"modalWindow__tab-focus modalWindow__tab\" : \"modalWindow__tab\",\n          onClick: event => {\n            event.preventDefault();\n            changeItem(idx);\n          },\n          children: tabNames[idx]\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWindow__tab-content\",\n      children: currentItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modalWindow__submit modalWindow__btn\",\n      onClick: onSubmitWork,\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n/*\nhook을 사용하여 문제 해결하기.\nuseSubmit => set Name set Time set Color을 리턴하여\n각 탭에서 set Color을 사용하기. (이래야 저장한 색이 유지될듯. + 제출 시에 )\n왜냐면 네이티브가 아니기 때문이다.\n계속 submit되는 문제는 탭할 때 onTab에서 event.preventDefault()을 이용하여 해결하였음.\n\n*/\n\n_s(AddWorkWindow, \"fLzJHoEritKuLLnlw92xhdzuIIE=\", false, function () {\n  return [usePushWork, useTabs];\n});\n\n_c = AddWorkWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkWindow\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/work/AddWorkWindow.js"],"names":["useTabs","usePushWork","CustomizeColor","IngredientList","AddWorkWindow","props","onChangeWorkColor","onChangeWorkName","onChangeWorkTime","onSubmitWork","Recommended","Favorite","Customize","tabNames","Tabs","currentItem","currentIdx","changeItem","target","value","map","section","idx","event","preventDefault"],"mappings":"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","sourcesContent":["import \"../../../../css/workList/window.css\";\nimport { useTabs } from \"../../../../hooks/example/useTabs\";\nimport { usePushWork } from \"../../../../hooks/workList/work/usePushWork\";\nimport { CustomizeColor } from \"./tabs/CustomizeColor\";\nimport { IngredientList } from \"./tabs/IngredientList\";\nexport const AddWorkWindow = (props) => {\n  // const {  user, date, workList, setWorkList, callback } = props;\n  const {\n    onChangeWorkColor,\n    onChangeWorkName,\n    onChangeWorkTime,\n    onSubmitWork,\n  } = usePushWork(props);\n  const Recommended = <IngredientList onChangeWorkColor={onChangeWorkColor} />;\n  const Favorite = <h1>Favorite</h1>;\n  const Customize = <CustomizeColor onChangeWorkColor={onChangeWorkColor} />;\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const [currentItem, currentIdx, changeItem] = useTabs(0, Tabs);\n  // if (workList.length)\n  //   window.localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return (\n    <div className=\"modalWindow\">\n      <div className=\"modalWindow__column\">\n        <span className=\"addWinodw__title\">Input Work</span>\n      </div>\n      <div className=\"modalWindow__column modalWindow__inputSpace\">\n        <span className=\"modalWindow__desc modalWindow__desc-name\">Name:</span>\n        <input\n          className=\"modalWindow__input modalWindow__input-name\"\n          type=\"text\"\n          name=\"workName\"\n          autoComplete=\"off\"\n          onChange={({ target: { value } }) => onChangeWorkName(value)}\n        ></input>\n        <span className=\"modalWindow__desc modalWindow__desc-time\">Time:</span>\n        <input\n          className=\"modalWindow__input modalWindow__input-time\"\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          max=\"24\"\n          name=\"workTime\"\n          placeholder=\"0\"\n          onChange={({ target: { value } }) => onChangeWorkTime(value)}\n        ></input>\n        h\n      </div>\n      <div className=\"modalWindow__column\">\n        <span className=\"modalWindow__title\">Pick Color</span>{\" \"}\n      </div>\n      <div className=\"modalWindow_column\">\n        {Tabs.map((section, idx) => {\n          return (\n            <button\n              key={idx}\n              className={\n                currentIdx === idx\n                  ? \"modalWindow__tab-focus modalWindow__tab\"\n                  : \"modalWindow__tab\"\n              }\n              onClick={(event) => {\n                event.preventDefault();\n                changeItem(idx);\n              }}\n            >\n              {tabNames[idx]}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"modalWindow__tab-content\">{currentItem}</div>\n      <button\n        className=\"modalWindow__submit modalWindow__btn\"\n        onClick={onSubmitWork}\n      >\n        SUBMIT\n      </button>\n    </div>\n  );\n};\n\n/*\nhook을 사용하여 문제 해결하기.\nuseSubmit => set Name set Time set Color을 리턴하여\n각 탭에서 set Color을 사용하기. (이래야 저장한 색이 유지될듯. + 제출 시에 )\n왜냐면 네이티브가 아니기 때문이다.\n계속 submit되는 문제는 탭할 때 onTab에서 event.preventDefault()을 이용하여 해결하였음.\n\n*/\n"]},"metadata":{},"sourceType":"module"}