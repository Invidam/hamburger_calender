{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/grade/GradeStarList.js\";\nimport * as iconSolid from \"@fortawesome/free-solid-svg-icons\";\nimport * as iconRegular from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst starElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__star\",\n  icon: iconSolid.faStar,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\nconst starHalfAltElement = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"work-icon__star-half__box\",\n  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"work-icon__star-half__full\",\n    icon: iconSolid.faStar,\n    size: \"1x\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    className: \"work-icon__star-half__half\",\n    icon: iconSolid.faStarHalf,\n    size: \"1x\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\nconst starHalfElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__star-half\",\n  icon: iconSolid.faStarHalf,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\nconst starEmptyElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__star-empty\",\n  icon: iconSolid.faStar,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this);\n\nexport const makeStar = (gradeSum, isAlt = true) => new Array(5).fill().map((elem, idx) => {\n  return 2 * (idx + 1) <= gradeSum ? starElement : 2 * (idx + 1) - gradeSum === 1 ? isAlt ? starHalfAltElement : starHalfElement : isAlt ? starEmptyElement : \"\";\n});\nexport const GradeStarList = ({\n  gradeSum\n}) => {\n  console.log(\"SYM : \", gradeSum);\n  const starArr = makeStar(gradeSum);\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"workList-star__list\",\n    children: starArr.map((elem, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"workList-star__item\",\n        children: elem\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = GradeStarList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradeStarList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/grade/GradeStarList.js"],"names":["iconSolid","iconRegular","FontAwesomeIcon","starElement","faStar","starHalfAltElement","faStarHalf","starHalfElement","starEmptyElement","makeStar","gradeSum","isAlt","Array","fill","map","elem","idx","GradeStarList","console","log","starArr"],"mappings":";AAAA,OAAO,KAAKA,SAAZ,MAA2B,mCAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,qCAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AACA,MAAMC,WAAW,gBACf,QAAC,eAAD;AACE,EAAA,SAAS,EAAC,iBADZ;AAEE,EAAA,IAAI,EAAEH,SAAS,CAACI,MAFlB;AAGE,EAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,QADF;;AAOA,MAAMC,kBAAkB,gBACtB;AAAK,EAAA,SAAS,EAAC,2BAAf;AAAA,0BACE,QAAC,eAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,IAAI,EAAEL,SAAS,CAACI,MAFlB;AAGE,IAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,UADF,eAME,QAAC,eAAD;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,IAAI,EAAEJ,SAAS,CAACM,UAFlB;AAGE,IAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,UANF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAcA,MAAMC,eAAe,gBACnB,QAAC,eAAD;AACE,EAAA,SAAS,EAAC,sBADZ;AAEE,EAAA,IAAI,EAAEP,SAAS,CAACM,UAFlB;AAGE,EAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,QADF;;AAOA,MAAME,gBAAgB,gBACpB,QAAC,eAAD;AACE,EAAA,SAAS,EAAC,uBADZ;AAEE,EAAA,IAAI,EAAER,SAAS,CAACI,MAFlB;AAGE,EAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,QADF;;AAQA,OAAO,MAAMK,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAK,GAAG,IAAnB,KACtB,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,GAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACrC,SAAO,KAAKA,GAAG,GAAG,CAAX,KAAiBN,QAAjB,GACHP,WADG,GAEH,KAAKa,GAAG,GAAG,CAAX,IAAgBN,QAAhB,KAA6B,CAA7B,GACAC,KAAK,GACHN,kBADG,GAEHE,eAHF,GAIAI,KAAK,GACLH,gBADK,GAEL,EARJ;AASD,CAVD,CADK;AAaP,OAAO,MAAMS,aAAa,GAAG,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAkB;AAC7CQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,QAAtB;AACA,QAAMU,OAAO,GAAGX,QAAQ,CAACC,QAAD,CAAxB;AACA,sBACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA,cACGU,OAAO,CAACN,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC1B,0BACE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,kBACGD;AADH,SAAyCC,GAAzC;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdM;KAAMC,a","sourcesContent":["import * as iconSolid from \"@fortawesome/free-solid-svg-icons\";\nimport * as iconRegular from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst starElement = (\n  <FontAwesomeIcon\n    className=\"work-icon__star\"\n    icon={iconSolid.faStar}\n    size=\"1x\"\n  />\n);\nconst starHalfAltElement = (\n  <div className=\"work-icon__star-half__box\">\n    <FontAwesomeIcon\n      className=\"work-icon__star-half__full\"\n      icon={iconSolid.faStar}\n      size=\"1x\"\n    />\n    <FontAwesomeIcon\n      className=\"work-icon__star-half__half\"\n      icon={iconSolid.faStarHalf}\n      size=\"1x\"\n    />\n  </div>\n);\nconst starHalfElement = (\n  <FontAwesomeIcon\n    className=\"work-icon__star-half\"\n    icon={iconSolid.faStarHalf}\n    size=\"1x\"\n  />\n);\nconst starEmptyElement = (\n  <FontAwesomeIcon\n    className=\"work-icon__star-empty\"\n    icon={iconSolid.faStar}\n    size=\"1x\"\n  />\n);\n\nexport const makeStar = (gradeSum, isAlt = true) =>\n  new Array(5).fill().map((elem, idx) => {\n    return 2 * (idx + 1) <= gradeSum\n      ? starElement\n      : 2 * (idx + 1) - gradeSum === 1\n      ? isAlt\n        ? starHalfAltElement\n        : starHalfElement\n      : isAlt\n      ? starEmptyElement\n      : \"\";\n  });\n\nexport const GradeStarList = ({ gradeSum }) => {\n  console.log(\"SYM : \", gradeSum);\n  const starArr = makeStar(gradeSum);\n  return (\n    <ol className=\"workList-star__list\">\n      {starArr.map((elem, idx) => {\n        return (\n          <li className=\"workList-star__item\" key={idx}>\n            {elem}\n          </li>\n        );\n      })}\n    </ol>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}