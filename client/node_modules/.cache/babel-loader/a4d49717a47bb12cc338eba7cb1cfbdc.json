{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/WorkListGrade.js\",\n    _s = $RefreshSig$();\n\nimport StarRatings from \"react-star-ratings\";\nimport { useWorkListGrade } from \"../../../hooks/workList/useWorkListGrade\";\nimport * as iconSolid from \"@fortawesome/free-solid-svg-icons\";\nimport * as iconRegular from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst starElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__star\",\n  icon: iconSolid.faStar,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\nconst starHalfElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__star-half\",\n  icon: iconSolid.faStarHalf,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\nconst starEmptyElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__star\",\n  icon: faStar,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n\nexport const WorkListGrade = ({\n  user,\n  date\n}) => {\n  _s();\n\n  const [grade, difference, target, value, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n\n  const getGradeSum = () => grade ? Object.values(grade).reduce((prev, value) => prev += value, 0) : 0;\n\n  const makeStar = gradeSum => new Array(5).fill().map((elem, idx) => {\n    return 2 * (idx + 1) < gradeSum ? {\n      starElement\n    } : 2 * (idx + 1) - gradeSum === 1 ? {\n      starHalfElement\n    } : {\n      starEmptyElement\n    };\n  });\n\n  const gradeElement = new Array(5).fill().map((elem, idx) => {});\n\n  const tooltipElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grade-tooltip-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-tooltip-box\",\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n\n  const getGradeBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: updateInfo,\n    children: \" Get Grade! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n\n  const displayGrade = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tooltip\",\n    children: [\" \", starElement, starHalfElement, gradeElement, \" \", tooltipElement, \" | update\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  return grade ? displayGrade : getGradeBtn;\n};\n\n_s(WorkListGrade, \"OdxERPs4OLF945g2+zvNVozDjcs=\", false, function () {\n  return [useWorkListGrade];\n});\n\n_c = WorkListGrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListGrade\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/WorkListGrade.js"],"names":["StarRatings","useWorkListGrade","iconSolid","iconRegular","FontAwesomeIcon","starElement","faStar","starHalfElement","faStarHalf","starEmptyElement","WorkListGrade","user","date","grade","difference","target","value","isGradeLoading","updateInfo","getGradeSum","Object","values","reduce","prev","makeStar","gradeSum","Array","fill","map","elem","idx","gradeElement","tooltipElement","getGradeBtn","displayGrade"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,0CAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,mCAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,qCAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AACA,MAAMC,WAAW,gBACf,QAAC,eAAD;AACE,EAAA,SAAS,EAAC,iBADZ;AAEE,EAAA,IAAI,EAAEH,SAAS,CAACI,MAFlB;AAGE,EAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,QADF;;AAOA,MAAMC,eAAe,gBACnB,QAAC,eAAD;AACE,EAAA,SAAS,EAAC,sBADZ;AAEE,EAAA,IAAI,EAAEL,SAAS,CAACM,UAFlB;AAGE,EAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,QADF;;AAOA,MAAMC,gBAAgB,gBACpB,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,iBAA3B;AAA6C,EAAA,IAAI,EAAEH,MAAnD;AAA2D,EAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,QADF;;AAGA,OAAO,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,UAAR,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,cAAnC,EAAmDC,UAAnD,IACJjB,gBAAgB,CAACU,IAAD,EAAOC,IAAP,CADlB;;AAEA,QAAMO,WAAW,GAAG,MAClBN,KAAK,GACDO,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqBS,MAArB,CAA4B,CAACC,IAAD,EAAOP,KAAP,KAAkBO,IAAI,IAAIP,KAAtD,EAA8D,CAA9D,CADC,GAED,CAHN;;AAIA,QAAMQ,QAAQ,GAAIC,QAAD,IACf,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,GAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACrC,WAAO,KAAKA,GAAG,GAAG,CAAX,IAAgBL,QAAhB,GACH;AAAEpB,MAAAA;AAAF,KADG,GAEH,KAAKyB,GAAG,GAAG,CAAX,IAAgBL,QAAhB,KAA6B,CAA7B,GACA;AAAElB,MAAAA;AAAF,KADA,GAEA;AAAEE,MAAAA;AAAF,KAJJ;AAKD,GAND,CADF;;AAQA,QAAMsB,YAAY,GAAG,IAAIL,KAAJ,CAAU,CAAV,EAAaC,IAAb,GAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,GAAP,KAAe,CAAE,CAAzC,CAArB;;AACA,QAAME,cAAc,gBAClB;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMC,WAAW,gBAAG;AAAQ,IAAA,OAAO,EAAEf,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB;;AACA,QAAMgB,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACG,GADH,EAEG7B,WAFH,EAGGE,eAHH,EAKGwB,YALH,OAKkBC,cALlB,eAK2C,GAL3C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,SAAOnB,KAAK,GAAGqB,YAAH,GAAkBD,WAA9B;AACD,CAjCM;;GAAMvB,a;UAETT,gB;;;KAFSS,a","sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport { useWorkListGrade } from \"../../../hooks/workList/useWorkListGrade\";\nimport * as iconSolid from \"@fortawesome/free-solid-svg-icons\";\nimport * as iconRegular from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst starElement = (\n  <FontAwesomeIcon\n    className=\"work-icon__star\"\n    icon={iconSolid.faStar}\n    size=\"1x\"\n  />\n);\nconst starHalfElement = (\n  <FontAwesomeIcon\n    className=\"work-icon__star-half\"\n    icon={iconSolid.faStarHalf}\n    size=\"1x\"\n  />\n);\nconst starEmptyElement = (\n  <FontAwesomeIcon className=\"work-icon__star\" icon={faStar} size=\"1x\" />\n);\nexport const WorkListGrade = ({ user, date }) => {\n  const [grade, difference, target, value, isGradeLoading, updateInfo] =\n    useWorkListGrade(user, date);\n  const getGradeSum = () =>\n    grade\n      ? Object.values(grade).reduce((prev, value) => (prev += value), 0)\n      : 0;\n  const makeStar = (gradeSum) =>\n    new Array(5).fill().map((elem, idx) => {\n      return 2 * (idx + 1) < gradeSum\n        ? { starElement }\n        : 2 * (idx + 1) - gradeSum === 1\n        ? { starHalfElement }\n        : { starEmptyElement };\n    });\n  const gradeElement = new Array(5).fill().map((elem, idx) => {});\n  const tooltipElement = (\n    <div className=\"grade-tooltip-content\">\n      <div className=\"grade-tooltip-box\">test</div>\n    </div>\n  );\n\n  const getGradeBtn = <button onClick={updateInfo}> Get Grade! </button>;\n  const displayGrade = (\n    <div className=\"tooltip\">\n      {\" \"}\n      {starElement}\n      {starHalfElement}\n      {/* <FontAwesomeIcon icon={faCoffee} /> */}\n      {gradeElement} {tooltipElement} | update{\" \"}\n    </div>\n  );\n  return grade ? displayGrade : getGradeBtn;\n};\n"]},"metadata":{},"sourceType":"module"}