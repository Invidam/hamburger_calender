{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nexport const useRecordTime = key => {\n  _s();\n\n  const initVal = window.localStorage.getItem(key) ? JSON.parse(window.localStorage.getItem(key)) : null;\n  console.log(\"INIT VAL: \", initVal);\n  const [recordTime, setRecordTime] = useState(initVal);\n  const res = axios({\n    headers: {\n      Authorization: \"\",\n      \"Content-Type\": \"application/json\"\n    },\n    url: \"/api/get-time\",\n    method: \"post\",\n    data: {\n      key\n    }\n  }).then(data => {\n    var _data$data, _data$data2;\n\n    console.log(\"HOOK DATA: \", key, data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.timeObj);\n    if (!recordTime) setRecordTime(data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.timeObj);\n  });\n\n  const onClick = event => {\n    event.preventDefault();\n    const [hour, minute] = new Date().toTimeString().split(\":\").slice(0, 2).map(numChar => parseInt(numChar));\n    console.log(\"on CLick, \", hour, minute);\n    const timeObj = {\n      hour,\n      minute\n    };\n    axios.post(\"api/record-time\", {\n      user: \"TEST\",\n      key,\n      value: timeObj\n    });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n\n  return [recordTime, onClick];\n};\n\n_s(useRecordTime, \"4aDt5VS2nQ1vijZ0/WcWOYBhy/A=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/useRecoreTime.js"],"names":["axios","useState","useRecordTime","key","initVal","window","localStorage","getItem","JSON","parse","console","log","recordTime","setRecordTime","res","headers","Authorization","url","method","data","then","timeObj","onClick","event","preventDefault","hour","minute","Date","toTimeString","split","slice","map","numChar","parseInt","post","user","value","setItem","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,aAAa,GAAIC,GAAD,IAAS;AAAA;;AACpC,QAAMC,OAAO,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,GAA5B,IACZK,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,GAA5B,CAAX,CADY,GAEZ,IAFJ;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,OAA1B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACG,OAAD,CAA5C;AACA,QAAMU,GAAG,GAAGd,KAAK,CAAC;AAChBe,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,EADR;AAEP,sBAAgB;AAFT,KADO;AAKhBC,IAAAA,GAAG,EAAE,eALW;AAMhBC,IAAAA,MAAM,EAAE,MANQ;AAOhBC,IAAAA,IAAI,EAAE;AAAEhB,MAAAA;AAAF;AAPU,GAAD,CAAL,CAQTiB,IARS,CAQHD,IAAD,IAAU;AAAA;;AAChBT,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,GAA3B,EAAgCgB,IAAhC,aAAgCA,IAAhC,qCAAgCA,IAAI,CAAEA,IAAtC,+CAAgC,WAAYE,OAA5C;AACA,QAAI,CAACT,UAAL,EAAiBC,aAAa,CAACM,IAAD,aAACA,IAAD,sCAACA,IAAI,CAAEA,IAAP,gDAAC,YAAYE,OAAb,CAAb;AAClB,GAXW,CAAZ;;AAYA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM,CAACC,IAAD,EAAOC,MAAP,IAAiB,IAAIC,IAAJ,GACpBC,YADoB,GAEpBC,KAFoB,CAEd,GAFc,EAGpBC,KAHoB,CAGd,CAHc,EAGX,CAHW,EAIpBC,GAJoB,CAIfC,OAAD,IAAaC,QAAQ,CAACD,OAAD,CAJL,CAAvB;AAKAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,IAA1B,EAAgCC,MAAhC;AACA,UAAML,OAAO,GAAG;AAAEI,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB;AACA1B,IAAAA,KAAK,CAACkC,IAAN,CAAW,iBAAX,EAA8B;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBhC,MAAAA,GAAhB;AAAqBiC,MAAAA,KAAK,EAAEf;AAA5B,KAA9B;AACAhB,IAAAA,MAAM,CAACC,YAAP,CAAoB+B,OAApB,CAA4BlC,GAA5B,EAAiCK,IAAI,CAAC8B,SAAL,CAAejB,OAAf,CAAjC;AACAR,IAAAA,aAAa,CAACQ,OAAD,CAAb;AACD,GAZD;;AAaA,SAAO,CAACT,UAAD,EAAaU,OAAb,CAAP;AACD,CAhCM;;GAAMpB,a","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nexport const useRecordTime = (key) => {\n  const initVal = window.localStorage.getItem(key)\n    ? JSON.parse(window.localStorage.getItem(key))\n    : null;\n  console.log(\"INIT VAL: \", initVal);\n  const [recordTime, setRecordTime] = useState(initVal);\n  const res = axios({\n    headers: {\n      Authorization: \"\",\n      \"Content-Type\": \"application/json\",\n    },\n    url: \"/api/get-time\",\n    method: \"post\",\n    data: { key },\n  }).then((data) => {\n    console.log(\"HOOK DATA: \", key, data?.data?.timeObj);\n    if (!recordTime) setRecordTime(data?.data?.timeObj);\n  });\n  const onClick = (event) => {\n    event.preventDefault();\n    const [hour, minute] = new Date()\n      .toTimeString()\n      .split(\":\")\n      .slice(0, 2)\n      .map((numChar) => parseInt(numChar));\n    console.log(\"on CLick, \", hour, minute);\n    const timeObj = { hour, minute };\n    axios.post(\"api/record-time\", { user: \"TEST\", key, value: timeObj });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n  return [recordTime, onClick];\n};\n"]},"metadata":{},"sourceType":"module"}