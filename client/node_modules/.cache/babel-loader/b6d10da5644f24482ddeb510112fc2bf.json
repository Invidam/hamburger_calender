{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/elements/TodoExpired.js\";\nimport StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\"; // import es from \"da\"\n\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\nimport { faCheck, faEdit, faTrashAlt, faCalendarTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon__check\",\n  icon: faCheck,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n\nconst expiredElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon todo-icon__expired\",\n  icon: faCalendarTimes,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n\nconst editElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon todo-icon__save\",\n  icon: faEdit,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\nconst trashElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon todo-icon__plus\",\n  icon: faTrashAlt,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n\nexport const TodoExpired = ({\n  todoHook,\n  id\n}) => {\n  const [isEditMode, isCheck, text, date, priority, onClickCheck,,,,,, onDeleteTodo, onClickEditBtn] = todoHook;\n  let isHighLight = false;\n  setInterval(() => isHighLight = !isHighLight, 1000); // setInterval(() => console.log(\"TEST\"), 1000);\n\n  const displayBtn = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo__btn-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo__btn-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo__btn todo__btn-expire todo__btn-expired\",\n        children: expiredElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `todo__btn todo__btn-delete todo__btn-expired ${isHighLight ? \"todo__btn-expired__highlight\" : \"\"}`,\n        onClick: onDeleteTodo,\n        children: trashElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  const displayElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-expired\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: `todo__checkbox_${id}`,\n      className: \"todo__checkbox todo-display__checkbox todo__content todo-display__content todo-expired__content\",\n      type: \"checkbox\",\n      name: \"todoCheck\",\n      value: `${isCheck}` // onChange={({ target: { value } }) => onClickCheck(value)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo__label todo-display__label\",\n      htmlFor: `todo__checkbox_${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo__label-icon\",\n        children: isCheck ? checkElement : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `todo__text todo-display__text todo__content todo-display__content todo-expired__content ${isCheck ? \"todo__text-checked\" : \"\"}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePick, {\n      date: date,\n      isEditMode: isEditMode,\n      isExpired: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `todo__star-rating todo-display__star}`,\n      children: [/*#__PURE__*/_jsxDEV(StarRatings, {\n        rating: priority,\n        starRatedColor: \"rgb(62,0,0)\",\n        starHoverColor: \"rgb(62,0,0)\",\n        starEmptyColor: \"rgba(133, 133, 133, 1)\",\n        starSelectingHoverColor: \"red\",\n        numberOfStars: 5,\n        name: \"rating\",\n        starDimension: \"24px\",\n        starSpacing: \"2px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), displayBtn]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n\n  return displayElement;\n};\n_c = TodoExpired;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoExpired\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/elements/TodoExpired.js"],"names":["StarRatings","DatePicker","registerLocale","setDefaultLocale","useTodo","getToday","DatePick","useState","faCheck","faEdit","faTrashAlt","faCalendarTimes","FontAwesomeIcon","checkElement","expiredElement","editElement","trashElement","TodoExpired","todoHook","id","isEditMode","isCheck","text","date","priority","onClickCheck","onDeleteTodo","onClickEditBtn","isHighLight","setInterval","displayBtn","displayElement"],"mappings":"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","sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\n\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\n// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\n\nimport {\n  faCheck,\n  faEdit,\n  faTrashAlt,\n  faCalendarTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst checkElement = (\n  <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n);\nconst expiredElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon todo-icon__expired\"\n    icon={faCalendarTimes}\n    size=\"1x\"\n  />\n);\nconst editElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon todo-icon__save\"\n    icon={faEdit}\n    size=\"1x\"\n  />\n);\nconst trashElement = (\n  <FontAwesomeIcon\n    className=\"todo-icon todo-icon__plus\"\n    icon={faTrashAlt}\n    size=\"1x\"\n  />\n);\nexport const TodoExpired = ({ todoHook, id }) => {\n  const [\n    isEditMode,\n    isCheck,\n    text,\n    date,\n    priority,\n    onClickCheck,\n    ,\n    ,\n    ,\n    ,\n    ,\n    onDeleteTodo,\n    onClickEditBtn,\n  ] = todoHook;\n  let isHighLight = false;\n  setInterval(() => (isHighLight = !isHighLight), 1000);\n  // setInterval(() => console.log(\"TEST\"), 1000);\n  const displayBtn = (\n    <div className=\"todo__btn-box\">\n      <div className=\"todo__btn-content\">\n        <button className=\"todo__btn todo__btn-expire todo__btn-expired\">\n          {expiredElement}\n        </button>\n        <button\n          className={`todo__btn todo__btn-delete todo__btn-expired ${\n            isHighLight ? \"todo__btn-expired__highlight\" : \"\"\n          }`}\n          onClick={onDeleteTodo}\n        >\n          {trashElement}\n        </button>\n      </div>\n    </div>\n  );\n  const displayElement = (\n    <div className=\"todo-expired\">\n      <input\n        id={`todo__checkbox_${id}`}\n        className=\"todo__checkbox todo-display__checkbox todo__content todo-display__content todo-expired__content\"\n        type=\"checkbox\"\n        name=\"todoCheck\"\n        value={`${isCheck}`}\n        // onChange={({ target: { value } }) => onClickCheck(value)}\n      ></input>\n      <label\n        className=\"todo__label todo-display__label\"\n        htmlFor={`todo__checkbox_${id}`}\n      >\n        <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n      </label>\n      <span\n        className={`todo__text todo-display__text todo__content todo-display__content todo-expired__content ${\n          isCheck ? \"todo__text-checked\" : \"\"\n        }`}\n      >\n        {text}\n      </span>\n      <DatePick date={date} isEditMode={isEditMode} isExpired={true} />\n      <div className={`todo__star-rating todo-display__star}`}>\n        <StarRatings\n          rating={priority}\n          starRatedColor=\"rgb(62,0,0)\"\n          starHoverColor=\"rgb(62,0,0)\"\n          starEmptyColor=\"rgba(133, 133, 133, 1)\"\n          starSelectingHoverColor=\"red\"\n          numberOfStars={5}\n          name=\"rating\"\n          starDimension=\"24px\"\n          starSpacing=\"2px\"\n        />{\" \"}\n      </div>\n      {displayBtn}\n    </div>\n  );\n  return displayElement;\n};\n"]},"metadata":{},"sourceType":"module"}