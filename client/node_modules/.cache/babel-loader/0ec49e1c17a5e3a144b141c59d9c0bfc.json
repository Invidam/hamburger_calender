{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/timeBtn/TimeDisplayBtn.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  }\n};\nexport const TimeRecordDisplay = ({\n  recordTime,\n  isWake,\n  updateRecrodTime\n}) => {\n  _s();\n\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n\n  const openEditModal = () => setEditModalIsOpen(true);\n\n  const closeEditModal = event => setEditModalIsOpen(false);\n\n  const {\n    onEditRecrodTime\n  } = useEditTime(recordTime, updateRecrodTime, isWake, closeEditModal);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isWake ? \"workList__wakeTime-display workList__time-display workList__time workList__wakeTime\" : \"workList__bedTime-display workList__time-display workList__time workList__bedTime\",\n    children: [isWake ? \"Wake at \" : \"Sleep at \", recordTime.hour < 10 ? \"0\" + recordTime.hour : recordTime.hour, \":\", recordTime.minute < 10 ? \"0\" + recordTime.minute : recordTime.minute]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimeRecordDisplay, \"+CNJqdITo9wHCUcmDtUlztnVN1U=\", true);\n\n_c = TimeRecordDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeRecordDisplay\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/timeBtn/TimeDisplayBtn.js"],"names":["useState","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","overlay","position","TimeRecordDisplay","recordTime","isWake","updateRecrodTime","editModalIsOpen","setEditModalIsOpen","openEditModal","closeEditModal","event","onEditRecrodTime","useEditTime","hour","minute"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AACAA,KAAK,CAACC,aAAN,CAAoB,OAApB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,GAAG,EAAE,KAFE;AAGPC,IAAAA,IAAI,EAAE,KAHC;AAIPC,IAAAA,KAAK,EAAE,MAJA;AAKPC,IAAAA,MAAM,EAAE,MALD;AAMPC,IAAAA,WAAW,EAAE,MANN;AAOPC,IAAAA,SAAS,EAAE,uBAPJ;AAQPC,IAAAA,eAAe,EAAE,oBARV;AASPC,IAAAA,MAAM,EAAE;AATD,GADU;AAYnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,OADH;AAEPT,IAAAA,GAAG,EAAE,CAFE;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPG,IAAAA,eAAe,EAAE;AANV;AAZU,CAArB;AAqBA,OAAO,MAAMI,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,CAAD,KAA8C;AAAA;;AAC7E,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,KAAD,CAAtD;;AACA,QAAMqB,aAAa,GAAG,MAAMD,kBAAkB,CAAC,IAAD,CAA9C;;AACA,QAAME,cAAc,GAAIC,KAAD,IAAWH,kBAAkB,CAAC,KAAD,CAApD;;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAuBC,WAAW,CACtCT,UADsC,EAEtCE,gBAFsC,EAGtCD,MAHsC,EAItCK,cAJsC,CAAxC;AAMA,sBACE;AACE,IAAA,SAAS,EACPL,MAAM,GACF,qFADE,GAEF,mFAJR;AAAA,eAOGA,MAAM,GAAG,UAAH,GAAgB,WAPzB,EAQGD,UAAU,CAACU,IAAX,GAAkB,EAAlB,GAAuB,MAAMV,UAAU,CAACU,IAAxC,GAA+CV,UAAU,CAACU,IAR7D,OASGV,UAAU,CAACW,MAAX,GAAoB,EAApB,GAAyB,MAAMX,UAAU,CAACW,MAA1C,GAAmDX,UAAU,CAACW,MATjE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBM;;GAAMZ,iB;;KAAAA,iB","sourcesContent":["import { useState } from \"react\";\nimport Modal from \"react-modal\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\nexport const TimeRecordDisplay = ({ recordTime, isWake, updateRecrodTime }) => {\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const openEditModal = () => setEditModalIsOpen(true);\n  const closeEditModal = (event) => setEditModalIsOpen(false);\n  const { onEditRecrodTime } = useEditTime(\n    recordTime,\n    updateRecrodTime,\n    isWake,\n    closeEditModal\n  );\n  return (\n    <li\n      className={\n        isWake\n          ? \"workList__wakeTime-display workList__time-display workList__time workList__wakeTime\"\n          : \"workList__bedTime-display workList__time-display workList__time workList__bedTime\"\n      }\n    >\n      {isWake ? \"Wake at \" : \"Sleep at \"}\n      {recordTime.hour < 10 ? \"0\" + recordTime.hour : recordTime.hour}:\n      {recordTime.minute < 10 ? \"0\" + recordTime.minute : recordTime.minute}\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}