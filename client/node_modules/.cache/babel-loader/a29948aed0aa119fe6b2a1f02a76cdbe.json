{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\n\nconst getEmptyWorkList = () => {\n  return [null];\n};\n\nconst isEmptyWorkList = work => work[0];\n\nconst checkWorkList = work => isEmptyWorkList(work) ? getEmptyWorkList() : work;\n\nexport const useUpdateWork = (initList, user, date) => {\n  _s();\n\n  // console.log(\"UPDATE WORK HOOK DATE: \", date);\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\") ? JSON.parse(window.localStorage.getItem(\"workList\")) : [];\n  const [workList, setWorkList] = useState();\n  useEffect(() => {\n    console.log(\"DATE CHANG================\", date);\n    setWorkList(initList);\n  }, [date]);\n\n  const getAndUpdateWorkList = async () => {\n    const data = axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\"\n      },\n      url: `/api/${user}/${date}/worklist/worklist`,\n      method: \"get\"\n    });\n    const resWorkList = checkWorkList(data === null || data === void 0 ? void 0 : data.data);\n    console.log(\"SET AFT\", resWorkList);\n    setWorkList(resWorkList);\n  };\n\n  const updateWorkList = _workList => {\n    _workList = checkWorkList(_workList);\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList\n    }); // if (_workList?.length)\n    //   window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n    // else window.localStorage.removeItem(\"workList\");\n  };\n\n  return [workList, updateWorkList];\n}; //:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n\n_s(useUpdateWork, \"JK4s//pofYMHoAup+tILQomfvO4=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/useUpdateWork.js"],"names":["useEffect","useState","axios","getToday","getEmptyWorkList","isEmptyWorkList","work","checkWorkList","useUpdateWork","initList","user","date","window","localStorage","getItem","JSON","parse","workList","setWorkList","console","log","getAndUpdateWorkList","data","headers","Authorization","url","method","resWorkList","updateWorkList","_workList","post","value"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SAAO,CAAC,IAAD,CAAP;AACD,CAFD;;AAGA,MAAMC,eAAe,GAAIC,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAtC;;AAEA,MAAMC,aAAa,GAAID,IAAD,IACpBD,eAAe,CAACC,IAAD,CAAf,GAAwBF,gBAAgB,EAAxC,GAA6CE,IAD/C;;AAGA,OAAO,MAAME,aAAa,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,KAA0B;AAAA;;AACrD;AACA;AACAF,EAAAA,QAAQ,GAAGG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,IACPC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CADO,GAEP,EAFJ;AAGA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,EAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CT,IAA1C;AACAO,IAAAA,WAAW,CAACT,QAAD,CAAX;AACD,GAHQ,EAGN,CAACE,IAAD,CAHM,CAAT;;AAKA,QAAMU,oBAAoB,GAAG,YAAY;AACvC,UAAMC,IAAI,GAAGpB,KAAK,CAAC;AACjBqB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,EADR;AAEP,wBAAgB;AAFT,OADQ;AAKjBC,MAAAA,GAAG,EAAG,QAAOf,IAAK,IAAGC,IAAK,oBALT;AAMjBe,MAAAA,MAAM,EAAE;AANS,KAAD,CAAlB;AAQA,UAAMC,WAAW,GAAGpB,aAAa,CAACe,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAjC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBO,WAAvB;AACAT,IAAAA,WAAW,CAACS,WAAD,CAAX;AACD,GAZD;;AAcA,QAAMC,cAAc,GAAIC,SAAD,IAAe;AACpCA,IAAAA,SAAS,GAAGtB,aAAa,CAACsB,SAAD,CAAzB;AACAX,IAAAA,WAAW,CAACW,SAAD,CAAX;AACA3B,IAAAA,KAAK,CAAC4B,IAAN,CAAY,QAAOpB,IAAK,IAAGC,IAAK,oBAAhC,EAAqD;AACnDD,MAAAA,IAAI,EAAE,MAD6C;AAEnDqB,MAAAA,KAAK,EAAEF;AAF4C,KAArD,EAHoC,CAOpC;AACA;AACA;AACD,GAVD;;AAWA,SAAO,CAACZ,QAAD,EAAWW,cAAX,CAAP;AACD,CAtCM,C,CAuCP;AACA;;GAxCapB,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { getToday } from \"../../../tools/time\";\n\nconst getEmptyWorkList = () => {\n  return [null];\n};\nconst isEmptyWorkList = (work) => work[0];\n\nconst checkWorkList = (work) =>\n  isEmptyWorkList(work) ? getEmptyWorkList() : work;\n\nexport const useUpdateWork = (initList, user, date) => {\n  // console.log(\"UPDATE WORK HOOK DATE: \", date);\n  // if (getToday() !== date) window.localStorage.removeItem(\"workList\");\n  initList = window.localStorage.getItem(\"workList\")\n    ? JSON.parse(window.localStorage.getItem(\"workList\"))\n    : [];\n  const [workList, setWorkList] = useState();\n  useEffect(() => {\n    console.log(\"DATE CHANG================\", date);\n    setWorkList(initList);\n  }, [date]);\n\n  const getAndUpdateWorkList = async () => {\n    const data = axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      url: `/api/${user}/${date}/worklist/worklist`,\n      method: \"get\",\n    });\n    const resWorkList = checkWorkList(data?.data);\n    console.log(\"SET AFT\", resWorkList);\n    setWorkList(resWorkList);\n  };\n\n  const updateWorkList = (_workList) => {\n    _workList = checkWorkList(_workList);\n    setWorkList(_workList);\n    axios.post(`/api/${user}/${date}/worklist/worklist`, {\n      user: \"TEST\",\n      value: _workList,\n    });\n    // if (_workList?.length)\n    //   window.localStorage.setItem(\"workList\", JSON.stringify(_workList));\n    // else window.localStorage.removeItem(\"workList\");\n  };\n  return [workList, updateWorkList];\n};\n//:id꼴이 괜히있는게 아니다 ㅋㅋ;\n//여기서 useState가 동작을 안한다,. RET1 -> RET 로 ㄴ넘어가지가 않는다. 하\n"]},"metadata":{},"sourceType":"module"}