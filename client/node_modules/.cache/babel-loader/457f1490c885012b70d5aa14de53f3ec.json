{"ast":null,"code":"import{ARRAY_LENGTH,DISPLAY_LENGTH}from\"../../hooks/listView/useListView\";import\"../../css/listView/listView.css\";import{View}from\"./View\";import{getAddedDateStr,getToday}from\"../../tools/time\";import{LoadingElement}from\"../Loading\";import{EmptyView}from\"./EmptyView\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faCaretLeft,faCaretRight}from\"@fortawesome/free-solid-svg-icons\";import{LocalStroage}from\"../../tools/LocalStorage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var leftCaret=/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCaretLeft,size:\"5x\"});var rightCaret=/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCaretRight,size:\"5x\"});export var ListView=function ListView(_ref){var user=_ref.user,date=_ref.date,setDate=_ref.setDate,listViewHook=_ref.listViewHook;var isListViewLoading=listViewHook.isListViewLoading,startDate=listViewHook.startDate,listView=listViewHook.listView,onClickRightBtn=listViewHook.onClickRightBtn,onClickLeftBtn=listViewHook.onClickLeftBtn;var listViewContent=listView?listView.map(function(view,idx){var _LocalStroage$date$ge;var viewDate=getAddedDateStr(startDate,idx+Math.floor((ARRAY_LENGTH-DISPLAY_LENGTH)/2));return/*#__PURE__*/_jsx(\"li\",{className:\"listView-element \".concat(isListViewLoading?\"listView-loading\":\"\").concat(((_LocalStroage$date$ge=LocalStroage.date().get())===null||_LocalStroage$date$ge===void 0?void 0:_LocalStroage$date$ge.clickedDate)===viewDate?\"listView-element__clickedDate \":\"\").concat(getToday()===viewDate?\"listView-element__today\":\"\"),children:view?/*#__PURE__*/_jsx(View,{viewObj:view,setDate:setDate,isLoad:isListViewLoading,viewDate:viewDate}):/*#__PURE__*/_jsx(EmptyView,{viewObj:view,setDate:setDate,isLoad:isListViewLoading,viewDate:viewDate})},idx);}):\"NO\";return isListViewLoading?/*#__PURE__*/_jsx(LoadingElement,{text:\"Week List Loading. . .\"}):/*#__PURE__*/_jsxs(\"ol\",{className:isListViewLoading?\"listView-list listView-loading\":\"listView-list\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"listView-element listView-element__btn \".concat(isListViewLoading?\"listView-loading\":\"\"),onClick:onClickLeftBtn// disabled={isListViewLoading}\n,children:/*#__PURE__*/_jsxs(\"span\",{className:\"listView-element__btn-text\",children:[leftCaret,\" \"]})}),listViewContent,/*#__PURE__*/_jsx(\"li\",{className:\"listView-element listView-element__btn \".concat(isListViewLoading?\"listView-loading\":\"\"),onClick:onClickRightBtn,disabled:isListViewLoading,children:/*#__PURE__*/_jsx(\"span\",{className:\"listView-element__btn-text\",children:rightCaret})})]});};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/components/listview/ListView.js"],"names":["ARRAY_LENGTH","DISPLAY_LENGTH","View","getAddedDateStr","getToday","LoadingElement","EmptyView","FontAwesomeIcon","faCaretLeft","faCaretRight","LocalStroage","leftCaret","rightCaret","ListView","user","date","setDate","listViewHook","isListViewLoading","startDate","listView","onClickRightBtn","onClickLeftBtn","listViewContent","map","view","idx","viewDate","Math","floor","get","clickedDate"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,cAAvB,KAA6C,kCAA7C,CACA,MAAO,iCAAP,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,eAAT,CAA0BC,QAA1B,KAA0C,kBAA1C,CACA,OAASC,cAAT,KAA+B,YAA/B,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,CAAsBC,YAAtB,KAA0C,mCAA1C,CACA,OAASC,YAAT,KAA6B,0BAA7B,C,wFAEA,GAAMC,CAAAA,SAAS,cAAG,KAAC,eAAD,EAAiB,IAAI,CAAEH,WAAvB,CAAoC,IAAI,CAAC,IAAzC,EAAlB,CACA,GAAMI,CAAAA,UAAU,cAAG,KAAC,eAAD,EAAiB,IAAI,CAAEH,YAAvB,CAAqC,IAAI,CAAC,IAA1C,EAAnB,CACA,MAAO,IAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA2C,IAAxCC,CAAAA,IAAwC,MAAxCA,IAAwC,CAAlCC,IAAkC,MAAlCA,IAAkC,CAA5BC,OAA4B,MAA5BA,OAA4B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACjE,GACEC,CAAAA,iBADF,CAMID,YANJ,CACEC,iBADF,CAEEC,SAFF,CAMIF,YANJ,CAEEE,SAFF,CAGEC,QAHF,CAMIH,YANJ,CAGEG,QAHF,CAIEC,eAJF,CAMIJ,YANJ,CAIEI,eAJF,CAKEC,cALF,CAMIL,YANJ,CAKEK,cALF,CAOA,GAAMC,CAAAA,eAAe,CAAGH,QAAQ,CAC5BA,QAAQ,CAACI,GAAT,CAAa,SAACC,IAAD,CAAOC,GAAP,CAAe,2BAC1B,GAAMC,CAAAA,QAAQ,CAAGxB,eAAe,CAC9BgB,SAD8B,CAE9BO,GAAG,CAAGE,IAAI,CAACC,KAAL,CAAW,CAAC7B,YAAY,CAAGC,cAAhB,EAAkC,CAA7C,CAFwB,CAAhC,CAIA,mBACE,WACE,SAAS,4BACPiB,iBAAiB,CAAG,kBAAH,CAAwB,EADlC,SAGP,wBAAAR,YAAY,CAACK,IAAb,GAAoBe,GAApB,wEAA2BC,WAA3B,IAA2CJ,QAA3C,CACI,gCADJ,CAEI,EALG,SAMNvB,QAAQ,KAAOuB,QAAf,CAA0B,yBAA1B,CAAsD,EANhD,CADX,UAUGF,IAAI,cACH,KAAC,IAAD,EACE,OAAO,CAAEA,IADX,CAEE,OAAO,CAAET,OAFX,CAGE,MAAM,CAAEE,iBAHV,CAIE,QAAQ,CAAES,QAJZ,EADG,cAQH,KAAC,SAAD,EACE,OAAO,CAAEF,IADX,CAEE,OAAO,CAAET,OAFX,CAGE,MAAM,CAAEE,iBAHV,CAIE,QAAQ,CAAES,QAJZ,EAlBJ,EAQOD,GARP,CADF,CA4BD,CAjCD,CAD4B,CAmC5B,IAnCJ,CAoCA,MAAOR,CAAAA,iBAAiB,cACtB,KAAC,cAAD,EAAgB,IAAI,CAAE,wBAAtB,EADsB,cAGtB,YACE,SAAS,CACPA,iBAAiB,CAAG,gCAAH,CAAsC,eAF3D,wBAKE,WACE,SAAS,kDACPA,iBAAiB,CAAG,kBAAH,CAAwB,EADlC,CADX,CAIE,OAAO,CAAEI,cACT;AALF,uBAOE,cAAM,SAAS,6BAAf,WAAgDX,SAAhD,OAPF,EALF,CAcGY,eAdH,cAeE,WACE,SAAS,kDACPL,iBAAiB,CAAG,kBAAH,CAAwB,EADlC,CADX,CAIE,OAAO,CAAEG,eAJX,CAKE,QAAQ,CAAEH,iBALZ,uBAOE,aAAM,SAAS,CAAC,4BAAhB,UAA8CN,UAA9C,EAPF,EAfF,GAHF,CA6BD,CAzEM","sourcesContent":["import { ARRAY_LENGTH, DISPLAY_LENGTH } from \"../../hooks/listView/useListView\";\nimport \"../../css/listView/listView.css\";\nimport { View } from \"./View\";\nimport { getAddedDateStr, getToday } from \"../../tools/time\";\nimport { LoadingElement } from \"../Loading\";\nimport { EmptyView } from \"./EmptyView\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretLeft, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\n\nconst leftCaret = <FontAwesomeIcon icon={faCaretLeft} size=\"5x\" />;\nconst rightCaret = <FontAwesomeIcon icon={faCaretRight} size=\"5x\" />;\nexport const ListView = ({ user, date, setDate, listViewHook }) => {\n  const {\n    isListViewLoading,\n    startDate,\n    listView,\n    onClickRightBtn,\n    onClickLeftBtn,\n  } = listViewHook;\n  const listViewContent = listView\n    ? listView.map((view, idx) => {\n        const viewDate = getAddedDateStr(\n          startDate,\n          idx + Math.floor((ARRAY_LENGTH - DISPLAY_LENGTH) / 2)\n        );\n        return (\n          <li\n            className={`listView-element ${\n              isListViewLoading ? \"listView-loading\" : \"\"\n            }${\n              LocalStroage.date().get()?.clickedDate === viewDate\n                ? \"listView-element__clickedDate \"\n                : \"\"\n            }${getToday() === viewDate ? \"listView-element__today\" : \"\"}`}\n            key={idx}\n          >\n            {view ? (\n              <View\n                viewObj={view}\n                setDate={setDate}\n                isLoad={isListViewLoading}\n                viewDate={viewDate}\n              />\n            ) : (\n              <EmptyView\n                viewObj={view}\n                setDate={setDate}\n                isLoad={isListViewLoading}\n                viewDate={viewDate}\n              />\n            )}\n          </li>\n        );\n      })\n    : \"NO\";\n  return isListViewLoading ? (\n    <LoadingElement text={\"Week List Loading. . .\"} />\n  ) : (\n    <ol\n      className={\n        isListViewLoading ? \"listView-list listView-loading\" : \"listView-list\"\n      }\n    >\n      <li\n        className={`listView-element listView-element__btn ${\n          isListViewLoading ? \"listView-loading\" : \"\"\n        }`}\n        onClick={onClickLeftBtn}\n        // disabled={isListViewLoading}\n      >\n        <span className={`listView-element__btn-text`}>{leftCaret} </span>\n      </li>\n      {listViewContent}\n      <li\n        className={`listView-element listView-element__btn ${\n          isListViewLoading ? \"listView-loading\" : \"\"\n        }`}\n        onClick={onClickRightBtn}\n        disabled={isListViewLoading}\n      >\n        <span className=\"listView-element__btn-text\">{rightCaret}</span>\n      </li>\n    </ol>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}