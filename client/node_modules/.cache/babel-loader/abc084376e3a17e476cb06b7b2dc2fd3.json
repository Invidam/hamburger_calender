{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/pages/GithubLoginPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubLoginPage = props => {\n  _s();\n\n  // const {code} =\n  console.log(\"PROPS: \", props);\n  const {\n    history,\n    location,\n    customLoginHook\n  } = props;\n  const setUser = customLoginHook[1];\n  console.log(\"locat\", location === null || location === void 0 ? void 0 : location.search);\n  useEffect(() => {\n    const getToken = async () => {\n      const {\n        code\n      } = qs.parse(location === null || location === void 0 ? void 0 : location.search, {\n        ignoreQueryPrefix: true\n      });\n\n      try {\n        const response = await axios.post(\"/auth/github-login\", {\n          code\n        });\n        console.log(\"RESL: \", response);\n        const {\n          access_token,\n          name\n        } = response;\n        localStorage.setItem(\"access_token\", access_token);\n        setUser(name);\n        history.push(\"/\");\n      } catch (error) {\n        alert(error);\n        history.push(\"/\");\n      }\n    };\n\n    getToken();\n  }, [location, history]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"GITHUB LOGIN LOADING . . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GithubLoginPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GithubLoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubLoginPage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/pages/GithubLoginPage.js"],"names":["axios","qs","useEffect","GithubLoginPage","props","console","log","history","location","customLoginHook","setUser","search","getToken","code","parse","ignoreQueryPrefix","response","post","access_token","name","localStorage","setItem","push","error","alert"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,SAAT,QAA0B,OAA1B;;AACA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACxC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAyCL,KAA/C;AACA,QAAMM,OAAO,GAAGD,eAAe,CAAC,CAAD,CAA/B;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,QAArB,aAAqBA,QAArB,uBAAqBA,QAAQ,CAAEG,MAA/B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAWZ,EAAE,CAACa,KAAH,CAASN,QAAT,aAASA,QAAT,uBAASA,QAAQ,CAAEG,MAAnB,EAA2B;AAC1CI,QAAAA,iBAAiB,EAAE;AADuB,OAA3B,CAAjB;;AAGA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,oBAAX,EAAiC;AACtDJ,UAAAA;AADsD,SAAjC,CAAvB;AAGAR,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBU,QAAtB;AACA,cAAM;AAAEE,UAAAA,YAAF;AAAgBC,UAAAA;AAAhB,YAAyBH,QAA/B;AACAI,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,YAArC;AACAR,QAAAA,OAAO,CAACS,IAAD,CAAP;AACAZ,QAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACD,OATD,CASE,OAAOC,KAAP,EAAc;AACdC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACAhB,QAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACD;AACF,KAjBD;;AAkBAV,IAAAA,QAAQ;AACT,GApBQ,EAoBN,CAACJ,QAAD,EAAWD,OAAX,CApBM,CAAT;AAqBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5BM;;GAAMJ,e;;KAAAA,e","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nimport { useEffect } from \"react\";\nexport const GithubLoginPage = (props) => {\n  // const {code} =\n  console.log(\"PROPS: \", props);\n  const { history, location, customLoginHook } = props;\n  const setUser = customLoginHook[1];\n  console.log(\"locat\", location?.search);\n  useEffect(() => {\n    const getToken = async () => {\n      const { code } = qs.parse(location?.search, {\n        ignoreQueryPrefix: true,\n      });\n      try {\n        const response = await axios.post(\"/auth/github-login\", {\n          code,\n        });\n        console.log(\"RESL: \", response);\n        const { access_token, name } = response;\n        localStorage.setItem(\"access_token\", access_token);\n        setUser(name);\n        history.push(\"/\");\n      } catch (error) {\n        alert(error);\n        history.push(\"/\");\n      }\n    };\n    getToken();\n  }, [location, history]);\n  return <h1>GITHUB LOGIN LOADING . . .</h1>;\n};\n"]},"metadata":{},"sourceType":"module"}