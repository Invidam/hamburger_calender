{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/elements/TodoInput.js\";\nimport StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { DatePick } from \"./DatePick\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon__check\",\n  icon: faCheck,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\nexport const TodoInput = ({\n  todoHook,\n  todoItem,\n  id\n}) => {\n  const isSubmitMode = id === 0;\n  const [isEditMode, isCheck, date, onClickCheck, onChangeText, onChangeDate, onChangePriority, onSubmitTodo, onEditTodo] = todoHook;\n  console.log(\"IS EDIT \", isSubmitMode);\n\n  const inputBtn = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo__btn-box todo__btn-box\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo__btn todo__btn-add\",\n      onClick: isSubmitMode ? onSubmitTodo : onEditTodo,\n      children: isSubmitMode ? \"+\" : \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n\n  const inputElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: `todo__checkbox_${id}`,\n      className: \"todo__checkbox todo__checkbox todo__content todo-input__content\",\n      type: \"checkbox\",\n      name: \"todoCheck\",\n      defaultValue: todoItem === null || todoItem === void 0 ? void 0 : todoItem.isCheck,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => onClickCheck(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo__label\",\n      htmlFor: `todo__checkbox_${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo__label-icon\",\n        children: isCheck ? checkElement : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todo__text todo-input__text todo__content todo-input__content\",\n      type: \"text\",\n      autoComplete: \"off\",\n      name: \"todoText\",\n      defaultValue: todoItem === null || todoItem === void 0 ? void 0 : todoItem.text,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => onChangeText(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePick, {\n      isEditMode: isEditMode,\n      date: date,\n      onChangeDate: onChangeDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `todo__star-rating todo-input__star `,\n      children: [/*#__PURE__*/_jsxDEV(StarRatings // rating={todoItem?.priority}\n      , {\n        starRatedColor: \"rgba(241, 196, 15,0.8)\",\n        starEmptyColor: \"rgba(151, 151, 151, 0.707)\",\n        starHoverColor: \"rgba(241, 196, 15,0.9)\",\n        starSelectingHoverColor: \"red\",\n        changeRating: onChangePriority,\n        numberOfStars: 5,\n        name: \"rating\",\n        starDimension: \"12px\",\n        starSpacing: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), inputBtn]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  return inputElement;\n};\n_c = TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/elements/TodoInput.js"],"names":["StarRatings","DatePicker","useTodo","DatePick","faCheck","FontAwesomeIcon","checkElement","TodoInput","todoHook","todoItem","id","isSubmitMode","isEditMode","isCheck","date","onClickCheck","onChangeText","onChangeDate","onChangePriority","onSubmitTodo","onEditTodo","console","log","inputBtn","inputElement","target","value","text"],"mappings":"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","sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\n\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { DatePick } from \"./DatePick\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst checkElement = (\n  <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n);\nexport const TodoInput = ({ todoHook, todoItem, id }) => {\n  const isSubmitMode = id === 0;\n  const [\n    isEditMode,\n    isCheck,\n    date,\n    onClickCheck,\n    onChangeText,\n    onChangeDate,\n    onChangePriority,\n    onSubmitTodo,\n    onEditTodo,\n  ] = todoHook;\n  console.log(\"IS EDIT \", isSubmitMode);\n  const inputBtn = (\n    <div className=\"todo__btn-box todo__btn-box\">\n      <button\n        className=\"todo__btn todo__btn-add\"\n        onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n      >\n        {isSubmitMode ? \"+\" : \"Save\"}\n      </button>\n    </div>\n  );\n  const inputElement = (\n    <div className=\"todo\">\n      <input\n        id={`todo__checkbox_${id}`}\n        className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n        type=\"checkbox\"\n        name=\"todoCheck\"\n        defaultValue={todoItem?.isCheck}\n        onChange={({ target: { value } }) => onClickCheck(value)}\n      ></input>\n      <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n        <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n      </label>\n      {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n      <input\n        className=\"todo__text todo-input__text todo__content todo-input__content\"\n        type=\"text\"\n        autoComplete=\"off\"\n        name=\"todoText\"\n        defaultValue={todoItem?.text}\n        onChange={({ target: { value } }) => onChangeText(value)}\n      ></input>\n      {/* <input\n        className=\"todo-input__date todo-input__content\"\n        type=\"date\"\n        name=\"todoDate\"\n        lang=\"en-us\"\n        required\n        pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n        defaultValue={isEditMode ? todoItem?.date : undefined}\n        min={getToday()}\n        onChange={({ target: { value } }) => onChangeDate(value)}\n      ></input> */}\n      <DatePick\n        isEditMode={isEditMode}\n        date={date}\n        onChangeDate={onChangeDate}\n      />\n      {/* <input\n        className=\"todo-input__priority todo-input__content\"\n        type=\"text\"\n        name=\"todoPriority\"\n        defaultValue={todoItem?.priority}\n        onChange={({ target: { value } }) => onChangePriority(value)}\n      ></input> */}\n      <div className={`todo__star-rating todo-input__star `}>\n        <StarRatings\n          // rating={todoItem?.priority}\n          starRatedColor=\"rgba(241, 196, 15,0.8)\"\n          starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n          starHoverColor=\"rgba(241, 196, 15,0.9)\"\n          starSelectingHoverColor=\"red\"\n          changeRating={onChangePriority}\n          numberOfStars={5}\n          name=\"rating\"\n          starDimension=\"12px\"\n          starSpacing=\"0px\"\n        />{\" \"}\n      </div>\n      {inputBtn}\n    </div>\n  );\n  return inputElement;\n};\n"]},"metadata":{},"sourceType":"module"}