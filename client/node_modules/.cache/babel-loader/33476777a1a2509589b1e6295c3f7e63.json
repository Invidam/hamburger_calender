{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/AddWindow.js\",\n    _s = $RefreshSig$();\n\nimport \"../../../css/addWindow.css\";\nimport { useTabs } from \"../../../hooks/useTabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddWorkWindow = ({\n  workList,\n  onSubmitWork\n}) => {\n  _s();\n\n  const Recommended = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Recommended\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 23\n  }, this);\n\n  const Favorite = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Favorite\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 20\n  }, this);\n\n  const Customize = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Customize\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 21\n  }, this);\n\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const {\n    currentItem,\n    changeItem\n  } = useTabs(0, Tabs);\n  if (workList.length) window.localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"addWindow\",\n    autocomplete: \"off\",\n    onSubmit: onSubmitWork,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow__column\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWinodw__title\",\n        children: \"Input Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow__column addWindow__inputSpace\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWindow__desc addWindow__desc-name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWindow__input addWindow__input-name\",\n        type: \"text\",\n        name: \"workName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWindow__desc addWindow__desc-time\",\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWindow__input addWindow__input-time\",\n        type: \"number\",\n        step: \"1\",\n        min: \"0\",\n        max: \"24\",\n        name: \"workTime\",\n        placeholder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow__column\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWinodw__title\",\n        children: \"Input Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow_column\",\n      children: Tabs.map((section, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addWindow__tab\",\n          onClick: () => changeItem(idx),\n          children: [\" \", tabNames[idx]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), currentItem, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"color\",\n      name: \"workColor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddWorkWindow, \"CvJRap60WuaAi4g4SaPNBPmYmpM=\", false, function () {\n  return [useTabs];\n});\n\n_c = AddWorkWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkWindow\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/AddWindow.js"],"names":["useTabs","AddWorkWindow","workList","onSubmitWork","Recommended","Favorite","Customize","tabNames","Tabs","currentItem","changeItem","length","window","localStorage","setItem","JSON","stringify","map","section","idx"],"mappings":"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","sourcesContent":["import \"../../../css/addWindow.css\";\nimport { useTabs } from \"../../../hooks/useTabs\";\nexport const AddWorkWindow = ({ workList, onSubmitWork }) => {\n  const Recommended = <h1>Recommended</h1>;\n  const Favorite = <h1>Favorite</h1>;\n  const Customize = <h1>Customize</h1>;\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const { currentItem, changeItem } = useTabs(0, Tabs);\n  if (workList.length)\n    window.localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return (\n    <form className=\"addWindow\" autocomplete=\"off\" onSubmit={onSubmitWork}>\n      {/* {WorkList.workList} */}\n      <div className=\"addWindow__column\">\n        <span className=\"addWinodw__title\">Input Work</span>{\" \"}\n      </div>\n      <div className=\"addWindow__column addWindow__inputSpace\">\n        <span className=\"addWindow__desc addWindow__desc-name\">Name:</span>\n        <input\n          className=\"addWindow__input addWindow__input-name\"\n          type=\"text\"\n          name=\"workName\"\n        ></input>\n        <span className=\"addWindow__desc addWindow__desc-time\">Time:</span>\n        <input\n          className=\"addWindow__input addWindow__input-time\"\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          max=\"24\"\n          name=\"workTime\"\n          placeholder=\"0\"\n        ></input>\n        h\n      </div>\n      <div className=\"addWindow__column\">\n        <span className=\"addWinodw__title\">Input Work</span>{\" \"}\n      </div>\n      <div className=\"addWindow_column\">\n        {Tabs.map((section, idx) => {\n          return (\n            <button className=\"addWindow__tab\" onClick={() => changeItem(idx)}>\n              {\" \"}\n              {tabNames[idx]}\n            </button>\n          );\n        })}\n      </div>\n      {currentItem}\n      <input type=\"color\" name=\"workColor\"></input>\n      <button type=\"submit\">SUBMIT</button>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}