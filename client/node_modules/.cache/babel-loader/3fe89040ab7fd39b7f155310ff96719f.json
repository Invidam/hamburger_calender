{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/AddWindow.js\",\n    _s = $RefreshSig$();\n\nimport \"../../../css/addWindow.css\";\nimport { useTabs } from \"../../../hooks/useTabs\";\nimport { IngredientList } from \"./IngredientList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddWorkWindow = ({\n  workList,\n  onSubmitWork\n}) => {\n  _s();\n\n  const Recommended = /*#__PURE__*/_jsxDEV(IngredientList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 23\n  }, this);\n\n  const Favorite = /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Favorite\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 20\n  }, this);\n\n  const Customize = /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"color\",\n    onChange: () => {\n      console.log(this.value);\n    },\n    name: \"workColor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const [currentItem, currentIdx, changeItem] = useTabs(0, Tabs);\n  if (workList.length) window.localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"addWindow\",\n    autoComplete: \"off\",\n    onSubmit: onSubmitWork,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow__column\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWinodw__title\",\n        children: \"Input Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow__column addWindow__inputSpace\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWindow__desc addWindow__desc-name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWindow__input addWindow__input-name\",\n        type: \"text\",\n        name: \"workName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWindow__desc addWindow__desc-time\",\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWindow__input addWindow__input-time\",\n        type: \"number\",\n        step: \"1\",\n        min: \"0\",\n        max: \"24\",\n        name: \"workTime\",\n        placeholder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow__column\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"addWinodw__title\",\n        children: \"Pick Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addWindow_column\",\n      children: Tabs.map((section, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentIdx === idx ? \"addWindow__tab-focus addWindow__tab\" : \"addWindow__tab\",\n          onClick: event => {\n            event.preventDefault();\n            changeItem(idx);\n          },\n          children: tabNames[idx]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), currentItem, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n/*\nhook을 사용하여 문제 해결하기.\nuseSubmit => set Name set Time set Color을 리턴하여\n각 탭에서 set Color을 사용하기. (이래야 저장한 색이 유지될듯. + 제출 시에 )\n왜냐면 네이티브가 아니기 때문이다.\n계속 submit되는 문제는 탭할 때 onTab에서 event.preventDefault()을 이용하여 해결하였음.\n\n*/\n\n_s(AddWorkWindow, \"KgCcfpL4hdQt823adKcvkg0iuMA=\", false, function () {\n  return [useTabs];\n});\n\n_c = AddWorkWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkWindow\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/AddWindow.js"],"names":["useTabs","IngredientList","AddWorkWindow","workList","onSubmitWork","Recommended","Favorite","Customize","console","log","value","tabNames","Tabs","currentItem","currentIdx","changeItem","length","window","localStorage","setItem","JSON","stringify","map","section","idx","event","preventDefault"],"mappings":"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","sourcesContent":["import \"../../../css/addWindow.css\";\nimport { useTabs } from \"../../../hooks/useTabs\";\nimport { IngredientList } from \"./IngredientList\";\nexport const AddWorkWindow = ({ workList, onSubmitWork }) => {\n  const Recommended = <IngredientList />;\n  const Favorite = <h1>Favorite</h1>;\n  const Customize = (\n    <input\n      type=\"color\"\n      onChange={() => {\n        console.log(this.value);\n      }}\n      name=\"workColor\"\n    ></input>\n  );\n  const tabNames = [\"Recommended\", \"Favorite\", \"Customize\"];\n  const Tabs = [Recommended, Favorite, Customize];\n  const [currentItem, currentIdx, changeItem] = useTabs(0, Tabs);\n  if (workList.length)\n    window.localStorage.setItem(\"workList\", JSON.stringify(workList));\n  return (\n    <form className=\"addWindow\" autoComplete=\"off\" onSubmit={onSubmitWork}>\n      {/* {WorkList.workList} */}\n      <div className=\"addWindow__column\">\n        <span className=\"addWinodw__title\">Input Work</span>{\" \"}\n      </div>\n      <div className=\"addWindow__column addWindow__inputSpace\">\n        <span className=\"addWindow__desc addWindow__desc-name\">Name:</span>\n        <input\n          className=\"addWindow__input addWindow__input-name\"\n          type=\"text\"\n          name=\"workName\"\n        ></input>\n        <span className=\"addWindow__desc addWindow__desc-time\">Time:</span>\n        <input\n          className=\"addWindow__input addWindow__input-time\"\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          max=\"24\"\n          name=\"workTime\"\n          placeholder=\"0\"\n        ></input>\n        h\n      </div>\n      <div className=\"addWindow__column\">\n        <span className=\"addWinodw__title\">Pick Color</span>{\" \"}\n      </div>\n      <div className=\"addWindow_column\">\n        {Tabs.map((section, idx) => {\n          return (\n            <button\n              className={\n                currentIdx === idx\n                  ? \"addWindow__tab-focus addWindow__tab\"\n                  : \"addWindow__tab\"\n              }\n              onClick={(event) => {\n                event.preventDefault();\n                changeItem(idx);\n              }}\n            >\n              {tabNames[idx]}\n            </button>\n          );\n        })}\n      </div>\n      {currentItem}\n      <input type=\"submit\" value=\"SUBMIT\"></input>\n    </form>\n  );\n};\n\n/*\nhook을 사용하여 문제 해결하기.\nuseSubmit => set Name set Time set Color을 리턴하여\n각 탭에서 set Color을 사용하기. (이래야 저장한 색이 유지될듯. + 제출 시에 )\n왜냐면 네이티브가 아니기 때문이다.\n계속 submit되는 문제는 탭할 때 onTab에서 event.preventDefault()을 이용하여 해결하였음.\n\n*/\n"]},"metadata":{},"sourceType":"module"}