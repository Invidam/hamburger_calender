{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport \"./css/calendar.css\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { NotFoundPage } from \"./components/pages/NotFoundPage\";\nimport { LoginPage } from \"./components/pages/LoginPage\";\nimport { HomePage } from \"./components/pages/HomePage\";\nimport { Header } from \"./components/Header\";\nimport { useLogin } from \"./hooks/user/useLogin\";\nimport { useSetDate } from \"./hooks/date/useSetDate\";\nimport { GithubLoginPage } from \"./components/pages/GithubLoginPage\";\nimport { SignupPage } from \"./components/pages/SignupPage\";\nimport { SettingPage } from \"./components/pages/SettingPage\";\nimport { useTargetSetting } from \"./hooks/user/useTargetSetting\";\nimport { LoadingElement } from \"./components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // useSetAxios();\n  console.log(\"[App] START-----------------------------------------\");\n  const updateDateHook = useSetDate();\n  const customLoginHook = useLogin();\n  const [user,, isLoggedIn,,, isLoginHookLoading] = customLoginHook;\n  const updateSettingHook = useTargetSetting(user, isLoginHookLoading);\n  const {\n    targetSetting,\n    isSettingHookLoading\n  } = updateSettingHook;\n  console.log(\"[APP] USER: \", user);\n\n  const isLoading = () => isLoginHookLoading || isSettingHookLoading;\n\n  console.log(\"[APP] IS Loading? \", isLoading(), \"login\", isLoginHookLoading, user, \"setting\", isSettingHookLoading, targetSetting);\n  return isLoading() ? /*#__PURE__*/_jsxDEV(LoadingElement, {\n    text: \"App Loading. . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      updateDateHook: updateDateHook,\n      customLoginHook: customLoginHook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(HomePage, {\n            user: user,\n            targetSetting: targetSetting,\n            updateDateHook: updateDateHook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: ({\n            history,\n            location\n          }) => {\n            if (isLoggedIn) {\n              history.push(\"/\");\n              return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 24\n              }, this);\n            } else return /*#__PURE__*/_jsxDEV(LoginPage, {\n              history: history,\n              location: location,\n              customLoginHook: customLoginHook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          render: ({\n            history,\n            location\n          }) => {\n            if (isLoggedIn) {\n              history.push(\"/\"); // alert(\"You are already logged in.\");\n\n              return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 24\n              }, this);\n            } else return /*#__PURE__*/_jsxDEV(SignupPage, {\n              history: history,\n              location: location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/setting\",\n          render: ({\n            history,\n            location\n          }) => {\n            if (!isLoggedIn) {\n              history.push(\"/\"); // alert(\"You are not logged in.\");\n\n              return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 24\n              }, this);\n            } else return /*#__PURE__*/_jsxDEV(SettingPage, {\n              user: user,\n              history: history,\n              location: location,\n              updateSettingHook: updateSettingHook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/github-login\",\n          render: ({\n            history,\n            location\n          }) => {\n            if (isLoggedIn) {\n              history.push(\"/\"); // alert(\"You are already logged in.\");\n\n              return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 24\n              }, this);\n            } else return /*#__PURE__*/_jsxDEV(GithubLoginPage, {\n              history: history,\n              location: location,\n              customLoginHook: customLoginHook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gKiOfiP8SzvQwF4zqPPrP9rQbSs=\", false, function () {\n  return [useSetDate, useLogin, useTargetSetting];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/App.js"],"names":["Route","Switch","BrowserRouter","Router","NotFoundPage","LoginPage","HomePage","Header","useLogin","useSetDate","GithubLoginPage","SignupPage","SettingPage","useTargetSetting","LoadingElement","App","console","log","updateDateHook","customLoginHook","user","isLoggedIn","isLoginHookLoading","updateSettingHook","targetSetting","isSettingHookLoading","isLoading","history","location","push"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport \"./css/calendar.css\";\n\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { NotFoundPage } from \"./components/pages/NotFoundPage\";\nimport { LoginPage } from \"./components/pages/LoginPage\";\nimport { HomePage } from \"./components/pages/HomePage\";\nimport { Header } from \"./components/Header\";\nimport { useLogin } from \"./hooks/user/useLogin\";\nimport { useSetDate } from \"./hooks/date/useSetDate\";\nimport { GithubLoginPage } from \"./components/pages/GithubLoginPage\";\nimport { SignupPage } from \"./components/pages/SignupPage\";\nimport { SettingPage } from \"./components/pages/SettingPage\";\nimport { useTargetSetting } from \"./hooks/user/useTargetSetting\";\nimport { LoadingElement } from \"./components/Loading\";\n\nfunction App() {\n  // useSetAxios();\n  console.log(\"[App] START-----------------------------------------\");\n  const updateDateHook = useSetDate();\n  const customLoginHook = useLogin();\n  const [user, , isLoggedIn, , , isLoginHookLoading] = customLoginHook;\n  const updateSettingHook = useTargetSetting(user, isLoginHookLoading);\n  const { targetSetting, isSettingHookLoading } = updateSettingHook;\n  console.log(\"[APP] USER: \", user);\n  const isLoading = () => isLoginHookLoading || isSettingHookLoading;\n  console.log(\n    \"[APP] IS Loading? \",\n    isLoading(),\n    \"login\",\n    isLoginHookLoading,\n    user,\n    \"setting\",\n    isSettingHookLoading,\n    targetSetting\n  );\n  return isLoading() ? (\n    <LoadingElement text={\"App Loading. . .\"} />\n  ) : (\n    <Router>\n      <Header\n        updateDateHook={updateDateHook}\n        customLoginHook={customLoginHook}\n      />\n      <main>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <HomePage\n                user={user}\n                targetSetting={targetSetting}\n                updateDateHook={updateDateHook}\n              />\n            )}\n          />\n          <Route\n            path=\"/login\"\n            render={({ history, location }) => {\n              if (isLoggedIn) {\n                history.push(\"/\");\n                return <NotFoundPage />;\n              } else\n                return (\n                  <LoginPage\n                    history={history}\n                    location={location}\n                    customLoginHook={customLoginHook}\n                  />\n                );\n            }}\n          />\n          <Route\n            path=\"/signup\"\n            render={({ history, location }) => {\n              if (isLoggedIn) {\n                history.push(\"/\");\n                // alert(\"You are already logged in.\");\n                return <NotFoundPage />;\n              } else\n                return <SignupPage history={history} location={location} />;\n            }}\n          />\n          <Route\n            path=\"/setting\"\n            render={({ history, location }) => {\n              if (!isLoggedIn) {\n                history.push(\"/\");\n                // alert(\"You are not logged in.\");\n                return <NotFoundPage />;\n              } else\n                return (\n                  <SettingPage\n                    user={user}\n                    history={history}\n                    location={location}\n                    updateSettingHook={updateSettingHook}\n                  />\n                );\n            }}\n          />\n          <Route\n            path=\"/github-login\"\n            render={({ history, location }) => {\n              if (isLoggedIn) {\n                history.push(\"/\");\n                // alert(\"You are already logged in.\");\n                return <NotFoundPage />;\n              } else\n                return (\n                  <GithubLoginPage\n                    history={history}\n                    location={location}\n                    customLoginHook={customLoginHook}\n                  />\n                );\n            }}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </main>\n      <footer>footer</footer>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}