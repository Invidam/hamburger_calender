{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/WorkList.js\",\n    _s = $RefreshSig$();\n\nimport { useRecordTime } from \"../../hooks/useRecoreTime\";\nimport { TimeRecordBtn } from \"./element/timeBtn/TimeRecordBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorkList = ({\n  workList\n}) => {\n  _s();\n\n  const [wakeTime, onClickWakeTime] = useRecordTime(\"wakeTime\");\n\n  const addWakeTimeWindow = /*#__PURE__*/_jsxDEV(TimeRecordBtn, {\n    onClick: onClickWakeTime,\n    isWake: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n\n  const [bedTime, onClickBedTime] = useRecordTime(\"bedTime\");\n\n  const addBedTimeWindow = /*#__PURE__*/_jsxDEV(TimeRecordBtn, {\n    onClick: onClickBedTime,\n    isWake: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  const makeWorkItem = workItem => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [workItem.workName, \" \", workItem.workTime, \"h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: [wakeTime ? /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", \"`$\", wakeTime.hour < 10 ? \"0\" + wakeTime.hour : wakeTime.hour, \":$\", wakeTime.minute < 10 ? \"0\" + wakeTime.minute : wakeTime.minute, \"`\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : addWakeTimeWindow, workList && workList.map(workItem => {\n      return makeWorkItem(workItem);\n    }), bedTime ? /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", \"`$\", bedTime.hour < 10 ? \"0\" + bedTime.hour : bedTime.hour, \":$\", bedTime.minute < 10 ? \"0\" + bedTime.minute : bedTime.minute, \"`\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : addBedTimeWindow]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) // </div>\n  ;\n};\n\n_s(WorkList, \"yZVagTXntq4U3DdbuzJtKN184r4=\", false, function () {\n  return [useRecordTime, useRecordTime];\n});\n\n_c = WorkList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/WorkList.js"],"names":["useRecordTime","TimeRecordBtn","WorkList","workList","wakeTime","onClickWakeTime","addWakeTimeWindow","bedTime","onClickBedTime","addBedTimeWindow","makeWorkItem","workItem","workName","workTime","hour","minute","map"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,QAA8B,iCAA9B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,eAAX,IAA8BL,aAAa,CAAC,UAAD,CAAjD;;AACA,QAAMM,iBAAiB,gBACrB,QAAC,aAAD;AAAe,IAAA,OAAO,EAAED,eAAxB;AAAyC,IAAA,MAAM,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,UADF;;AAGA,QAAM,CAACE,OAAD,EAAUC,cAAV,IAA4BR,aAAa,CAAC,SAAD,CAA/C;;AACA,QAAMS,gBAAgB,gBACpB,QAAC,aAAD;AAAe,IAAA,OAAO,EAAED,cAAxB;AAAwC,IAAA,MAAM,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,UADF;;AAGA,QAAME,YAAY,GAAIC,QAAD,IAAc;AACjC,wBACE;AAAA,iBACGA,QAAQ,CAACC,QADZ,OACuBD,QAAQ,CAACE,QADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,sBACE;AAAA,eACGT,QAAQ,gBACP;AAAA,iBACG,GADH,QAEKA,QAAQ,CAACU,IAAT,GAAgB,EAAhB,GAAqB,MAAMV,QAAQ,CAACU,IAApC,GAA2CV,QAAQ,CAACU,IAFzD,QAGGV,QAAQ,CAACW,MAAT,GAAkB,EAAlB,GAAuB,MAAMX,QAAQ,CAACW,MAAtC,GAA+CX,QAAQ,CAACW,MAH3D;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,GAOPT,iBARJ,EAUGH,QAAQ,IACPA,QAAQ,CAACa,GAAT,CAAcL,QAAD,IAAc;AACzB,aAAOD,YAAY,CAACC,QAAD,CAAnB;AACD,KAFD,CAXJ,EAcGJ,OAAO,gBACN;AAAA,iBACG,GADH,QAEKA,OAAO,CAACO,IAAR,GAAe,EAAf,GAAoB,MAAMP,OAAO,CAACO,IAAlC,GAAyCP,OAAO,CAACO,IAFtD,QAGGP,OAAO,CAACQ,MAAR,GAAiB,EAAjB,GAAsB,MAAMR,OAAO,CAACQ,MAApC,GAA6CR,OAAO,CAACQ,MAHxD;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAONN,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAyBE;AAzBF;AA2BD,CA5CM;;GAAMP,Q;UACyBF,a,EAIFA,a;;;KALvBE,Q","sourcesContent":["import { useRecordTime } from \"../../hooks/useRecoreTime\";\nimport { TimeRecordBtn } from \"./element/timeBtn/TimeRecordBtn\";\n\nexport const WorkList = ({ workList }) => {\n  const [wakeTime, onClickWakeTime] = useRecordTime(\"wakeTime\");\n  const addWakeTimeWindow = (\n    <TimeRecordBtn onClick={onClickWakeTime} isWake={true} />\n  );\n  const [bedTime, onClickBedTime] = useRecordTime(\"bedTime\");\n  const addBedTimeWindow = (\n    <TimeRecordBtn onClick={onClickBedTime} isWake={false} />\n  );\n  const makeWorkItem = (workItem) => {\n    return (\n      <li>\n        {workItem.workName} {workItem.workTime}h\n      </li>\n    );\n  };\n\n  return (\n    <ol>\n      {wakeTime ? (\n        <li>\n          {\" \"}\n          `${wakeTime.hour < 10 ? \"0\" + wakeTime.hour : wakeTime.hour}:$\n          {wakeTime.minute < 10 ? \"0\" + wakeTime.minute : wakeTime.minute}`\n        </li>\n      ) : (\n        addWakeTimeWindow\n      )}\n      {workList &&\n        workList.map((workItem) => {\n          return makeWorkItem(workItem);\n        })}\n      {bedTime ? (\n        <li>\n          {\" \"}\n          `${bedTime.hour < 10 ? \"0\" + bedTime.hour : bedTime.hour}:$\n          {bedTime.minute < 10 ? \"0\" + bedTime.minute : bedTime.minute}`\n        </li>\n      ) : (\n        addBedTimeWindow\n      )}\n    </ol>\n    // </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}