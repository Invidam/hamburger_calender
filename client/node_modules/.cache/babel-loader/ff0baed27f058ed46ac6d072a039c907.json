{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst verifyToken = async () => {\n  try {\n    if (!localStorage.getItem(\"access_token\")) throw \"access_token not exists.\";\n    const {\n      token\n    } = JSON.parse(localStorage.getItem(\"access_token\"));\n    console.log(\"local, storage's token: \", token);\n    const response = await axios.post(\"/api/jwt/verify\", {\n      token\n    });\n    console.log(\"get token: \", response.data.decode);\n    return response.data.decode;\n  } catch (error) {\n    console.error(error);\n  } // console.log(axios.post(\"/api/jwt/verify\", token));\n\n};\n\nexport const useLogin = () => {\n  _s();\n\n  const [user, setUser] = useState();\n\n  const setUserInToken = async () => {\n    const {\n      username\n    } = await verifyToken();\n    console.log(\"TOKEN INIT VALUE\", username);\n    setUser(username);\n  };\n\n  useEffect(() => {\n    setUserInToken();\n  }, []);\n  const authenticated = user != null;\n\n  const login = async ({\n    email,\n    password\n  }) => {\n    // setUser(signIn({ email, password }));\n    try {\n      const response = await axios.post(`/auth/login/notSocial`, {\n        email,\n        password\n      });\n      const {\n        access_token,\n        username\n      } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, setUser, authenticated, login, logout];\n};\n\n_s(useLogin, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useLogin.js"],"names":["axios","useEffect","useState","verifyToken","localStorage","getItem","token","JSON","parse","console","log","response","post","data","decode","error","useLogin","user","setUser","setUserInToken","username","authenticated","login","email","password","access_token","setItem","stringify","alert","logout","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAG,YAAY;AAC9B,MAAI;AACF,QAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAL,EAA2C,MAAM,0BAAN;AAC3C,UAAM;AAAEC,MAAAA;AAAF,QAAYC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAlB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,KAAxC;AACA,UAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,iBAAX,EAA8B;AAAEN,MAAAA;AAAF,KAA9B,CAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,QAAQ,CAACE,IAAT,CAAcC,MAAzC;AACA,WAAOH,QAAQ,CAACE,IAAT,CAAcC,MAArB;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD,GAX6B,CAY9B;;AACD,CAbD;;AAcA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,EAAhC;;AACA,QAAMiB,cAAc,GAAG,YAAY;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAe,MAAMjB,WAAW,EAAtC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCU,QAAhC;AACAF,IAAAA,OAAO,CAACE,QAAD,CAAP;AACD,GAJD;;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAME,aAAa,GAAGJ,IAAI,IAAI,IAA9B;;AACA,QAAMK,KAAK,GAAG,OAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AAC3C;AACA,QAAI;AACF,YAAMb,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAY,uBAAZ,EAAoC;AACzDW,QAAAA,KADyD;AAEzDC,QAAAA;AAFyD,OAApC,CAAvB;AAIA,YAAM;AAAEC,QAAAA,YAAF;AAAgBL,QAAAA;AAAhB,UAA6BT,QAAQ,CAACE,IAA5C;AACAT,MAAAA,YAAY,CAACsB,OAAb,CAAqB,cAArB,EAAqCnB,IAAI,CAACoB,SAAL,CAAeF,YAAf,CAArC;AACAP,MAAAA,OAAO,CAACE,QAAD,CAAP;AACD,KARD,CAQE,OAAOL,KAAP,EAAc;AACda,MAAAA,KAAK,CAACb,KAAD,CAAL;AACD;AACF,GAbD;;AAcA,QAAMc,MAAM,GAAG,MAAM;AACnBX,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAd,IAAAA,YAAY,CAAC0B,UAAb,CAAwB,cAAxB;AACD,GAHD;;AAKA,SAAO,CAACb,IAAD,EAAOC,OAAP,EAAgBG,aAAhB,EAA+BC,KAA/B,EAAsCO,MAAtC,CAAP;AACD,CA/BM;;GAAMb,Q","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst verifyToken = async () => {\n  try {\n    if (!localStorage.getItem(\"access_token\")) throw \"access_token not exists.\";\n    const { token } = JSON.parse(localStorage.getItem(\"access_token\"));\n\n    console.log(\"local, storage's token: \", token);\n    const response = await axios.post(\"/api/jwt/verify\", { token });\n    console.log(\"get token: \", response.data.decode);\n    return response.data.decode;\n  } catch (error) {\n    console.error(error);\n  }\n  // console.log(axios.post(\"/api/jwt/verify\", token));\n};\nexport const useLogin = () => {\n  const [user, setUser] = useState();\n  const setUserInToken = async () => {\n    const { username } = await verifyToken();\n    console.log(\"TOKEN INIT VALUE\", username);\n    setUser(username);\n  };\n  useEffect(() => {\n    setUserInToken();\n  }, []);\n  const authenticated = user != null;\n  const login = async ({ email, password }) => {\n    // setUser(signIn({ email, password }));\n    try {\n      const response = await axios.post(`/auth/login/notSocial`, {\n        email,\n        password,\n      });\n      const { access_token, username } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, setUser, authenticated, login, logout];\n};\n"]},"metadata":{},"sourceType":"module"}