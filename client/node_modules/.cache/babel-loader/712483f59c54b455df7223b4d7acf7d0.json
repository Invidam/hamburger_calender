{"ast":null,"code":"import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Modal from\"react-modal\";import{useState}from\"react\";import{AddWorkWindow}from\"../../window/work/AddWorkWindow\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";Modal.setAppElement(\"#root\");var customStyles={content:{// top: \"40vh\",\ntop:\"50%\",left:\"50%\",right:\"auto\",bottom:\"auto\",marginRight:\"-50%\",transform:\"translate(-50%, -50%)\",backgroundColor:\"rgb(245, 235, 220)\",border:\"none\"},overlay:{position:\"fixed\",top:0,left:0,right:0,bottom:0,backgroundColor:\"rgba(0,0,0,0.4)\"}};export var EmptyWork=function EmptyWork(_ref){var setWork=_ref.setWork;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),addModalIsOpen=_useState2[0],setAddModalIsOpen=_useState2[1];var openAddModal=function openAddModal(){return setAddModalIsOpen(true);};var closeAddModal=function closeAddModal(){return setAddModalIsOpen(false);};var addWorkWindow=/*#__PURE__*/_jsx(AddWorkWindow,{setWork:setWork,callback:closeAddModal});var addModal=/*#__PURE__*/_jsxs(Modal,{isOpen:addModalIsOpen,onRequestClose:closeAddModal,style:customStyles,contentLabel:\"Example Modal\",overlayClassName:\"Overlay\",children:[addWorkWindow,/*#__PURE__*/_jsx(\"button\",{className:\"modalWindow__close modalWindow__btn\",onClick:closeAddModal,children:\"CLOSE\"})]});console.log(\"[EMPTY] WORK\");return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"workList__work empty-element workList__element-empty\",onClick:openAddModal,children:\"Add your work\"}),addModal]});};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/work/EmptyWork.js"],"names":["Modal","useState","AddWorkWindow","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","overlay","position","EmptyWork","setWork","addModalIsOpen","setAddModalIsOpen","openAddModal","closeAddModal","addWorkWindow","addModal","console","log"],"mappings":"uJAAA,MAAOA,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,aAAT,KAA8B,iCAA9B,C,wFACAF,KAAK,CAACG,aAAN,CAAoB,OAApB,EACA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAE,CACP;AACAC,GAAG,CAAE,KAFE,CAGPC,IAAI,CAAE,KAHC,CAIPC,KAAK,CAAE,MAJA,CAKPC,MAAM,CAAE,MALD,CAMPC,WAAW,CAAE,MANN,CAOPC,SAAS,CAAE,uBAPJ,CAQPC,eAAe,CAAE,oBARV,CASPC,MAAM,CAAE,MATD,CADU,CAYnBC,OAAO,CAAE,CACPC,QAAQ,CAAE,OADH,CAEPT,GAAG,CAAE,CAFE,CAGPC,IAAI,CAAE,CAHC,CAIPC,KAAK,CAAE,CAJA,CAKPC,MAAM,CAAE,CALD,CAMPG,eAAe,CAAE,iBANV,CAZU,CAArB,CAqBA,MAAO,IAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACxC,cAA4ChB,QAAQ,CAAC,KAAD,CAApD,wCAAOiB,cAAP,eAAuBC,iBAAvB,eACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAMD,CAAAA,iBAAiB,CAAC,IAAD,CAAvB,EAArB,CACA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAMF,CAAAA,iBAAiB,CAAC,KAAD,CAAvB,EAAtB,CACA,GAAMG,CAAAA,aAAa,cACjB,KAAC,aAAD,EAAe,OAAO,CAAEL,OAAxB,CAAiC,QAAQ,CAAEI,aAA3C,EADF,CAGA,GAAME,CAAAA,QAAQ,cACZ,MAAC,KAAD,EACE,MAAM,CAAEL,cADV,CAEE,cAAc,CAAEG,aAFlB,CAGE,KAAK,CAAEjB,YAHT,CAIE,YAAY,CAAC,eAJf,CAKE,gBAAgB,CAAC,SALnB,WAOGkB,aAPH,cAQE,eACE,SAAS,CAAC,qCADZ,CAEE,OAAO,CAAED,aAFX,mBARF,GADF,CAiBAG,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,mBACE,oCACE,WACE,SAAS,CAAE,sDADb,CAEE,OAAO,CAAEL,YAFX,2BADF,CAOGG,QAPH,GADF,CAWD,CApCM","sourcesContent":["import Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport { AddWorkWindow } from \"../../window/work/AddWorkWindow\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\nexport const EmptyWork = ({ setWork }) => {\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n  const openAddModal = () => setAddModalIsOpen(true);\n  const closeAddModal = () => setAddModalIsOpen(false);\n  const addWorkWindow = (\n    <AddWorkWindow setWork={setWork} callback={closeAddModal} />\n  );\n  const addModal = (\n    <Modal\n      isOpen={addModalIsOpen}\n      onRequestClose={closeAddModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      overlayClassName=\"Overlay\"\n    >\n      {addWorkWindow}\n      <button\n        className=\"modalWindow__close modalWindow__btn\"\n        onClick={closeAddModal}\n      >\n        CLOSE\n      </button>\n    </Modal>\n  );\n  console.log(\"[EMPTY] WORK\");\n  return (\n    <div>\n      <li\n        className={\"workList__work empty-element workList__element-empty\"}\n        onClick={openAddModal}\n      >\n        Add your work\n      </li>\n      {addModal}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}