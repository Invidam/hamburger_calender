{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/pages/registerPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../../css/pages/loginPage.css\";\nimport { useAttemptLogin } from \"../../hooks/user/useAttemptLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterPage = ({\n  customLoginHook\n}) => {\n  _s();\n\n  const [user, setUser, authenticated, login, logout] = customLoginHook;\n  const {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    handleSubmitNotSocial,\n    handleAttemptGithubLogin\n  } = useAttemptLogin(login);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      type: \"email\",\n      placeholder: \"Input Email Address\",\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setEmail(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: password,\n      type: \"password\",\n      placeholder: \"Input Password\",\n      onChange: ({\n        target: {\n          value\n        }\n      }) => setPassword(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitNotSocial,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: handleAttemptGithubLogin(),\n      children: \"GITHUB LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"l32G6N669w+QVLa0JlAgW1wEK2M=\", false, function () {\n  return [useAttemptLogin];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/pages/registerPage.js"],"names":["useState","useAttemptLogin","RegisterPage","customLoginHook","user","setUser","authenticated","login","logout","email","password","setEmail","setPassword","handleSubmitNotSocial","handleAttemptGithubLogin","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,+BAAP;AACA,SAASC,eAAT,QAAgC,kCAAhC;;AACA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAAA;;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,EAAgBC,aAAhB,EAA+BC,KAA/B,EAAsCC,MAAtC,IAAgDL,eAAtD;AAEA,QAAM;AACJM,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,qBALI;AAMJC,IAAAA;AANI,MAOFb,eAAe,CAACM,KAAD,CAPnB;AAQA,sBACE;AAAA,4BACE;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,qBAHd;AAIE,MAAA,QAAQ,EAAE,CAAC;AAAEM,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAD,KAA2BL,QAAQ,CAACK,KAAD;AAJ/C;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,KAAK,EAAEN,QADT;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,QAAQ,EAAE,CAAC;AAAEK,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAD,KAA2BJ,WAAW,CAACI,KAAD;AAJlD;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE;AAAQ,MAAA,OAAO,EAAEH,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAG,MAAA,IAAI,EAAEC,wBAAwB,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7BM;;GAAMZ,Y;UAUPD,e;;;KAVOC,Y","sourcesContent":["import { useState } from \"react\";\nimport \"../../css/pages/loginPage.css\";\nimport { useAttemptLogin } from \"../../hooks/user/useAttemptLogin\";\nexport const RegisterPage = ({ customLoginHook }) => {\n  const [user, setUser, authenticated, login, logout] = customLoginHook;\n\n  const {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    handleSubmitNotSocial,\n    handleAttemptGithubLogin,\n  } = useAttemptLogin(login);\n  return (\n    <section>\n      <input\n        value={email}\n        type=\"email\"\n        placeholder=\"Input Email Address\"\n        onChange={({ target: { value } }) => setEmail(value)}\n      />\n      <input\n        value={password}\n        type=\"password\"\n        placeholder=\"Input Password\"\n        onChange={({ target: { value } }) => setPassword(value)}\n      />\n      <button onClick={handleSubmitNotSocial}>Login</button>\n      <a href={handleAttemptGithubLogin()}>GITHUB LOGIN</a>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}