{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/calendar/CalendarTemplate.js\",\n    _s = $RefreshSig$();\n\nimport Calendar from \"react-calendar\";\nimport { changeFormatYYYYMMDD, getToday, UTCtoKTC } from \"../../tools/time\";\nimport \"../../css/calendar.css\";\nimport axios from \"axios\";\nimport { useDateInfo } from \"../../hooks/calendar/useDateInfo\";\nimport { LoadingElement } from \"../Loading\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CalendarTemplate = ({\n  user,\n  updateDateHook\n}) => {\n  _s();\n\n  const [date, onUpdateDate] = updateDateHook;\n  const [mark, isDateInfoLoad, setActiveDate] = useDateInfo(user, date); // console.log(\"DATE INFO: \", dateInfo);\n  // const mark = dateInfo[0];\n\n  console.log(\"[Calendar]\"); // return isDateInfoLoad ? (\n  //   <article>\n  //     {\" \"}\n  //     <LoadingElement text={\"Calendar Loading\"} />\n  //   </article>\n  // ) :\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      className: \"caldendar\",\n      onChange: value => {\n        console.log(\"CHANGE EVENT\", value);\n        console.log(\"value:\", value); // onUpdateDate(value);\n      },\n      value: new Date(date),\n      locale: \"en\",\n      calendarType: \"US\",\n      onClickDay: (date, event) => {\n        console.log(\"CLICK EVENT\", date);\n        onUpdateDate(date);\n      },\n      onActiveStartDateChange: ({\n        activeStartDate,\n        value,\n        view\n      }) => {\n        console.log(\"Changed view to: \", activeStartDate, value, view);\n        setActiveDate(changeFormatYYYYMMDD(activeStartDate));\n      },\n      tileClassName: ({\n        date,\n        view\n      }) => {\n        if (mark && mark.find(markedDate => markedDate === changeFormatYYYYMMDD(date))) return \"highlight\";\n      } //DB에 있는 날짜는 체크표시 해야함.\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarTemplate, \"RkCylyvdMQiEMHrslASaeA7gSXc=\", false, function () {\n  return [useDateInfo];\n});\n\n_c = CalendarTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarTemplate\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/calendar/CalendarTemplate.js"],"names":["Calendar","changeFormatYYYYMMDD","getToday","UTCtoKTC","axios","useDateInfo","LoadingElement","LocalStroage","CalendarTemplate","user","updateDateHook","date","onUpdateDate","mark","isDateInfoLoad","setActiveDate","console","log","value","Date","event","activeStartDate","view","find","markedDate"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAASC,oBAAT,EAA+BC,QAA/B,EAAyCC,QAAzC,QAAyD,kBAAzD;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA8B;AAAA;;AAC5D,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBF,cAA7B;AACA,QAAM,CAACG,IAAD,EAAOC,cAAP,EAAuBC,aAAvB,IAAwCV,WAAW,CAACI,IAAD,EAAOE,IAAP,CAAzD,CAF4D,CAG5D;AACA;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAL4D,CAM5D;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBF,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,KAA5B;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,KAAtB,EAFmB,CAGnB;AACD,OANH;AAOE,MAAA,KAAK,EAAE,IAAIC,IAAJ,CAASR,IAAT,CAPT;AAQE,MAAA,MAAM,EAAE,IARV;AASE,MAAA,YAAY,EAAE,IAThB;AAUE,MAAA,UAAU,EAAE,CAACA,IAAD,EAAOS,KAAP,KAAiB;AAC3BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,IAA3B;AACAC,QAAAA,YAAY,CAACD,IAAD,CAAZ;AACD,OAbH;AAcE,MAAA,uBAAuB,EAAE,CAAC;AAAEU,QAAAA,eAAF;AAAmBH,QAAAA,KAAnB;AAA0BI,QAAAA;AAA1B,OAAD,KAAsC;AAC7DN,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCI,eAAjC,EAAkDH,KAAlD,EAAyDI,IAAzD;AAEAP,QAAAA,aAAa,CAACd,oBAAoB,CAACoB,eAAD,CAArB,CAAb;AACD,OAlBH;AAmBE,MAAA,aAAa,EAAE,CAAC;AAAEV,QAAAA,IAAF;AAAQW,QAAAA;AAAR,OAAD,KAAoB;AACjC,YACET,IAAI,IACJA,IAAI,CAACU,IAAL,CAAWC,UAAD,IAAgBA,UAAU,KAAKvB,oBAAoB,CAACU,IAAD,CAA7D,CAFF,EAIE,OAAO,WAAP;AACH,OAzBH,CA0BE;;AA1BF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA5CM;;GAAMH,gB;UAEmCH,W;;;KAFnCG,gB","sourcesContent":["import Calendar from \"react-calendar\";\nimport { changeFormatYYYYMMDD, getToday, UTCtoKTC } from \"../../tools/time\";\nimport \"../../css/calendar.css\";\nimport axios from \"axios\";\nimport { useDateInfo } from \"../../hooks/calendar/useDateInfo\";\nimport { LoadingElement } from \"../Loading\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nexport const CalendarTemplate = ({ user, updateDateHook }) => {\n  const [date, onUpdateDate] = updateDateHook;\n  const [mark, isDateInfoLoad, setActiveDate] = useDateInfo(user, date);\n  // console.log(\"DATE INFO: \", dateInfo);\n  // const mark = dateInfo[0];\n  console.log(\"[Calendar]\");\n  // return isDateInfoLoad ? (\n  //   <article>\n  //     {\" \"}\n  //     <LoadingElement text={\"Calendar Loading\"} />\n  //   </article>\n  // ) :\n  return (\n    <article>\n      <Calendar\n        className=\"caldendar\"\n        onChange={(value) => {\n          console.log(\"CHANGE EVENT\", value);\n          console.log(\"value:\", value);\n          // onUpdateDate(value);\n        }}\n        value={new Date(date)}\n        locale={\"en\"}\n        calendarType={\"US\"}\n        onClickDay={(date, event) => {\n          console.log(\"CLICK EVENT\", date);\n          onUpdateDate(date);\n        }}\n        onActiveStartDateChange={({ activeStartDate, value, view }) => {\n          console.log(\"Changed view to: \", activeStartDate, value, view);\n\n          setActiveDate(changeFormatYYYYMMDD(activeStartDate));\n        }}\n        tileClassName={({ date, view }) => {\n          if (\n            mark &&\n            mark.find((markedDate) => markedDate === changeFormatYYYYMMDD(date))\n          )\n            return \"highlight\";\n        }}\n        //DB에 있는 날짜는 체크표시 해야함.\n      />\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}