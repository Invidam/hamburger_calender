{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/tabs/IngredientList.js\",\n    _s = $RefreshSig$();\n\nimport \"../../../../css/ingredientList.css\";\nimport { useTabs } from \"../../../../hooks/useTabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeList = new Map();\nconst cheezeTheme = {\n  backgroundColor: \"rgba(255, 166, 0, 1)\"\n};\nconst meetTheme = {\n  backgroundColor: \"rgba(69, 1, 1, 1)\"\n};\nconst vegetableTheme = {\n  backgroundColor: \"rgba(50, 199, 4, 1)\"\n};\n\nconst add = () => {\n  console.log(\"1\");\n};\n\nconst tomatoTheme = {\n  backgroundColor: \"rgba(227, 26, 0, 1)\"\n};\nthemeList.set(\"tomato\", tomatoTheme);\nthemeList.set(\"cheeze\", cheezeTheme);\nthemeList.set(\"meet\", meetTheme);\nthemeList.set(\"vegetable\", vegetableTheme);\nexport const IngredientEx = ({\n  ingredienName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: add,\n    style: themeList[ingredienName],\n    children: [\"test li\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = IngredientEx;\nexport const IngredientList = ({\n  onSubmitColor\n}) => {\n  _s();\n\n  const themeArray = [...themeList];\n  let isFirst = true;\n  const [currentItem, currentIdx, setCurrentIndex] = useTabs(0, themeArray);\n\n  const onClick = (event, style, idx) => {\n    event.preventDefault();\n    console.log(event.target, style.backgroundColor);\n    setCurrentIndex(idx);\n    onSubmitColor(style.backgroundColor); // event.target.workColor.value = style.backgroundColor;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient__list\",\n    children: [...themeList].map(([key, value], idx) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: idx === currentIdx ? \"ingredient__item ingredient__item-focus\" : \"ingredient__item\",\n        onClick: event => onClick(event, value, idx),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient__color\",\n          style: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ingredient__title\",\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientList, \"zONdyc0JOfU16TNQWE7Tw/wkjIg=\", false, function () {\n  return [useTabs];\n});\n\n_c2 = IngredientList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IngredientEx\");\n$RefreshReg$(_c2, \"IngredientList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/tabs/IngredientList.js"],"names":["useTabs","themeList","Map","cheezeTheme","backgroundColor","meetTheme","vegetableTheme","add","console","log","tomatoTheme","set","IngredientEx","ingredienName","IngredientList","onSubmitColor","themeArray","isFirst","currentItem","currentIdx","setCurrentIndex","onClick","event","style","idx","preventDefault","target","map","key","value"],"mappings":";;;AAAA,OAAO,oCAAP;AACA,SAASA,OAAT,QAAwB,2BAAxB;;AACA,MAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,eAAe,EAAE;AADC,CAApB;AAGA,MAAMC,SAAS,GAAG;AAChBD,EAAAA,eAAe,EAAE;AADD,CAAlB;AAIA,MAAME,cAAc,GAAG;AACrBF,EAAAA,eAAe,EAAE;AADI,CAAvB;;AAGA,MAAMG,GAAG,GAAG,MAAM;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG;AAClBN,EAAAA,eAAe,EAAE;AADC,CAApB;AAGAH,SAAS,CAACU,GAAV,CAAc,QAAd,EAAwBD,WAAxB;AACAT,SAAS,CAACU,GAAV,CAAc,QAAd,EAAwBR,WAAxB;AACAF,SAAS,CAACU,GAAV,CAAc,MAAd,EAAsBN,SAAtB;AACAJ,SAAS,CAACU,GAAV,CAAc,WAAd,EAA2BL,cAA3B;AACA,OAAO,MAAMM,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACjD,sBACE;AAAI,IAAA,OAAO,EAAEN,GAAb;AAAkB,IAAA,KAAK,EAAEN,SAAS,CAACY,aAAD,CAAlC;AAAA,0BACU,GADV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CANM;KAAMD,Y;AAQb,OAAO,MAAME,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AACnD,QAAMC,UAAU,GAAG,CAAC,GAAGf,SAAJ,CAAnB;AACA,MAAIgB,OAAO,GAAG,IAAd;AACA,QAAM,CAACC,WAAD,EAAcC,UAAd,EAA0BC,eAA1B,IAA6CpB,OAAO,CAAC,CAAD,EAAIgB,UAAJ,CAA1D;;AACA,QAAMK,OAAO,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,KAAuB;AACrCF,IAAAA,KAAK,CAACG,cAAN;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACI,MAAlB,EAA0BH,KAAK,CAACnB,eAAhC;AACAgB,IAAAA,eAAe,CAACI,GAAD,CAAf;AACAT,IAAAA,aAAa,CAACQ,KAAK,CAACnB,eAAP,CAAb,CAJqC,CAKrC;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACG,CAAC,GAAGH,SAAJ,EAAe0B,GAAf,CAAmB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,EAAeL,GAAf,KAAuB;AACzC,0BACE;AACE,QAAA,SAAS,EACPA,GAAG,KAAKL,UAAR,GACI,yCADJ,GAEI,kBAJR;AAME,QAAA,OAAO,EAAGG,KAAD,IAAWD,OAAO,CAACC,KAAD,EAAQO,KAAR,EAAeL,GAAf,CAN7B;AAAA,gCASE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAmC,UAAA,KAAK,EAAEK;AAA1C;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA,oBAAqCD;AAArC;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAOOJ,GAPP;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAfA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA/BM;;GAAMV,c;UAGwCd,O;;;MAHxCc,c","sourcesContent":["import \"../../../../css/ingredientList.css\";\nimport { useTabs } from \"../../../../hooks/useTabs\";\nconst themeList = new Map();\nconst cheezeTheme = {\n  backgroundColor: \"rgba(255, 166, 0, 1)\",\n};\nconst meetTheme = {\n  backgroundColor: \"rgba(69, 1, 1, 1)\",\n};\n\nconst vegetableTheme = {\n  backgroundColor: \"rgba(50, 199, 4, 1)\",\n};\nconst add = () => {\n  console.log(\"1\");\n};\n\nconst tomatoTheme = {\n  backgroundColor: \"rgba(227, 26, 0, 1)\",\n};\nthemeList.set(\"tomato\", tomatoTheme);\nthemeList.set(\"cheeze\", cheezeTheme);\nthemeList.set(\"meet\", meetTheme);\nthemeList.set(\"vegetable\", vegetableTheme);\nexport const IngredientEx = ({ ingredienName }) => {\n  return (\n    <li onClick={add} style={themeList[ingredienName]}>\n      test li{\" \"}\n    </li>\n  );\n};\n\nexport const IngredientList = ({ onSubmitColor }) => {\n  const themeArray = [...themeList];\n  let isFirst = true;\n  const [currentItem, currentIdx, setCurrentIndex] = useTabs(0, themeArray);\n  const onClick = (event, style, idx) => {\n    event.preventDefault();\n    console.log(event.target, style.backgroundColor);\n    setCurrentIndex(idx);\n    onSubmitColor(style.backgroundColor);\n    // event.target.workColor.value = style.backgroundColor;\n  };\n  return (\n    <div className=\"ingredient__list\">\n      {[...themeList].map(([key, value], idx) => {\n        return (\n          <button\n            className={\n              idx === currentIdx\n                ? \"ingredient__item ingredient__item-focus\"\n                : \"ingredient__item\"\n            }\n            onClick={(event) => onClick(event, value, idx)}\n            key={idx}\n          >\n            <div className=\"ingredient__color\" style={value}></div>\n            <span className=\"ingredient__title\">{key}</span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}