{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/axiosSetting\";\nimport { getToday } from \"../../tools/time\";\n\nconst verifyToken = async () => {\n  const {\n    token\n  } = JSON.parse(localStorage.getItem(\"access_token\"));\n  const response = await API.post(\"/api/jwt/verify\", {\n    token\n  });\n  return response.data.decode;\n};\n\nexport const useLogin = () => {\n  _s();\n\n  const [user, setUser] = useState();\n\n  const setUserInToken = async () => {\n    try {\n      if (!localStorage.getItem(\"access_token\") || localStorage.getItem(\"access_token\") === \"undefined\") {\n        localStorage.setItem(\"access_token\", \"undefined\");\n        throw new Error(\"access_token not exists.\");\n      }\n\n      const {\n        username\n      } = await verifyToken();\n      setUser(username);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  const setDataInLocal = user => {\n    const date = getToday();\n\n    if (localStorage.getItem(\"wakeTime\")) {\n      const wakeTime = JSON.parse(localStorage.getItem(\"wakeTime\"));\n      console.log(\"TO set Data: waketime\", wakeTime);\n      API.post(`/api/${user}/${date}/worklist/record-time/wakeTime`, {\n        value: wakeTime\n      });\n      localStorage.removeItem(\"wakeTime\");\n    }\n\n    if (localStorage.getItem(\"bedTime\")) {\n      const bedTime = JSON.parse(localStorage.getItem(\"bedTime\"));\n      console.log(\"TO set Data: bedTime\", bedTime);\n      API.post(`/api/${user}/${date}/worklist/record-time/bedTime`, {\n        value: bedTime\n      });\n      localStorage.removeItem(\"bedTime\");\n    }\n\n    if (localStorage.getItem(\"workList\")) {\n      const workList = JSON.parse(localStorage.getItem(\"workList\"));\n      console.log(\"TO set Data: waketime\", workList);\n      API.post(`/api/${user}/${date}/worklist/record-time/workList`, {\n        value: workList\n      });\n      localStorage.removeItem(\"workList\");\n    }\n  };\n\n  useEffect(() => {\n    setUserInToken();\n  }, [user]);\n  const authenticated = user != null;\n\n  const login = async (userInfo, socialType) => {\n    // setUser(signIn({ email, password }));\n    try {\n      const response = await API.post(`/auth/login/${socialType}`, {\n        userInfo\n      });\n      const {\n        access_token,\n        username\n      } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n      setDataInLocal(username);\n    } catch (error) {\n      console.log(\"WHY NOT ERR\");\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, setUser, authenticated, login, logout];\n};\n\n_s(useLogin, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useLogin.js"],"names":["useEffect","useState","API","getToday","verifyToken","token","JSON","parse","localStorage","getItem","response","post","data","decode","useLogin","user","setUser","setUserInToken","setItem","Error","username","error","console","warn","setDataInLocal","date","wakeTime","log","value","removeItem","bedTime","workList","authenticated","login","userInfo","socialType","access_token","stringify","logout"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/axiosSetting\";\nimport { getToday } from \"../../tools/time\";\n\nconst verifyToken = async () => {\n  const { token } = JSON.parse(localStorage.getItem(\"access_token\"));\n  const response = await API.post(\"/api/jwt/verify\", { token });\n  return response.data.decode;\n};\n\nexport const useLogin = () => {\n  const [user, setUser] = useState();\n  const setUserInToken = async () => {\n    try {\n      if (\n        !localStorage.getItem(\"access_token\") ||\n        localStorage.getItem(\"access_token\") === \"undefined\"\n      ) {\n        localStorage.setItem(\"access_token\", \"undefined\");\n        throw new Error(\"access_token not exists.\");\n      }\n      const { username } = await verifyToken();\n      setUser(username);\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n  const setDataInLocal = (user) => {\n    const date = getToday();\n    if (localStorage.getItem(\"wakeTime\")) {\n      const wakeTime = JSON.parse(localStorage.getItem(\"wakeTime\"));\n      console.log(\"TO set Data: waketime\", wakeTime);\n      API.post(`/api/${user}/${date}/worklist/record-time/wakeTime`, {\n        value: wakeTime,\n      });\n      localStorage.removeItem(\"wakeTime\");\n    }\n    if (localStorage.getItem(\"bedTime\")) {\n      const bedTime = JSON.parse(localStorage.getItem(\"bedTime\"));\n      console.log(\"TO set Data: bedTime\", bedTime);\n      API.post(`/api/${user}/${date}/worklist/record-time/bedTime`, {\n        value: bedTime,\n      });\n      localStorage.removeItem(\"bedTime\");\n    }\n    if (localStorage.getItem(\"workList\")) {\n      const workList = JSON.parse(localStorage.getItem(\"workList\"));\n      console.log(\"TO set Data: waketime\", workList);\n      API.post(`/api/${user}/${date}/worklist/record-time/workList`, {\n        value: workList,\n      });\n      localStorage.removeItem(\"workList\");\n    }\n  };\n  useEffect(() => {\n    setUserInToken();\n  }, [user]);\n  const authenticated = user != null;\n  const login = async (userInfo, socialType) => {\n    // setUser(signIn({ email, password }));\n    try {\n      const response = await API.post(`/auth/login/${socialType}`, {\n        userInfo,\n      });\n      const { access_token, username } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n      setDataInLocal(username);\n    } catch (error) {\n      console.log(\"WHY NOT ERR\");\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, setUser, authenticated, login, logout];\n};\n"]},"metadata":{},"sourceType":"module"}