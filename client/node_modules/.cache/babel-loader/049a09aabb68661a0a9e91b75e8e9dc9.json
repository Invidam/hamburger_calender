{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{API}from\"../../tools/API\";var cancel=false;export var useDateInfo=function useDateInfo(user,date){var _useState=useState(),_useState2=_slicedToArray(_useState,2),dateInfo=_useState2[0],setDateInfo=_useState2[1];// const [activeDate, setActiveDate] = useState(undefined);\n// const [isDateInfoLoad, setLoad] = useState(true);\nvar getUserInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(nextDate){var data,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log(\"info, CANCEL?\",cancel);if(nextDate){_context.next=4;break;}return _context.abrupt(\"return\");case 4:if(!cancel){_context.next=6;break;}return _context.abrupt(\"return\");case 6:if(!user){_context.next=17;break;}_context.next=9;return API.workList(user,nextDate).dataInfo();case 9:data=_context.sent;if(data===null||data===void 0?void 0:data.data){_context.next=12;break;}throw new Error(\"Cannot found Your Work List\");case 12:response=data.data;console.log(\"USER INFO SETTING STRAT\",nextDate,response);setDateInfo(response);_context.next=17;break;case 17:_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](0);// setDateInfo();\nalert(_context.t0);case 22:case\"end\":return _context.stop();}}},_callee,null,[[0,19]]);}));return function getUserInfo(_x){return _ref.apply(this,arguments);};}();useEffect(function(){console.log(\"DATE INFO GET\",user,date);getUserInfo(date);return function(){return cancel=true;};},[user,date]);return[dateInfo,getUserInfo];};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/hooks/calendar/useDateInfo.js"],"names":["useEffect","useState","API","cancel","useDateInfo","user","date","dateInfo","setDateInfo","getUserInfo","nextDate","console","log","workList","dataInfo","data","Error","response","alert"],"mappings":"udAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,GAAIC,CAAAA,MAAM,CAAG,KAAb,CACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAOC,IAAP,CAAgB,CACzC,cAAgCL,QAAQ,EAAxC,wCAAOM,QAAP,eAAiBC,WAAjB,eAEA;AACA;AAEA,GAAMC,CAAAA,WAAW,0FAAG,iBAAOC,QAAP,oJAEhBC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BT,MAA7B,EAFgB,GAGXO,QAHW,qEAIZP,MAJY,qEAMZE,IANY,gDAQKH,CAAAA,GAAG,CAACW,QAAJ,CAAaR,IAAb,CAAmBK,QAAnB,EAA6BI,QAA7B,EARL,QAQRC,IARQ,kBAUTA,IAVS,SAUTA,IAVS,iBAUTA,IAAI,CAAEA,IAVG,+BAUS,IAAIC,CAAAA,KAAJ,CAAU,6BAAV,CAVT,SAWRC,QAXQ,CAWGF,IAAI,CAACA,IAXR,CAYdJ,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCF,QAAvC,CAAiDO,QAAjD,EACAT,WAAW,CAACS,QAAD,CAAX,CAbc,gHAkBhB;AACAC,KAAK,aAAL,CAnBgB,qEAAH,kBAAXT,CAAAA,WAAW,4CAAjB,CAsBAT,SAAS,CAAC,UAAM,CACdW,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BP,IAA7B,CAAmCC,IAAnC,EACAG,WAAW,CAACH,IAAD,CAAX,CAEA,MAAO,kBAAOH,CAAAA,MAAM,CAAG,IAAhB,EAAP,CACD,CALQ,CAKN,CAACE,IAAD,CAAOC,IAAP,CALM,CAAT,CAMA,MAAO,CAACC,QAAD,CAAWE,WAAX,CAAP,CACD,CAnCM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\nlet cancel = false;\nexport const useDateInfo = (user, date) => {\n  const [dateInfo, setDateInfo] = useState();\n\n  // const [activeDate, setActiveDate] = useState(undefined);\n  // const [isDateInfoLoad, setLoad] = useState(true);\n\n  const getUserInfo = async (nextDate) => {\n    try {\n      console.log(\"info, CANCEL?\", cancel);\n      if (!nextDate) return;\n      if (cancel) return;\n      // console.log(\"info, NOT CANCEL\");\n      if (user) {\n        // setLoad(true);\n        const data = await API.workList(user, nextDate).dataInfo();\n        // setLoad(false);\n        if (!data?.data) throw new Error(\"Cannot found Your Work List\");\n        const response = data.data;\n        console.log(\"USER INFO SETTING STRAT\", nextDate, response);\n        setDateInfo(response);\n      } else {\n        // setDateInfo();\n      }\n    } catch (error) {\n      // setDateInfo();\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"DATE INFO GET\", user, date);\n    getUserInfo(date);\n\n    return () => (cancel = true);\n  }, [user, date]);\n  return [dateInfo, getUserInfo];\n};\n"]},"metadata":{},"sourceType":"module"}