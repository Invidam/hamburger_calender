{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\n// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useRecordTime } from \"../../hooks/workList/time/useRecordTime\";\nimport { useWorkList } from \"../../hooks/workList/work/useWorkList\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = ({\n  user,\n  updateDateHook,\n  targetTimeObj\n}) => {\n  _s();\n\n  // const [date, setDate] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  // const updateDateHook = useState(new Date());\n  const date = changeFormatYYYYMMDD(updateDateHook[0], false);\n  const wakeTimeHook = useRecordTime(\"wakeTime\", user, date);\n  const bedTimeHook = useRecordTime(\"bedTime\", user, date);\n  const workListHook = useWorkList(user, date);\n\n  const isLoading = () => wakeTimeHook[0] === \"Loading\" || bedTimeHook[0] === \"Loading\" || workListHook[0] === \"Loading\";\n\n  console.log(\"[HOME] , \", user, date, updateDateHook[0]);\n  console.log(\"HOME, LOADING CHECK\", \"WAKE\", wakeTimeHook[0], \"BED\", bedTimeHook[0], \"WORK\", workListHook[0], isLoading());\n  return isLoading() ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"LOADING\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n        user: user,\n        date: date,\n        targetTimeObj: targetTimeObj,\n        wakeTimeHook: wakeTimeHook,\n        bedTimeHook: bedTimeHook,\n        workListHook: workListHook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"mCaim5q7Uiq/M3oz2Jykx1BMgMo=\", false, function () {\n  return [useRecordTime, useRecordTime, useWorkList];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/pages/HomePage.js"],"names":["WorkListTemplate","CalendarTemplate","useRecordTime","useWorkList","changeFormatYYYYMMDD","HomePage","user","updateDateHook","targetTimeObj","date","wakeTimeHook","bedTimeHook","workListHook","isLoading","console","log"],"mappings":";;;AAAA;AACA;AACA,SAASA,gBAAT,QAAiC,8BAAjC;AACA,OAAO,wBAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA;AAAxB,CAAD,KAA6C;AAAA;;AACnE;AACA;AACA;AACA;AACA;AACA,QAAMC,IAAI,GAAGL,oBAAoB,CAACG,cAAc,CAAC,CAAD,CAAf,EAAoB,KAApB,CAAjC;AACA,QAAMG,YAAY,GAAGR,aAAa,CAAC,UAAD,EAAaI,IAAb,EAAmBG,IAAnB,CAAlC;AACA,QAAME,WAAW,GAAGT,aAAa,CAAC,SAAD,EAAYI,IAAZ,EAAkBG,IAAlB,CAAjC;AACA,QAAMG,YAAY,GAAGT,WAAW,CAACG,IAAD,EAAOG,IAAP,CAAhC;;AACA,QAAMI,SAAS,GAAG,MAChBH,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAApB,IACAC,WAAW,CAAC,CAAD,CAAX,KAAmB,SADnB,IAEAC,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAHtB;;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,IAAzB,EAA+BG,IAA/B,EAAqCF,cAAc,CAAC,CAAD,CAAnD;AACAO,EAAAA,OAAO,CAACC,GAAR,CACE,qBADF,EAEE,MAFF,EAGEL,YAAY,CAAC,CAAD,CAHd,EAIE,KAJF,EAKEC,WAAW,CAAC,CAAD,CALb,EAME,MANF,EAOEC,YAAY,CAAC,CAAD,CAPd,EAQEC,SAAS,EARX;AAUA,SAAOA,SAAS,kBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADc,gBAGd;AAAA,2BAWE;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAEP,IADR;AAEE,QAAA,IAAI,EAAEG,IAFR;AAGE,QAAA,aAAa,EAAED,aAHjB;AAIE,QAAA,YAAY,EAAEE,YAJhB;AAKE,QAAA,WAAW,EAAEC,WALf;AAME,QAAA,YAAY,EAAEC;AANhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,UAHF;AA0BD,CAnDM;;GAAMP,Q;UAOUH,a,EACDA,a,EACCC,W;;;KATVE,Q","sourcesContent":["// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useRecordTime } from \"../../hooks/workList/time/useRecordTime\";\nimport { useWorkList } from \"../../hooks/workList/work/useWorkList\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\n\nexport const HomePage = ({ user, updateDateHook, targetTimeObj }) => {\n  // const [date, setDate] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  // const updateDateHook = useState(new Date());\n  const date = changeFormatYYYYMMDD(updateDateHook[0], false);\n  const wakeTimeHook = useRecordTime(\"wakeTime\", user, date);\n  const bedTimeHook = useRecordTime(\"bedTime\", user, date);\n  const workListHook = useWorkList(user, date);\n  const isLoading = () =>\n    wakeTimeHook[0] === \"Loading\" ||\n    bedTimeHook[0] === \"Loading\" ||\n    workListHook[0] === \"Loading\";\n  console.log(\"[HOME] , \", user, date, updateDateHook[0]);\n  console.log(\n    \"HOME, LOADING CHECK\",\n    \"WAKE\",\n    wakeTimeHook[0],\n    \"BED\",\n    bedTimeHook[0],\n    \"WORK\",\n    workListHook[0],\n    isLoading()\n  );\n  return isLoading() ? (\n    <h1>LOADING</h1>\n  ) : (\n    <section>\n      {/* <article>\n           {`Hello ${user}`}\n           <CalendarTemplate\n             user={user}\n             updateDateHook={updateDateHook}\n             wakeTimeHook={wakeTimeHook}\n             bedTimeHook={bedTimeHook}\n             workListHook={workListHook}\n           />\n         </article> */}\n      <article>\n        <WorkListTemplate\n          user={user}\n          date={date}\n          targetTimeObj={targetTimeObj}\n          wakeTimeHook={wakeTimeHook}\n          bedTimeHook={bedTimeHook}\n          workListHook={workListHook}\n        />\n      </article>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}