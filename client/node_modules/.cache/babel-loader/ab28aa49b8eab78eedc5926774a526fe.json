{"ast":null,"code":"\"use strict\"; // Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.googleProtobufDurationFromProto3JSON = exports.googleProtobufDurationToProto3JSON = void 0;\n\nfunction googleProtobufDurationToProto3JSON(obj) {\n  // seconds is an instance of Long so it won't be undefined\n  let durationSeconds = obj.seconds.toString();\n\n  if (typeof obj.nanos === 'number' && obj.nanos > 0) {\n    // nanosStr should contain 3, 6, or 9 fractional digits.\n    const nanosStr = obj.nanos.toString().padStart(9, '0').replace(/^((?:\\d\\d\\d)+?)(?:0*)$/, '$1');\n    durationSeconds += '.' + nanosStr;\n  }\n\n  durationSeconds += 's';\n  return durationSeconds;\n}\n\nexports.googleProtobufDurationToProto3JSON = googleProtobufDurationToProto3JSON;\n\nfunction googleProtobufDurationFromProto3JSON(json) {\n  const match = json.match(/^(\\d*)(?:\\.(\\d*))?s$/);\n\n  if (!match) {\n    throw new Error(`googleProtobufDurationFromProto3JSON: incorrect value ${json} passed as google.protobuf.Duration`);\n  }\n\n  let seconds = 0;\n  let nanos = 0;\n\n  if (typeof match[1] === 'string' && match[1].length > 0) {\n    seconds = parseInt(match[1]);\n  }\n\n  if (typeof match[2] === 'string' && match[2].length > 0) {\n    nanos = parseInt(match[2].padEnd(9, '0'));\n  }\n\n  const result = {};\n\n  if (seconds !== 0) {\n    result.seconds = seconds;\n  }\n\n  if (nanos !== 0) {\n    result.nanos = nanos;\n  }\n\n  return result;\n}\n\nexports.googleProtobufDurationFromProto3JSON = googleProtobufDurationFromProto3JSON;","map":{"version":3,"sources":["../../typescript/src/duration.ts"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAUA,SAAgB,kCAAhB,CACE,GADF,EACkC;AAEhC;AACA,MAAI,eAAe,GAAG,GAAG,CAAC,OAAJ,CAAY,QAAZ,EAAtB;;AACA,MAAI,OAAO,GAAG,CAAC,KAAX,KAAqB,QAArB,IAAiC,GAAG,CAAC,KAAJ,GAAY,CAAjD,EAAoD;AAClD;AACA,UAAM,QAAQ,GAAG,GAAG,CAAC,KAAJ,CACd,QADc,GAEd,QAFc,CAEL,CAFK,EAEF,GAFE,EAGd,OAHc,CAGN,wBAHM,EAGoB,IAHpB,CAAjB;AAIA,IAAA,eAAe,IAAI,MAAM,QAAzB;AACD;;AACD,EAAA,eAAe,IAAI,GAAnB;AACA,SAAO,eAAP;AACD;;AAfD,OAAA,CAAA,kCAAA,GAAA,kCAAA;;AAiBA,SAAgB,oCAAhB,CAAqD,IAArD,EAAiE;AAC/D,QAAM,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,sBAAX,CAAd;;AACA,MAAI,CAAC,KAAL,EAAY;AACV,UAAM,IAAI,KAAJ,CACJ,yDAAyD,IAAI,qCADzD,CAAN;AAGD;;AAED,MAAI,OAAO,GAAG,CAAd;AACA,MAAI,KAAK,GAAG,CAAZ;;AAEA,MAAI,OAAO,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAApB,IAAgC,KAAK,CAAC,CAAD,CAAL,CAAS,MAAT,GAAkB,CAAtD,EAAyD;AACvD,IAAA,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAN,CAAlB;AACD;;AAED,MAAI,OAAO,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAApB,IAAgC,KAAK,CAAC,CAAD,CAAL,CAAS,MAAT,GAAkB,CAAtD,EAAyD;AACvD,IAAA,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAL,CAAS,MAAT,CAAgB,CAAhB,EAAmB,GAAnB,CAAD,CAAhB;AACD;;AAED,QAAM,MAAM,GAAoB,EAAhC;;AACA,MAAI,OAAO,KAAK,CAAhB,EAAmB;AACjB,IAAA,MAAM,CAAC,OAAP,GAAiB,OAAjB;AACD;;AACD,MAAI,KAAK,KAAK,CAAd,EAAiB;AACf,IAAA,MAAM,CAAC,KAAP,GAAe,KAAf;AACD;;AACD,SAAO,MAAP;AACD;;AA3BD,OAAA,CAAA,oCAAA,GAAA,oCAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleProtobufDurationFromProto3JSON = exports.googleProtobufDurationToProto3JSON = void 0;\nfunction googleProtobufDurationToProto3JSON(obj) {\n    // seconds is an instance of Long so it won't be undefined\n    let durationSeconds = obj.seconds.toString();\n    if (typeof obj.nanos === 'number' && obj.nanos > 0) {\n        // nanosStr should contain 3, 6, or 9 fractional digits.\n        const nanosStr = obj.nanos\n            .toString()\n            .padStart(9, '0')\n            .replace(/^((?:\\d\\d\\d)+?)(?:0*)$/, '$1');\n        durationSeconds += '.' + nanosStr;\n    }\n    durationSeconds += 's';\n    return durationSeconds;\n}\nexports.googleProtobufDurationToProto3JSON = googleProtobufDurationToProto3JSON;\nfunction googleProtobufDurationFromProto3JSON(json) {\n    const match = json.match(/^(\\d*)(?:\\.(\\d*))?s$/);\n    if (!match) {\n        throw new Error(`googleProtobufDurationFromProto3JSON: incorrect value ${json} passed as google.protobuf.Duration`);\n    }\n    let seconds = 0;\n    let nanos = 0;\n    if (typeof match[1] === 'string' && match[1].length > 0) {\n        seconds = parseInt(match[1]);\n    }\n    if (typeof match[2] === 'string' && match[2].length > 0) {\n        nanos = parseInt(match[2].padEnd(9, '0'));\n    }\n    const result = {};\n    if (seconds !== 0) {\n        result.seconds = seconds;\n    }\n    if (nanos !== 0) {\n        result.nanos = nanos;\n    }\n    return result;\n}\nexports.googleProtobufDurationFromProto3JSON = googleProtobufDurationFromProto3JSON;\n//# sourceMappingURL=duration.js.map"]},"metadata":{},"sourceType":"script"}