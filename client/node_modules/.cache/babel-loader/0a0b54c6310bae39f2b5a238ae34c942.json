{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport isEmail from \"validator/lib/isEmail\";\nimport { useState } from \"react\";\nimport { API, APIv2 } from \"../../tools/API\";\n\nconst isUserName = username => !/[^\\w]/.exec(username);\n\nexport const useAttemptSignup = ({\n  history,\n  locaiton\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleAttemptSignup = async () => {\n    try {\n      console.log(\"CONNET ON REACT-REGISTER page: \");\n      console.log(username, email, password);\n\n      if (!isEmail(email) || !isUserName(username)) {\n        let errText = \"\";\n        if (!isEmail(email)) errText += \"Email\";\n        if (!isEmail(email) && !isUserName(username)) errText += \" and \";\n        if (!isUserName(username)) errText += \"UserName\";\n        throw new Error(`Unexpected ${errText} Form. Please chek your ${errText}.`);\n      }\n\n      if (!username || !email || !password) {\n        let errText = `[ERROR] ${username ? \"\" : \"Username\"}${!email + !password > 0 && !username ? \", \" : \"\"}${email ? \"\" : \"Email\"}${!password > 0 && !email ? \", \" : \"\"}${password ? \"\" : \"Password\"} ${!username + !email + !password > 1 ? \"are\" : \"is\"} not entered.`;\n        throw errText;\n      }\n\n      await APIv2.auth().signup({\n        username,\n        email,\n        password,\n        username\n      }); // await API.post(\"/auth/signup\", {\n      //   username,\n      //   email,\n      //   password,\n      // });\n\n      alert(`Sign up complete. \\nLogin your entered email & password`);\n      history.push(\"/login\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return {\n    username,\n    setUsername,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleAttemptSignup\n  };\n}; //\n\n_s(useAttemptSignup, \"qXzfcSnOp7L14Dddg986jK2+oO8=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useAttemptSignup.js"],"names":["isEmail","useState","API","APIv2","isUserName","username","exec","useAttemptSignup","history","locaiton","setUsername","email","setEmail","password","setPassword","handleAttemptSignup","console","log","errText","Error","auth","signup","alert","push","error"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,iBAA3B;;AAEA,MAAMC,UAAU,GAAIC,QAAD,IAAc,CAAC,QAAQC,IAAR,CAAaD,QAAb,CAAlC;;AAEA,OAAO,MAAME,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAAA;;AACzD,QAAM,CAACJ,QAAD,EAAWK,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMc,mBAAmB,GAAG,YAAY;AACtC,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAsBM,KAAtB,EAA6BE,QAA7B;;AACA,UAAI,CAACb,OAAO,CAACW,KAAD,CAAR,IAAmB,CAACP,UAAU,CAACC,QAAD,CAAlC,EAA8C;AAC5C,YAAIa,OAAO,GAAG,EAAd;AACA,YAAI,CAAClB,OAAO,CAACW,KAAD,CAAZ,EAAqBO,OAAO,IAAI,OAAX;AACrB,YAAI,CAAClB,OAAO,CAACW,KAAD,CAAR,IAAmB,CAACP,UAAU,CAACC,QAAD,CAAlC,EAA8Ca,OAAO,IAAI,OAAX;AAC9C,YAAI,CAACd,UAAU,CAACC,QAAD,CAAf,EAA2Ba,OAAO,IAAI,UAAX;AAC3B,cAAM,IAAIC,KAAJ,CACH,cAAaD,OAAQ,2BAA0BA,OAAQ,GADpD,CAAN;AAGD;;AACD,UAAI,CAACb,QAAD,IAAa,CAACM,KAAd,IAAuB,CAACE,QAA5B,EAAsC;AACpC,YAAIK,OAAO,GAAI,WAAUb,QAAQ,GAAG,EAAH,GAAQ,UAAW,GAClD,CAACM,KAAD,GAAS,CAACE,QAAV,GAAqB,CAArB,IAA0B,CAACR,QAA3B,GAAsC,IAAtC,GAA6C,EAC9C,GAAEM,KAAK,GAAG,EAAH,GAAQ,OAAQ,GAAE,CAACE,QAAD,GAAY,CAAZ,IAAiB,CAACF,KAAlB,GAA0B,IAA1B,GAAiC,EAAG,GAC5DE,QAAQ,GAAG,EAAH,GAAQ,UACjB,IAAG,CAACR,QAAD,GAAY,CAACM,KAAb,GAAqB,CAACE,QAAtB,GAAiC,CAAjC,GAAqC,KAArC,GAA6C,IAAK,eAJtD;AAKA,cAAMK,OAAN;AACD;;AACD,YAAMf,KAAK,CAACiB,IAAN,GAAaC,MAAb,CAAoB;AACxBhB,QAAAA,QADwB;AAExBM,QAAAA,KAFwB;AAGxBE,QAAAA,QAHwB;AAIxBR,QAAAA;AAJwB,OAApB,CAAN,CApBE,CA0BF;AACA;AACA;AACA;AACA;;AACAiB,MAAAA,KAAK,CAAE,yDAAF,CAAL;AACAd,MAAAA,OAAO,CAACe,IAAR,CAAa,QAAb;AACD,KAjCD,CAiCE,OAAOC,KAAP,EAAc;AACdF,MAAAA,KAAK,CAACE,KAAD,CAAL;AACD;AACF,GArCD;;AAsCA,SAAO;AACLnB,IAAAA,QADK;AAELK,IAAAA,WAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,WANK;AAOLC,IAAAA;AAPK,GAAP;AASD,CAnDM,C,CAqDP;;GArDaR,gB","sourcesContent":["import isEmail from \"validator/lib/isEmail\";\nimport { useState } from \"react\";\nimport { API, APIv2 } from \"../../tools/API\";\n\nconst isUserName = (username) => !/[^\\w]/.exec(username);\n\nexport const useAttemptSignup = ({ history, locaiton }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleAttemptSignup = async () => {\n    try {\n      console.log(\"CONNET ON REACT-REGISTER page: \");\n      console.log(username, email, password);\n      if (!isEmail(email) || !isUserName(username)) {\n        let errText = \"\";\n        if (!isEmail(email)) errText += \"Email\";\n        if (!isEmail(email) && !isUserName(username)) errText += \" and \";\n        if (!isUserName(username)) errText += \"UserName\";\n        throw new Error(\n          `Unexpected ${errText} Form. Please chek your ${errText}.`\n        );\n      }\n      if (!username || !email || !password) {\n        let errText = `[ERROR] ${username ? \"\" : \"Username\"}${\n          !email + !password > 0 && !username ? \", \" : \"\"\n        }${email ? \"\" : \"Email\"}${!password > 0 && !email ? \", \" : \"\"}${\n          password ? \"\" : \"Password\"\n        } ${!username + !email + !password > 1 ? \"are\" : \"is\"} not entered.`;\n        throw errText;\n      }\n      await APIv2.auth().signup({\n        username,\n        email,\n        password,\n        username,\n      });\n      // await API.post(\"/auth/signup\", {\n      //   username,\n      //   email,\n      //   password,\n      // });\n      alert(`Sign up complete. \\nLogin your entered email & password`);\n      history.push(\"/login\");\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return {\n    username,\n    setUsername,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleAttemptSignup,\n  };\n};\n\n//\n"]},"metadata":{},"sourceType":"module"}