{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport qs from \"qs\";\nimport axios from \"axios\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { useState } from \"react\";\nimport { API } from \"../../tools/axiosSetting\";\nexport const useAttemptSignup = ({\n  history,\n  locaiton\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleAttemptSignup = async () => {\n    try {\n      console.log(\"CONNET ON REACT-REGISTER page: \");\n      console.log(username, email, password);\n\n      if (!isEmail(email)) {\n        throw \"Unexpected Email Form. Please chek your email.\";\n      }\n\n      if (!username || !email || !password) {\n        let errText = `[ERROR] ${username ? \"\" : \"Username\"}${!email + !password > 0 && !username ? \", \" : \"\"}${email ? \"\" : \"Email\"}${!password > 0 && !email ? \", \" : \"\"}${password ? \"\" : \"Password\"} ${!username + !email + !password > 1 ? \"are\" : \"is\"} not entered.`;\n        throw errText;\n      }\n\n      const response = await API.post(\"/auth/signup\", {\n        username,\n        email,\n        password\n      });\n      console.log(\"RES: \", response);\n      alert(`Sign up complete. \\nLogin your entered email & password`);\n      history.push(\"/login\");\n    } catch (error) {\n      console.log(\"CATCH\", error);\n      alert(error);\n    }\n  };\n\n  return {\n    username,\n    setUsername,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleAttemptSignup\n  };\n}; //\n\n_s(useAttemptSignup, \"qXzfcSnOp7L14Dddg986jK2+oO8=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useAttemptSignup.js"],"names":["qs","axios","isEmail","useState","API","useAttemptSignup","history","locaiton","username","setUsername","email","setEmail","password","setPassword","handleAttemptSignup","console","log","errText","response","post","alert","push","error"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAAA;;AACzD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMW,mBAAmB,GAAG,YAAY;AACtC,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBE,KAAtB,EAA6BE,QAA7B;;AACA,UAAI,CAACV,OAAO,CAACQ,KAAD,CAAZ,EAAqB;AACnB,cAAM,gDAAN;AACD;;AACD,UAAI,CAACF,QAAD,IAAa,CAACE,KAAd,IAAuB,CAACE,QAA5B,EAAsC;AACpC,YAAIK,OAAO,GAAI,WAAUT,QAAQ,GAAG,EAAH,GAAQ,UAAW,GAClD,CAACE,KAAD,GAAS,CAACE,QAAV,GAAqB,CAArB,IAA0B,CAACJ,QAA3B,GAAsC,IAAtC,GAA6C,EAC9C,GAAEE,KAAK,GAAG,EAAH,GAAQ,OAAQ,GAAE,CAACE,QAAD,GAAY,CAAZ,IAAiB,CAACF,KAAlB,GAA0B,IAA1B,GAAiC,EAAG,GAC5DE,QAAQ,GAAG,EAAH,GAAQ,UACjB,IAAG,CAACJ,QAAD,GAAY,CAACE,KAAb,GAAqB,CAACE,QAAtB,GAAiC,CAAjC,GAAqC,KAArC,GAA6C,IAAK,eAJtD;AAKA,cAAMK,OAAN;AACD;;AACD,YAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAJ,CAAS,cAAT,EAAyB;AAC9CX,QAAAA,QAD8C;AAE9CE,QAAAA,KAF8C;AAG9CE,QAAAA;AAH8C,OAAzB,CAAvB;AAKAG,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,QAArB;AACAE,MAAAA,KAAK,CAAE,yDAAF,CAAL;AACAd,MAAAA,OAAO,CAACe,IAAR,CAAa,QAAb;AACD,KAtBD,CAsBE,OAAOC,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,KAArB;AACAF,MAAAA,KAAK,CAACE,KAAD,CAAL;AACD;AACF,GA3BD;;AA4BA,SAAO;AACLd,IAAAA,QADK;AAELC,IAAAA,WAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,QALK;AAMLC,IAAAA,WANK;AAOLC,IAAAA;AAPK,GAAP;AASD,CAzCM,C,CA2CP;;GA3CaT,gB","sourcesContent":["import qs from \"qs\";\nimport axios from \"axios\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { useState } from \"react\";\nimport { API } from \"../../tools/axiosSetting\";\n\nexport const useAttemptSignup = ({ history, locaiton }) => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleAttemptSignup = async () => {\n    try {\n      console.log(\"CONNET ON REACT-REGISTER page: \");\n      console.log(username, email, password);\n      if (!isEmail(email)) {\n        throw \"Unexpected Email Form. Please chek your email.\";\n      }\n      if (!username || !email || !password) {\n        let errText = `[ERROR] ${username ? \"\" : \"Username\"}${\n          !email + !password > 0 && !username ? \", \" : \"\"\n        }${email ? \"\" : \"Email\"}${!password > 0 && !email ? \", \" : \"\"}${\n          password ? \"\" : \"Password\"\n        } ${!username + !email + !password > 1 ? \"are\" : \"is\"} not entered.`;\n        throw errText;\n      }\n      const response = await API.post(\"/auth/signup\", {\n        username,\n        email,\n        password,\n      });\n      console.log(\"RES: \", response);\n      alert(`Sign up complete. \\nLogin your entered email & password`);\n      history.push(\"/login\");\n    } catch (error) {\n      console.log(\"CATCH\", error);\n      alert(error);\n    }\n  };\n  return {\n    username,\n    setUsername,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleAttemptSignup,\n  };\n};\n\n//\n"]},"metadata":{},"sourceType":"module"}