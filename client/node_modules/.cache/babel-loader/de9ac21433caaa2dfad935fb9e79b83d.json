{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nexport const useRecordTime = key => {\n  _s();\n\n  const syncAxios = async () => {\n    const res = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\"\n      },\n      url: \"/api/get-time\",\n      method: \"post\",\n      data: {\n        key\n      }\n    });\n    console.log(\"[1]AXIOSN END\", res);\n    return res;\n  };\n\n  const res = syncAxios();\n  console.log(\"[2]HOOK DATA: \", key, res.data);\n  const initVal = res.data ? res.data.timeObj : window.localStorage.getItem(key) ? JSON.parse(window.localStorage.getItem(key)) : null;\n  console.log(\"INIT VAL: \", initVal);\n  const [recordTime, setRecordTime] = useState(initVal);\n\n  const onClick = event => {\n    event.preventDefault();\n    const [hour, minute] = new Date().toTimeString().split(\":\").slice(0, 2).map(numChar => parseInt(numChar));\n    console.log(\"on CLick, \", hour, minute);\n    const timeObj = {\n      hour,\n      minute\n    };\n    axios.post(\"api/record-time\", {\n      user: \"TEST\",\n      key,\n      value: timeObj\n    });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n\n  return [recordTime, onClick];\n};\n\n_s(useRecordTime, \"4aDt5VS2nQ1vijZ0/WcWOYBhy/A=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/useRecoreTime.js"],"names":["axios","useState","useRecordTime","key","syncAxios","res","headers","Authorization","url","method","data","console","log","initVal","timeObj","window","localStorage","getItem","JSON","parse","recordTime","setRecordTime","onClick","event","preventDefault","hour","minute","Date","toTimeString","split","slice","map","numChar","parseInt","post","user","value","setItem","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,aAAa,GAAIC,GAAD,IAAS;AAAA;;AACpC,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,GAAG,GAAG,MAAML,KAAK,CAAC;AACtBM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,EADR;AAEP,wBAAgB;AAFT,OADa;AAKtBC,MAAAA,GAAG,EAAE,eALiB;AAMtBC,MAAAA,MAAM,EAAE,MANc;AAOtBC,MAAAA,IAAI,EAAE;AAAEP,QAAAA;AAAF;AAPgB,KAAD,CAAvB;AASAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,GAA7B;AACA,WAAOA,GAAP;AACD,GAZD;;AAcA,QAAMA,GAAG,GAAGD,SAAS,EAArB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,GAA9B,EAAmCE,GAAG,CAACK,IAAvC;AACA,QAAMG,OAAO,GAAGR,GAAG,CAACK,IAAJ,GACZL,GAAG,CAACK,IAAJ,CAASI,OADG,GAEZC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4Bd,GAA5B,IACAe,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4Bd,GAA5B,CAAX,CADA,GAEA,IAJJ;AAKAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,OAA1B;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAACY,OAAD,CAA5C;;AACA,QAAMS,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM,CAACC,IAAD,EAAOC,MAAP,IAAiB,IAAIC,IAAJ,GACpBC,YADoB,GAEpBC,KAFoB,CAEd,GAFc,EAGpBC,KAHoB,CAGd,CAHc,EAGX,CAHW,EAIpBC,GAJoB,CAIfC,OAAD,IAAaC,QAAQ,CAACD,OAAD,CAJL,CAAvB;AAKArB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Ba,IAA1B,EAAgCC,MAAhC;AACA,UAAMZ,OAAO,GAAG;AAAEW,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB;AACA1B,IAAAA,KAAK,CAACkC,IAAN,CAAW,iBAAX,EAA8B;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBhC,MAAAA,GAAhB;AAAqBiC,MAAAA,KAAK,EAAEtB;AAA5B,KAA9B;AACAC,IAAAA,MAAM,CAACC,YAAP,CAAoBqB,OAApB,CAA4BlC,GAA5B,EAAiCe,IAAI,CAACoB,SAAL,CAAexB,OAAf,CAAjC;AACAO,IAAAA,aAAa,CAACP,OAAD,CAAb;AACD,GAZD;;AAaA,SAAO,CAACM,UAAD,EAAaE,OAAb,CAAP;AACD,CAtCM;;GAAMpB,a","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nexport const useRecordTime = (key) => {\n  const syncAxios = async () => {\n    const res = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      url: \"/api/get-time\",\n      method: \"post\",\n      data: { key },\n    });\n    console.log(\"[1]AXIOSN END\", res);\n    return res;\n  };\n\n  const res = syncAxios();\n  console.log(\"[2]HOOK DATA: \", key, res.data);\n  const initVal = res.data\n    ? res.data.timeObj\n    : window.localStorage.getItem(key)\n    ? JSON.parse(window.localStorage.getItem(key))\n    : null;\n  console.log(\"INIT VAL: \", initVal);\n  const [recordTime, setRecordTime] = useState(initVal);\n  const onClick = (event) => {\n    event.preventDefault();\n    const [hour, minute] = new Date()\n      .toTimeString()\n      .split(\":\")\n      .slice(0, 2)\n      .map((numChar) => parseInt(numChar));\n    console.log(\"on CLick, \", hour, minute);\n    const timeObj = { hour, minute };\n    axios.post(\"api/record-time\", { user: \"TEST\", key, value: timeObj });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n  return [recordTime, onClick];\n};\n"]},"metadata":{},"sourceType":"module"}