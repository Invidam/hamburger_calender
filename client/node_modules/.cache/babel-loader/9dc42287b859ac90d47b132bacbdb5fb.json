{"ast":null,"code":"import _slicedToArray from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Calendar from\"react-calendar\";import{changeFormatYYYYMMDD}from\"../../tools/time\";import\"../../css/calendar.css\";import{useDateInfo}from\"../../hooks/calendar/useDateInfo\";import{NotLoggedInPage}from\"../pages/NotLoggedInPage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var CalendarTemplate=function CalendarTemplate(_ref){var user=_ref.user,updateDateHook=_ref.updateDateHook;var _updateDateHook=_slicedToArray(updateDateHook,2),date=_updateDateHook[0],onUpdateDate=_updateDateHook[1];var _useDateInfo=useDateInfo(user,date),_useDateInfo2=_slicedToArray(_useDateInfo,2),mark=_useDateInfo2[0],getUserInfo=_useDateInfo2[1];// const mark = dateInfo[0];\nconsole.log(\"[Calendar] TEMPLATE\");// return isDateInfoLoad ? (\n//   <article>\n//     {\" \"}\n//     <LoadingElement text={\"Calendar Loading\"} />\n//   </article>\n// ) :\nreturn!user?/*#__PURE__*/_jsx(NotLoggedInPage,{elementName:\"Week Calendar\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-template\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"calendar-header\",children:\"Check your calendar\"}),/*#__PURE__*/_jsx(Calendar,{className:\"caldendar\",onChange:onUpdateDate,value:new Date(date),locale:\"en\",calendarType:\"US\",onActiveStartDateChange:function onActiveStartDateChange(_ref2){var activeStartDate=_ref2.activeStartDate,value=_ref2.value,view=_ref2.view;// setActiveDate(changeFormatYYYYMMDD(activeStartDate));\ngetUserInfo(changeFormatYYYYMMDD(activeStartDate));},tileClassName:function tileClassName(_ref3){var date=_ref3.date,view=_ref3.view;if(mark&&mark.find(function(markedDate){return markedDate===changeFormatYYYYMMDD(date);}))return\"highlight\";}//DB에 있는 날짜는 체크표시 해야함.\n})]});};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/components/calendar/CalendarTemplate.js"],"names":["Calendar","changeFormatYYYYMMDD","useDateInfo","NotLoggedInPage","CalendarTemplate","user","updateDateHook","date","onUpdateDate","mark","getUserInfo","console","log","Date","activeStartDate","value","view","find","markedDate"],"mappings":"8JAAA,MAAOA,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,oBAAT,KAAqC,kBAArC,CACA,MAAO,wBAAP,CACA,OAASC,WAAT,KAA4B,kCAA5B,CACA,OAASC,eAAT,KAAgC,0BAAhC,C,wFACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAA8B,IAA3BC,CAAAA,IAA2B,MAA3BA,IAA2B,CAArBC,cAAqB,MAArBA,cAAqB,CAC5D,mCAA6BA,cAA7B,IAAOC,IAAP,oBAAaC,YAAb,oBACA,iBAA4BN,WAAW,CAACG,IAAD,CAAOE,IAAP,CAAvC,8CAAOE,IAAP,kBAAaC,WAAb,kBACA;AACAC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CAACP,IAAD,cACL,KAAC,eAAD,EAAiB,WAAW,CAAE,eAA9B,EADK,cAGL,aAAK,SAAS,CAAC,mBAAf,wBACE,WAAI,SAAS,CAAC,iBAAd,iCADF,cAEE,KAAC,QAAD,EACE,SAAS,CAAC,WADZ,CAEE,QAAQ,CAAEG,YAFZ,CAGE,KAAK,CAAE,GAAIK,CAAAA,IAAJ,CAASN,IAAT,CAHT,CAIE,MAAM,CAAE,IAJV,CAKE,YAAY,CAAE,IALhB,CAME,uBAAuB,CAAE,uCAAsC,IAAnCO,CAAAA,eAAmC,OAAnCA,eAAmC,CAAlBC,KAAkB,OAAlBA,KAAkB,CAAXC,IAAW,OAAXA,IAAW,CAC7D;AACAN,WAAW,CAACT,oBAAoB,CAACa,eAAD,CAArB,CAAX,CACD,CATH,CAUE,aAAa,CAAE,6BAAoB,IAAjBP,CAAAA,IAAiB,OAAjBA,IAAiB,CAAXS,IAAW,OAAXA,IAAW,CACjC,GACEP,IAAI,EACJA,IAAI,CAACQ,IAAL,CAAU,SAACC,UAAD,QAAgBA,CAAAA,UAAU,GAAKjB,oBAAoB,CAACM,IAAD,CAAnD,EAAV,CAFF,CAIE,MAAO,WAAP,CACH,CACD;AAjBF,EAFF,GAHF,CA0BD,CArCM","sourcesContent":["import Calendar from \"react-calendar\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nimport \"../../css/calendar.css\";\nimport { useDateInfo } from \"../../hooks/calendar/useDateInfo\";\nimport { NotLoggedInPage } from \"../pages/NotLoggedInPage\";\nexport const CalendarTemplate = ({ user, updateDateHook }) => {\n  const [date, onUpdateDate] = updateDateHook;\n  const [mark, getUserInfo] = useDateInfo(user, date);\n  // const mark = dateInfo[0];\n  console.log(\"[Calendar] TEMPLATE\");\n  // return isDateInfoLoad ? (\n  //   <article>\n  //     {\" \"}\n  //     <LoadingElement text={\"Calendar Loading\"} />\n  //   </article>\n  // ) :\n  return !user ? (\n    <NotLoggedInPage elementName={\"Week Calendar\"} />\n  ) : (\n    <div className=\"calendar-template\">\n      <h1 className=\"calendar-header\">Check your calendar</h1>\n      <Calendar\n        className=\"caldendar\"\n        onChange={onUpdateDate}\n        value={new Date(date)}\n        locale={\"en\"}\n        calendarType={\"US\"}\n        onActiveStartDateChange={({ activeStartDate, value, view }) => {\n          // setActiveDate(changeFormatYYYYMMDD(activeStartDate));\n          getUserInfo(changeFormatYYYYMMDD(activeStartDate));\n        }}\n        tileClassName={({ date, view }) => {\n          if (\n            mark &&\n            mark.find((markedDate) => markedDate === changeFormatYYYYMMDD(date))\n          )\n            return \"highlight\";\n        }}\n        //DB에 있는 날짜는 체크표시 해야함.\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}