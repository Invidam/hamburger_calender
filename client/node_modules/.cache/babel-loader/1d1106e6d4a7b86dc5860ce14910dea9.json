{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/TodoList.js\",\n    _s = $RefreshSig$();\n\n// import Loading from \"react-loading\";\n// import StarRatings from \"react-star-ratings\";\n// import { StarRatingInput, StarRating, css } from \"react-star-rating-input\";\n// import DatePicker from \"react-datepicker\";\nimport { useTodoList } from \"../../hooks/todolist/useTodoList\";\nimport { LoadingElement } from \"../Loading\"; // import { InputTodo } from \"./InputTodo\";\n\nimport { Todo } from \"./elements/Todo\";\nimport \"../../css/todoList.css\";\nimport { TodoExplain } from \"./elements/TodoExplain\"; // import { Example } from \"./dateTest\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const INIT_SORT_TYPE_IDX = 1,\n      SORT_TYPES = 2,\n      SORT_TYPE_CNT = 2;\nexport const TodoList = ({\n  user,\n  date\n}) => {\n  _s();\n\n  // const [sortTypeIdx, onClickByTabIdx] = todoSortHook;\n  const [todoList, setTodo, isTodoListLoading, sortTypeIdx, onClickByTabIdx] = useTodoList(user, INIT_SORT_TYPE_IDX, SORT_TYPES, SORT_TYPE_CNT);\n  console.log(\"TODOLIST: \", todoList, typeof todoList);\n  return isTodoListLoading ? /*#__PURE__*/_jsxDEV(LoadingElement, {\n    text: \"todoList is Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"todo-list__non-item\",\n      children: [/*#__PURE__*/_jsxDEV(TodoExplain, {\n        sortTypeIdx: sortTypeIdx,\n        onClickByTabIdx: onClickByTabIdx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Todo, {\n        setTodo: setTodo,\n        _isEditMode: true,\n        id: -1,\n        idx: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"todo-list\",\n      children: todoList ? Object.entries(todoList).map(([idx, todoItem]) => {\n        return /*#__PURE__*/_jsxDEV(Todo, {\n          setTodo: setTodo,\n          _isEditMode: false,\n          todoItem: todoItem,\n          id: idx,\n          idx: idx\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this);\n      }) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"TIr/83BdiXBUGkmGTOuvVWX4zNo=\", false, function () {\n  return [useTodoList];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/TodoList.js"],"names":["useTodoList","LoadingElement","Todo","TodoExplain","INIT_SORT_TYPE_IDX","SORT_TYPES","SORT_TYPE_CNT","TodoList","user","date","todoList","setTodo","isTodoListLoading","sortTypeIdx","onClickByTabIdx","console","log","Object","entries","map","idx","todoItem"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA,SAASA,WAAT,QAA4B,kCAA5B;AACA,SAASC,cAAT,QAA+B,YAA/B,C,CACA;;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,wBAAP;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CACA;;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAA3B;AAAA,MACLC,UAAU,GAAG,CADR;AAAA,MAELC,aAAa,GAAG,CAFX;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAC1C;AACA,QAAM,CAACC,QAAD,EAAWC,OAAX,EAAoBC,iBAApB,EAAuCC,WAAvC,EAAoDC,eAApD,IACJd,WAAW,CAACQ,IAAD,EAAOJ,kBAAP,EAA2BC,UAA3B,EAAuCC,aAAvC,CADb;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,QAA1B,EAAoC,OAAOA,QAA3C;AACA,SAAOE,iBAAiB,gBACtB,QAAC,cAAD;AAAgB,IAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,UADsB,gBAGtB;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,WAAW,EAAEC,WADf;AAEE,QAAA,eAAe,EAAEC;AAFnB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEH,OAAf;AAAwB,QAAA,WAAW,EAAE,IAArC;AAA2C,QAAA,EAAE,EAAE,CAAC,CAAhD;AAAmD,QAAA,GAAG,EAAE,CAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACGD,QAAQ,GACLO,MAAM,CAACC,OAAP,CAAeR,QAAf,EAAyBS,GAAzB,CAA6B,CAAC,CAACC,GAAD,EAAMC,QAAN,CAAD,KAAqB;AAChD,4BACE,QAAC,IAAD;AACE,UAAA,OAAO,EAAEV,OADX;AAEE,UAAA,WAAW,EAAE,KAFf;AAGE,UAAA,QAAQ,EAAEU,QAHZ;AAKE,UAAA,EAAE,EAAED,GALN;AAME,UAAA,GAAG,EAAEA;AANP,WAIOA,GAJP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXD,CADK,GAaL;AAdN;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AA6BD,CAlCM;;GAAMb,Q;UAGTP,W;;;KAHSO,Q","sourcesContent":["// import Loading from \"react-loading\";\n// import StarRatings from \"react-star-ratings\";\n// import { StarRatingInput, StarRating, css } from \"react-star-rating-input\";\n\n// import DatePicker from \"react-datepicker\";\nimport { useTodoList } from \"../../hooks/todolist/useTodoList\";\nimport { LoadingElement } from \"../Loading\";\n// import { InputTodo } from \"./InputTodo\";\nimport { Todo } from \"./elements/Todo\";\nimport \"../../css/todoList.css\";\nimport { TodoExplain } from \"./elements/TodoExplain\";\n// import { Example } from \"./dateTest\";\nexport const INIT_SORT_TYPE_IDX = 1,\n  SORT_TYPES = 2,\n  SORT_TYPE_CNT = 2;\nexport const TodoList = ({ user, date }) => {\n  // const [sortTypeIdx, onClickByTabIdx] = todoSortHook;\n  const [todoList, setTodo, isTodoListLoading, sortTypeIdx, onClickByTabIdx] =\n    useTodoList(user, INIT_SORT_TYPE_IDX, SORT_TYPES, SORT_TYPE_CNT);\n  console.log(\"TODOLIST: \", todoList, typeof todoList);\n  return isTodoListLoading ? (\n    <LoadingElement text={\"todoList is Loading\"} />\n  ) : (\n    <div className=\"todo-box\">\n      <ol className=\"todo-list__non-item\">\n        <TodoExplain\n          sortTypeIdx={sortTypeIdx}\n          onClickByTabIdx={onClickByTabIdx}\n        />\n        <Todo setTodo={setTodo} _isEditMode={true} id={-1} idx={-1} />\n      </ol>\n      <ol className=\"todo-list\">\n        {todoList\n          ? Object.entries(todoList).map(([idx, todoItem]) => {\n              return (\n                <Todo\n                  setTodo={setTodo}\n                  _isEditMode={false}\n                  todoItem={todoItem}\n                  key={idx}\n                  id={idx}\n                  idx={idx}\n                />\n              );\n            })\n          : \"\"}\n      </ol>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}