{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/TodoList.js\",\n    _todoItem,\n    _todoItem2,\n    _s = $RefreshSig$();\n\nimport Loading from \"react-loading\";\nimport StarRatings from \"react-star-ratings\";\nimport { StarRatingInput, StarRating, css } from \"react-star-rating-input\";\nimport DatePicker from \"react-datepicker\";\nimport { useTodoList } from \"../../hooks/todolist/useTodoList\";\nimport { LoadingElement } from \"../Loading\"; // import { InputTodo } from \"./InputTodo\";\n\nimport { Todo } from \"./elements/Todo\";\nimport \"../../css/todoList.css\"; // import { Example } from \"./dateTest\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todoExplain = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"todo\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    id: `todo__checkbox_${id}`,\n    className: \"todo__checkbox todo__checkbox todo__content todo-display__content\",\n    type: \"checkbox\",\n    name: \"todoCheck\",\n    defaultValue: (_todoItem = todoItem) === null || _todoItem === void 0 ? void 0 : _todoItem.isCheck,\n    onChange: ({\n      target: {\n        value\n      }\n    }) => onClickCheck(value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"todo__label\",\n    for: `todo__checkbox_${id}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo__label-icon\",\n      children: isCheck ? checkElement : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"todo__text todo-display__text todo__content todo-display__content\",\n    children: (_todoItem2 = todoItem) === null || _todoItem2 === void 0 ? void 0 : _todoItem2.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(DatePick, {\n    date: date,\n    isEditMode: isEditMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo__star-rating todo-display__star}`,\n    children: [/*#__PURE__*/_jsxDEV(StarRatings, {\n      starRatedColor: \"rgba(241, 196, 15,1.0)\",\n      starEmptyColor: \"rgba(151, 151, 151, 0.707)\",\n      starHoverColor: \"rgba(241, 196, 15,0.9)\",\n      starSelectingHoverColor: \"red\",\n      numberOfStars: 5,\n      name: \"rating\",\n      starDimension: \"12px\",\n      starSpacing: \"0px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), displayBtn]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\nexport const TodoList = ({\n  user,\n  date\n}) => {\n  _s();\n\n  const [todoList, setTodo, isTodoListLoading] = useTodoList(user, date);\n  return isTodoListLoading ? /*#__PURE__*/_jsxDEV(LoadingElement, {\n    text: \"todoList is Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(Todo, {\n      setTodo: setTodo,\n      _isEditMode: true,\n      id: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), todoList && Object.values(todoList).map((todoItem, idx) => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        setTodo: setTodo,\n        _isEditMode: true,\n        todoItem: todoItem,\n        id: idx + 1\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"L+2tes32bgNcLUSuZzPvHuqP7d4=\", false, function () {\n  return [useTodoList];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/TodoList.js"],"names":["Loading","StarRatings","StarRatingInput","StarRating","css","DatePicker","useTodoList","LoadingElement","Todo","todoExplain","id","todoItem","isCheck","target","value","onClickCheck","checkElement","text","date","isEditMode","displayBtn","TodoList","user","todoList","setTodo","isTodoListLoading","Object","values","map","idx"],"mappings":"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","sourcesContent":["import Loading from \"react-loading\";\nimport StarRatings from \"react-star-ratings\";\nimport { StarRatingInput, StarRating, css } from \"react-star-rating-input\";\n\nimport DatePicker from \"react-datepicker\";\nimport { useTodoList } from \"../../hooks/todolist/useTodoList\";\nimport { LoadingElement } from \"../Loading\";\n// import { InputTodo } from \"./InputTodo\";\nimport { Todo } from \"./elements/Todo\";\nimport \"../../css/todoList.css\";\n// import { Example } from \"./dateTest\";\n\nconst todoExplain = (\n  <div className=\"todo\">\n    <input\n      id={`todo__checkbox_${id}`}\n      className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n      type=\"checkbox\"\n      name=\"todoCheck\"\n      defaultValue={todoItem?.isCheck}\n      onChange={({ target: { value } }) => onClickCheck(value)}\n    ></input>\n    <label className=\"todo__label\" for={`todo__checkbox_${id}`}>\n      <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n    </label>\n    <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n      {todoItem?.text}\n    </span>\n    <DatePick date={date} isEditMode={isEditMode} />\n    <div className={`todo__star-rating todo-display__star}`}>\n      <StarRatings\n        starRatedColor=\"rgba(241, 196, 15,1.0)\"\n        starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n        starHoverColor=\"rgba(241, 196, 15,0.9)\"\n        starSelectingHoverColor=\"red\"\n        numberOfStars={5}\n        name=\"rating\"\n        starDimension=\"12px\"\n        starSpacing=\"0px\"\n      />{\" \"}\n    </div>\n    {displayBtn}\n  </div>\n);\nexport const TodoList = ({ user, date }) => {\n  const [todoList, setTodo, isTodoListLoading] = useTodoList(user, date);\n  return isTodoListLoading ? (\n    <LoadingElement text={\"todoList is Loading\"} />\n  ) : (\n    <ol className=\"todo-list\">\n      <Todo setTodo={setTodo} _isEditMode={true} id={0} />\n      {todoList &&\n        Object.values(todoList).map((todoItem, idx) => {\n          return (\n            <Todo\n              setTodo={setTodo}\n              _isEditMode={true}\n              todoItem={todoItem}\n              key={idx}\n              id={idx + 1}\n            />\n          );\n        })}\n    </ol>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}