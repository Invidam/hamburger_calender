{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nexport const useTodoList = (user, date, sortTypeIdx) => {\n  _s();\n\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(false);\n  const [sortType, setSortType] = useState(\"time\"); // \"time\" or \"priority\"\n\n  const getTodoList = async sortType => {\n    try {\n      if (user) {\n        setLoad(true);\n        const data = await APIv2.todoList(user, date).get(sortType);\n        setLoad(false);\n        const resTodoList = data === null || data === void 0 ? void 0 : data.data;\n        if (!data) throw new Error(\"TodoList can't found\");\n        setTodoList(resTodoList);\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getTodoList();\n  }, [user, date, sortType]);\n\n  const setTodo = todoObj => {\n    const id = todoObj.id;\n    const _todoList = { ...todoList\n    };\n    return {\n      create: async () => {\n        _todoList[id] = todoObj;\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user, date).create(todoObj);else LocalStroage.todoList().set(_todoList);\n      },\n      edit: async () => {\n        console.log(\"EDIT TODO LIST\", todoObj);\n        _todoList[id] = todoObj;\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user, date).edit(todoObj);else LocalStroage.todoList().set(_todoList);\n      },\n      delete: async () => {\n        if (!delete _todoList[id]) throw new Error(\"Cannot Delete TodoItem\");\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user, date).delete(todoObj);else LocalStroage.todoList().set(_todoList);\n      }\n    };\n  };\n\n  return [todoList, setTodo, isTodoListLoading];\n};\n\n_s(useTodoList, \"vIIuK/tgDNfOZPcjrscTuSbyQ8c=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodoList.js"],"names":["useEffect","useState","APIv2","LocalStroage","useTodoList","user","date","sortTypeIdx","todoList","setTodoList","isTodoListLoading","setLoad","sortType","setSortType","getTodoList","data","get","resTodoList","Error","console","log","error","alert","setTodo","todoObj","id","_todoList","create","todo","set","edit","delete"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\n\nexport const useTodoList = (user, date, sortTypeIdx) => {\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(false);\n  const [sortType, setSortType] = useState(\"time\"); // \"time\" or \"priority\"\n  const getTodoList = async (sortType) => {\n    try {\n      if (user) {\n        setLoad(true);\n        const data = await APIv2.todoList(user, date).get(sortType);\n        setLoad(false);\n        const resTodoList = data?.data;\n        if (!data) throw new Error(\"TodoList can't found\");\n        setTodoList(resTodoList);\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    getTodoList();\n  }, [user, date, sortType]);\n\n  const setTodo = (todoObj) => {\n    const id = todoObj.id;\n    const _todoList = { ...todoList };\n    return {\n      create: async () => {\n        _todoList[id] = todoObj;\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user, date).create(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n      edit: async () => {\n        console.log(\"EDIT TODO LIST\", todoObj);\n        _todoList[id] = todoObj;\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user, date).edit(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n      delete: async () => {\n        if (!delete _todoList[id]) throw new Error(\"Cannot Delete TodoItem\");\n        setTodoList(_todoList);\n        if (user) await APIv2.todo(user, date).delete(todoObj);\n        else LocalStroage.todoList().set(_todoList);\n      },\n    };\n  };\n  return [todoList, setTodo, isTodoListLoading];\n};\n"]},"metadata":{},"sourceType":"module"}