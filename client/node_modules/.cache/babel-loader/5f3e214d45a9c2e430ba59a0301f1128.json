{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/grade/WorkListGrade.js\",\n    _s = $RefreshSig$();\n\nimport { useWorkListGrade } from \"../../../../hooks/workList/useWorkListGrade\";\nimport { GradeStarList } from \"./GradeStarList\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst redoElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__redo\",\n  icon: faRedo,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\nexport const WorkListGrade = ({\n  user,\n  date\n}) => {\n  _s();\n\n  // const [grade, difference, target, value, isGradeLoading, updateInfo] =\n  const [gradeInfo, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n\n  const getGradeSum = () => gradeInfo ? Object.values(gradeInfo === null || gradeInfo === void 0 ? void 0 : gradeInfo.grade).reduce((prev, value) => prev += value, 0) : 0;\n\n  const gradeSum = getGradeSum(); // console.log(\"SUM : \", grade, gradeSum);\n  // const gradeElement = makeStar(getGradeSum()).map((elem, idx) => (\n  //   <div key={idx}> {elem}</div>\n  // ));\n\n  Object.entries(gradeInfo).map(([key, value]) => console.log(key, value));\n\n  const testElement = /*#__PURE__*/_jsxDEV(\"table\", {\n    border: 1,\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"\\\\\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"WakeTime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"WorkTimeSum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"BedTime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  const targetElement = /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"TargetTime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  const valueElement = /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Target\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  const differenceElement = /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Target\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  const gradeElement = /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Target\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: gradeInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  const tooltipElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grade-tooltip-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-tooltip-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n\n  const getGradeElement = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: updateInfo,\n    children: \" Get Grade~!! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 27\n  }, this);\n\n  const updateGradeBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: updateInfo,\n    children: [\" \", redoElement, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 26\n  }, this);\n\n  const displayGrade = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tooltip\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(GradeStarList, {\n      gradeSum: gradeSum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), updateGradeBtn, testElement, tooltipElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n\n  return gradeInfo ? displayGrade : getGradeElement;\n};\n\n_s(WorkListGrade, \"ThmtQcOhFtjv/fNeARQqlZlKIKU=\", false, function () {\n  return [useWorkListGrade];\n});\n\n_c = WorkListGrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListGrade\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/grade/WorkListGrade.js"],"names":["useWorkListGrade","GradeStarList","faRedo","FontAwesomeIcon","redoElement","WorkListGrade","user","date","gradeInfo","isGradeLoading","updateInfo","getGradeSum","Object","values","grade","reduce","prev","value","gradeSum","entries","map","key","console","log","testElement","targetElement","valueElement","differenceElement","gradeElement","tooltipElement","getGradeElement","updateGradeBtn","displayGrade"],"mappings":"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","sourcesContent":["import { useWorkListGrade } from \"../../../../hooks/workList/useWorkListGrade\";\nimport { GradeStarList } from \"./GradeStarList\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst redoElement = (\n  <FontAwesomeIcon className=\"work-icon__redo\" icon={faRedo} size=\"1x\" />\n);\nexport const WorkListGrade = ({ user, date }) => {\n  // const [grade, difference, target, value, isGradeLoading, updateInfo] =\n  const [gradeInfo, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n  const getGradeSum = () =>\n    gradeInfo\n      ? Object.values(gradeInfo?.grade).reduce(\n          (prev, value) => (prev += value),\n          0\n        )\n      : 0;\n  const gradeSum = getGradeSum();\n  // console.log(\"SUM : \", grade, gradeSum);\n  // const gradeElement = makeStar(getGradeSum()).map((elem, idx) => (\n  //   <div key={idx}> {elem}</div>\n  // ));\n  Object.entries(gradeInfo).map(([key, value]) => console.log(key, value));\n  const testElement = (\n    <table border={1}>\n      <th>\\</th>\n      <th>WakeTime</th>\n      <th>WorkTimeSum</th>\n      <th>BedTime</th>\n    </table>\n  );\n  const targetElement = (\n    <tr>\n      <td>TargetTime</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n    </tr>\n  );\n  const valueElement = (\n    <tr>\n      <td>Target</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n    </tr>\n  );\n  const differenceElement = (\n    <tr>\n      <td>Target</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n    </tr>\n  );\n  const gradeElement = (\n    <tr>\n      <td>Target</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n      <td>{gradeInfo}</td>\n    </tr>\n  );\n\n  const tooltipElement = (\n    <div className=\"grade-tooltip-content\">\n      <div className=\"grade-tooltip-box\">{}</div>\n    </div>\n  );\n\n  const getGradeElement = <button onClick={updateInfo}> Get Grade~!! </button>;\n  const updateGradeBtn = <button onClick={updateInfo}> {redoElement} </button>;\n  const displayGrade = (\n    <div className=\"tooltip\">\n      {\" \"}\n      <GradeStarList gradeSum={gradeSum} />\n      {updateGradeBtn}\n      {testElement}\n      {tooltipElement}\n    </div>\n  );\n  return gradeInfo ? displayGrade : getGradeElement;\n};\n"]},"metadata":{},"sourceType":"module"}