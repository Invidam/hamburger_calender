{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/invidam/hamburger_calender/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import qs from\"qs\";import{useState}from\"react\";import isEmail from\"validator/lib/isEmail\";var baseUrl=\"https://github.com/login/oauth/authorize\";var authConfig={client_id:\"44089da06c95a868c4cb\",allow_signup:false,scope:\"read:user user:email\"};export var useAttemptLogin=function useAttemptLogin(login,history){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var handleSubmitNotSocial=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var userInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;event.preventDefault();userInfo={email:email,password:password};if(isEmail(email)){_context.next=5;break;}throw new Error(\"Entered Email form is wrong\");case 5:if(password){_context.next=7;break;}throw new Error(\"Password is empty\");case 7:_context.next=9;return login(userInfo,\"notSocial\");case 9:history.push(\"/\");_context.next=18;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);alert(_context.t0);setEmail(\"\");setPassword(\"\");history.push(\"/login\");case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function handleSubmitNotSocial(_x){return _ref.apply(this,arguments);};}();var authUrl=baseUrl+\"?\"+qs.stringify(authConfig);return{email:email,setEmail:setEmail,password:password,setPassword:setPassword,handleSubmitNotSocial:handleSubmitNotSocial,authUrl:authUrl};};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptLogin.js"],"names":["qs","useState","isEmail","baseUrl","authConfig","client_id","allow_signup","scope","useAttemptLogin","login","history","email","setEmail","password","setPassword","handleSubmitNotSocial","event","preventDefault","userInfo","Error","push","alert","authUrl","stringify"],"mappings":"udAAA,MAAOA,CAAAA,EAAP,KAAe,IAAf,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,GAAMC,CAAAA,OAAO,CAAG,0CAAhB,CACA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,SAAS,CAAE,sBADM,CAEjBC,YAAY,CAAE,KAFG,CAGjBC,KAAK,CAAE,sBAHU,CAAnB,CAMA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,OAAR,CAAoB,CACjD,cAA0BT,QAAQ,CAAC,EAAD,CAAlC,wCAAOU,KAAP,eAAcC,QAAd,eACA,eAAgCX,QAAQ,CAAC,EAAD,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,qBAAqB,0FAAG,iBAAOC,KAAP,+IAE1BA,KAAK,CAACC,cAAN,GACMC,QAHoB,CAGT,CAAEP,KAAK,CAALA,KAAF,CAASE,QAAQ,CAARA,QAAT,CAHS,IAIrBX,OAAO,CAACS,KAAD,CAJc,8BAIC,IAAIQ,CAAAA,KAAJ,CAAU,6BAAV,CAJD,WAKrBN,QALqB,8BAKL,IAAIM,CAAAA,KAAJ,CAAU,mBAAV,CALK,8BAMpBV,CAAAA,KAAK,CAACS,QAAD,CAAW,WAAX,CANe,QAO1BR,OAAO,CAACU,IAAR,CAAa,GAAb,EAP0B,iFAS1BC,KAAK,aAAL,CACAT,QAAQ,CAAC,EAAD,CAAR,CACAE,WAAW,CAAC,EAAD,CAAX,CACAJ,OAAO,CAACU,IAAR,CAAa,QAAb,EAZ0B,qEAAH,kBAArBL,CAAAA,qBAAqB,4CAA3B,CAeA,GAAMO,CAAAA,OAAO,CAAGnB,OAAO,CAAG,GAAV,CAAgBH,EAAE,CAACuB,SAAH,CAAanB,UAAb,CAAhC,CACA,MAAO,CACLO,KAAK,CAALA,KADK,CAELC,QAAQ,CAARA,QAFK,CAGLC,QAAQ,CAARA,QAHK,CAILC,WAAW,CAAXA,WAJK,CAKLC,qBAAqB,CAArBA,qBALK,CAMLO,OAAO,CAAPA,OANK,CAAP,CAQD,CA5BM","sourcesContent":["import qs from \"qs\";\nimport { useState } from \"react\";\nimport isEmail from \"validator/lib/isEmail\";\nconst baseUrl = \"https://github.com/login/oauth/authorize\";\nconst authConfig = {\n  client_id: \"44089da06c95a868c4cb\",\n  allow_signup: false,\n  scope: \"read:user user:email\",\n};\n\nexport const useAttemptLogin = (login, history) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmitNotSocial = async (event) => {\n    try {\n      event.preventDefault();\n      const userInfo = { email, password };\n      if (!isEmail(email)) throw new Error(\"Entered Email form is wrong\");\n      if (!password) throw new Error(\"Password is empty\");\n      await login(userInfo, \"notSocial\");\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      setEmail(\"\");\n      setPassword(\"\");\n      history.push(\"/login\");\n    }\n  };\n  const authUrl = baseUrl + \"?\" + qs.stringify(authConfig);\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleSubmitNotSocial,\n    authUrl,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}