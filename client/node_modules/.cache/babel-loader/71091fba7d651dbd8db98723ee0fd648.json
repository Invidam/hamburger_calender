{"ast":null,"code":"import axios from \"axios\";\nexport const getCustomConfig = () => {\n  const token = localStorage.getItem(\"access_token\");\n  const date = localStorage.getItem(\"date\");\n  const config = {\n    headers: {\n      \"x-access-token\": token,\n      \"x-access-date\": date\n    }\n  };\n  return config;\n};\nexport let API = axios.create(getCustomConfig());\nAPI.interceptors.response.use(res => {\n  return res;\n}, e => {\n  var _e$response;\n\n  if ((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 401) {\n    var _e$response2;\n\n    // alert();\n    throw new Error(`401 - Unauthorized\\n${(_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data}`);\n  } // alert(\"other err\");\n\n\n  throw new Error(e); // return Promise.reject(e);\n});\nexport const updateAPIHeader = () => {\n  API = axios.create(getCustomConfig());\n};\nexport class APIv2 {\n  static updateHeader() {\n    API = axios.create(getCustomConfig());\n  }\n\n  static recordTime(user, date, key) {\n    try {\n      const url = `/api/${user}/${date}/worklist/record-time/${key}`;\n      return {\n        get: async () => {\n          return await API.get(url);\n        },\n        create: async data => {\n          return await API.put(url, {\n            value: data\n          });\n        },\n        edit: async data => {\n          return await API.post(url, {\n            value: data\n          });\n        },\n        delete: async data => {\n          return await API.delete(url, {\n            data: {\n              value: data\n            }\n          });\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static workList(user, date) {\n    try {\n      const url = `/api/${user}/${date}/worklist/worklist`;\n      return {\n        get: async () => {\n          return await API.get(url);\n        },\n        create: async data => {\n          return await API.put(url, {\n            value: data\n          });\n        },\n        edit: async data => {\n          return await API.post(url, {\n            value: data\n          });\n        },\n        delete: async data => {\n          return await API.delete(url, {\n            data: {\n              value: data\n            }\n          });\n        },\n        update: async data => {\n          return await API.post(url + \"/update\", {\n            value: data\n          });\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n} //API.workList(\"SR\",\"1212-12-12\").create({ab:\"c\"});\n//SetWork({123:213}).delete();\n//Work().delte();","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/tools/API.js"],"names":["axios","getCustomConfig","token","localStorage","getItem","date","config","headers","API","create","interceptors","response","use","res","e","status","Error","data","updateAPIHeader","APIv2","updateHeader","recordTime","user","key","url","get","put","value","edit","post","delete","error","workList","update"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const getCustomConfig = () => {\n  const token = localStorage.getItem(\"access_token\");\n  const date = localStorage.getItem(\"date\");\n  const config = {\n    headers: { \"x-access-token\": token, \"x-access-date\": date },\n  };\n  return config;\n};\n\nexport let API = axios.create(getCustomConfig());\n\nAPI.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (e) => {\n    if (e?.response?.status === 401) {\n      // alert();\n      throw new Error(`401 - Unauthorized\\n${e.response?.data}`);\n    }\n    // alert(\"other err\");\n    throw new Error(e);\n    // return Promise.reject(e);\n  }\n);\n\nexport const updateAPIHeader = () => {\n  API = axios.create(getCustomConfig());\n};\nexport class APIv2 {\n  static updateHeader() {\n    API = axios.create(getCustomConfig());\n  }\n  static recordTime(user, date, key) {\n    try {\n      const url = `/api/${user}/${date}/worklist/record-time/${key}`;\n      return {\n        get: async () => {\n          return await API.get(url);\n        },\n        create: async (data) => {\n          return await API.put(url, { value: data });\n        },\n        edit: async (data) => {\n          return await API.post(url, { value: data });\n        },\n        delete: async (data) => {\n          return await API.delete(url, { data: { value: data } });\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static workList(user, date) {\n    try {\n      const url = `/api/${user}/${date}/worklist/worklist`;\n      return {\n        get: async () => {\n          return await API.get(url);\n        },\n        create: async (data) => {\n          return await API.put(url, { value: data });\n        },\n        edit: async (data) => {\n          return await API.post(url, { value: data });\n        },\n        delete: async (data) => {\n          return await API.delete(url, { data: { value: data } });\n        },\n        update: async (data) => {\n          return await API.post(url + \"/update\", { value: data });\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n//API.workList(\"SR\",\"1212-12-12\").create({ab:\"c\"});\n//SetWork({123:213}).delete();\n//Work().delte();\n"]},"metadata":{},"sourceType":"module"}