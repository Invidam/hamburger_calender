{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\nlet cancel = false;\nexport const useDateInfo = (user, date) => {\n  _s();\n\n  const [dateInfo, setDateInfo] = useState(); // const [activeDate, setActiveDate] = useState(undefined);\n  // const [isDateInfoLoad, setLoad] = useState(true);\n\n  const getUserInfo = async nextDate => {\n    try {\n      console.log(\"info, CANCEL?\", cancel);\n      if (!nextDate) return;\n      if (cancel) return; // console.log(\"info, NOT CANCEL\");\n\n      if (user) {\n        // setLoad(true);\n        const data = await API.workList(user, nextDate).dataInfo(); // setLoad(false);\n\n        if (!(data === null || data === void 0 ? void 0 : data.data)) throw new Error(\"Cannot found Your Work List\");\n        const response = data.data;\n        console.log(\"USER INFO SETTING STRAT\", nextDate, response);\n        setDateInfo(response);\n      } else {// setDateInfo();\n      }\n    } catch (error) {\n      // setDateInfo();\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"DATE INFO GET\", user, date);\n    getUserInfo(date);\n    return () => cancel = true;\n  }, [user, date]);\n  return [dateInfo, getUserInfo];\n};\n\n_s(useDateInfo, \"MUyrrWvecrS4z/SOnIQmiG8sWG8=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/hooks/calendar/useDateInfo.js"],"names":["useEffect","useState","API","cancel","useDateInfo","user","date","dateInfo","setDateInfo","getUserInfo","nextDate","console","log","data","workList","dataInfo","Error","response","error","alert"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,IAAIC,MAAM,GAAG,KAAb;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC,CADyC,CAGzC;AACA;;AAEA,QAAMQ,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,MAA7B;AACA,UAAI,CAACO,QAAL,EAAe;AACf,UAAIP,MAAJ,EAAY,OAHV,CAIF;;AACA,UAAIE,IAAJ,EAAU;AACR;AACA,cAAMQ,IAAI,GAAG,MAAMX,GAAG,CAACY,QAAJ,CAAaT,IAAb,EAAmBK,QAAnB,EAA6BK,QAA7B,EAAnB,CAFQ,CAGR;;AACA,YAAI,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAJ,EAAiB,MAAM,IAAIG,KAAJ,CAAU,6BAAV,CAAN;AACjB,cAAMC,QAAQ,GAAGJ,IAAI,CAACA,IAAtB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,QAAvC,EAAiDO,QAAjD;AACAT,QAAAA,WAAW,CAACS,QAAD,CAAX;AACD,OARD,MAQO,CACL;AACD;AACF,KAhBD,CAgBE,OAAOC,KAAP,EAAc;AACd;AACAC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,GArBD;;AAsBAlB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,IAA7B,EAAmCC,IAAnC;AACAG,IAAAA,WAAW,CAACH,IAAD,CAAX;AAEA,WAAO,MAAOH,MAAM,GAAG,IAAvB;AACD,GALQ,EAKN,CAACE,IAAD,EAAOC,IAAP,CALM,CAAT;AAMA,SAAO,CAACC,QAAD,EAAWE,WAAX,CAAP;AACD,CAnCM;;GAAML,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API } from \"../../tools/API\";\nlet cancel = false;\nexport const useDateInfo = (user, date) => {\n  const [dateInfo, setDateInfo] = useState();\n\n  // const [activeDate, setActiveDate] = useState(undefined);\n  // const [isDateInfoLoad, setLoad] = useState(true);\n\n  const getUserInfo = async (nextDate) => {\n    try {\n      console.log(\"info, CANCEL?\", cancel);\n      if (!nextDate) return;\n      if (cancel) return;\n      // console.log(\"info, NOT CANCEL\");\n      if (user) {\n        // setLoad(true);\n        const data = await API.workList(user, nextDate).dataInfo();\n        // setLoad(false);\n        if (!data?.data) throw new Error(\"Cannot found Your Work List\");\n        const response = data.data;\n        console.log(\"USER INFO SETTING STRAT\", nextDate, response);\n        setDateInfo(response);\n      } else {\n        // setDateInfo();\n      }\n    } catch (error) {\n      // setDateInfo();\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"DATE INFO GET\", user, date);\n    getUserInfo(date);\n\n    return () => (cancel = true);\n  }, [user, date]);\n  return [dateInfo, getUserInfo];\n};\n"]},"metadata":{},"sourceType":"module"}