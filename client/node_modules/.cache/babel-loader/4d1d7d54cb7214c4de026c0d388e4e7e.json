{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";// import { API } from \"../../../tools/API\";\nimport randomToken from\"rand-token\";export var usePushWork=function usePushWork(_ref){var setWork=_ref.setWork,callback=_ref.callback;var _useState=useState(),_useState2=_slicedToArray(_useState,2),workColor=_useState2[0],setColor=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),workName=_useState4[0],setWorkName=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),workTime=_useState6[0],setWorkTime=_useState6[1];var hexToRgba=function hexToRgba(color){var r=parseInt(color.substr(1,2),16);var g=parseInt(color.substr(3,2),16);var b=parseInt(color.substr(5,2),16);return\"rgba(\"+r+\",\"+g+\",\"+b+\", 1)\";};var onChangeWorkColor=function onChangeWorkColor(color){if(!color){}else if(color.substr(0,1)===\"#\"){color=hexToRgba(color);}setColor(color);};var onChangeWorkName=function onChangeWorkName(name){return setWorkName(name);};var onChangeWorkTime=function onChangeWorkTime(time){return setWorkTime(parseInt(time));};var validator=function validator(workItem){return workItem.workName&&workItem.workTime&&workItem.workColor;};var pushWorkItem=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(workItem){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return setWork(workItem).create();case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function pushWorkItem(_x){return _ref2.apply(this,arguments);};}();var getErrText=function getErrText(){var errText=\"[ERROR] \".concat(workName?\"\":\"WorkName\").concat(!workTime+!workColor>0&&!workName?\", \":\"\").concat(workTime?\"\":\"WorkTime\").concat(!workColor>0&&!workTime?\", \":\"\").concat(workColor?\"\":\"WorkColor\",\" \").concat(!workName+!workTime+!workColor>1?\"are\":\"is\",\" not entered.\");return errText;};var onSubmitWork=function onSubmitWork(event){try{event.preventDefault();// const workName = event.target.workName.value;\n// const workTime = parseInt(event.target.workTime.value);\nvar id=Date.now().toString(16)+randomToken.generate(5);var workItem={workName:workName,workTime:workTime,workColor:workColor,id:id};var willUpdate=true;if(typeof validator===\"function\")willUpdate=validator(workItem);if(willUpdate){callback();pushWorkItem(workItem);}else{throw new Error(getErrText());}}catch(error){alert(error);}};return{onChangeWorkColor:onChangeWorkColor,onChangeWorkName:onChangeWorkName,onChangeWorkTime:onChangeWorkTime,onSubmitWork:onSubmitWork};};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/usePushWork.js"],"names":["useState","randomToken","usePushWork","setWork","callback","workColor","setColor","workName","setWorkName","workTime","setWorkTime","hexToRgba","color","r","parseInt","substr","g","b","onChangeWorkColor","onChangeWorkName","name","onChangeWorkTime","time","validator","workItem","pushWorkItem","create","getErrText","errText","onSubmitWork","event","preventDefault","id","Date","now","toString","generate","willUpdate","Error","error","alert"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n// import { API } from \"../../../tools/API\";\nimport randomToken from \"rand-token\";\nexport const usePushWork = ({ setWork, callback }) => {\n  const [workColor, setColor] = useState();\n  const [workName, setWorkName] = useState();\n  const [workTime, setWorkTime] = useState();\n\n  const hexToRgba = (color) => {\n    const r = parseInt(color.substr(1, 2), 16);\n    const g = parseInt(color.substr(3, 2), 16);\n    const b = parseInt(color.substr(5, 2), 16);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \", 1)\";\n  };\n\n  const onChangeWorkColor = (color) => {\n    if (!color) {\n    } else if (color.substr(0, 1) === \"#\") {\n      color = hexToRgba(color);\n    }\n    setColor(color);\n  };\n  const onChangeWorkName = (name) => setWorkName(name);\n  const onChangeWorkTime = (time) => setWorkTime(parseInt(time));\n  const validator = (workItem) => {\n    return workItem.workName && workItem.workTime && workItem.workColor;\n  };\n  const pushWorkItem = async (workItem) => await setWork(workItem).create();\n\n  const getErrText = () => {\n    let errText = `[ERROR] ${workName ? \"\" : \"WorkName\"}${\n      !workTime + !workColor > 0 && !workName ? \", \" : \"\"\n    }${workTime ? \"\" : \"WorkTime\"}${!workColor > 0 && !workTime ? \", \" : \"\"}${\n      workColor ? \"\" : \"WorkColor\"\n    } ${!workName + !workTime + !workColor > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n  const onSubmitWork = (event) => {\n    try {\n      event.preventDefault();\n      // const workName = event.target.workName.value;\n      // const workTime = parseInt(event.target.workTime.value);\n      const id = Date.now().toString(16) + randomToken.generate(5);\n\n      const workItem = { workName, workTime, workColor, id };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(workItem);\n      if (willUpdate) {\n        callback();\n        pushWorkItem(workItem);\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return {\n    onChangeWorkColor,\n    onChangeWorkName,\n    onChangeWorkTime,\n    onSubmitWork,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}