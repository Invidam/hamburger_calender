{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/WorkListGrade.js\",\n    _s = $RefreshSig$();\n\nimport StarRatings from \"react-star-ratings\";\nimport { useWorkListGrade } from \"../../../hooks/workList/useWorkListGrade\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst starElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"work-icon__star\",\n  icon: faStar,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\nexport const WorkListGrade = ({\n  user,\n  date\n}) => {\n  _s();\n\n  const [grade, difference, target, value, isGradeLoading, updateInfo] = useWorkListGrade(user, date);\n\n  const getGradeSum = () => grade ? Object.values(grade).reduce((prev, value) => prev += value, 0) : 0;\n\n  const gradeElement = /*#__PURE__*/_jsxDEV(StarRatings, {\n    rating: getGradeSum() | 0,\n    starRatedColor: \"rgb(224, 200, 47)\",\n    starHoverColor: \"rgb(224, 200, 47)\",\n    starEmptyColor: \"rgba(133, 133, 133, 1)\",\n    starSelectingHoverColor: \"red\",\n    numberOfStars: 5,\n    name: \"workList-grade\",\n    starDimension: \"128px\",\n    starSpacing: \"16px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n\n  const tooltipElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grade-tooltip-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grade-tooltip-box\",\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  const getGradeBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: updateInfo,\n    children: \" Get Grade! \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n\n  const displayGrade = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tooltip\",\n    children: [\" \", starElement, gradeElement, \" \", tooltipElement, \" | update\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  return grade ? displayGrade : getGradeBtn;\n};\n\n_s(WorkListGrade, \"OdxERPs4OLF945g2+zvNVozDjcs=\", false, function () {\n  return [useWorkListGrade];\n});\n\n_c = WorkListGrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListGrade\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/WorkListGrade.js"],"names":["StarRatings","useWorkListGrade","faStar","FontAwesomeIcon","starElement","WorkListGrade","user","date","grade","difference","target","value","isGradeLoading","updateInfo","getGradeSum","Object","values","reduce","prev","gradeElement","tooltipElement","getGradeBtn","displayGrade"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,0CAAjC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAe,qCAAf;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AACA,MAAMC,WAAW,gBACf,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,iBAA3B;AAA6C,EAAA,IAAI,EAAEF,MAAnD;AAA2D,EAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,QADF;;AAIA,OAAO,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,UAAR,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,cAAnC,EAAmDC,UAAnD,IACJZ,gBAAgB,CAACK,IAAD,EAAOC,IAAP,CADlB;;AAEA,QAAMO,WAAW,GAAG,MAClBN,KAAK,GACDO,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqBS,MAArB,CAA4B,CAACC,IAAD,EAAOP,KAAP,KAAkBO,IAAI,IAAIP,KAAtD,EAA8D,CAA9D,CADC,GAED,CAHN;;AAIA,QAAMQ,YAAY,gBAChB,QAAC,WAAD;AACE,IAAA,MAAM,EAAEL,WAAW,KAAK,CAD1B;AAEE,IAAA,cAAc,EAAC,mBAFjB;AAGE,IAAA,cAAc,EAAC,mBAHjB;AAIE,IAAA,cAAc,EAAC,wBAJjB;AAKE,IAAA,uBAAuB,EAAC,KAL1B;AAME,IAAA,aAAa,EAAE,CANjB;AAOE,IAAA,IAAI,EAAC,gBAPP;AAQE,IAAA,aAAa,EAAC,OARhB;AASE,IAAA,WAAW,EAAC;AATd;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,QAAMM,cAAc,gBAClB;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,QAAMC,WAAW,gBAAG;AAAQ,IAAA,OAAO,EAAER,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB;;AACA,QAAMS,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACG,GADH,EAEGlB,WAFH,EAGGe,YAHH,OAGkBC,cAHlB,eAG2C,GAH3C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,SAAOZ,KAAK,GAAGc,YAAH,GAAkBD,WAA9B;AACD,CAnCM;;GAAMhB,a;UAETJ,gB;;;KAFSI,a","sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport { useWorkListGrade } from \"../../../hooks/workList/useWorkListGrade\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport {} from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst starElement = (\n  <FontAwesomeIcon className=\"work-icon__star\" icon={faStar} size=\"1x\" />\n);\n\nexport const WorkListGrade = ({ user, date }) => {\n  const [grade, difference, target, value, isGradeLoading, updateInfo] =\n    useWorkListGrade(user, date);\n  const getGradeSum = () =>\n    grade\n      ? Object.values(grade).reduce((prev, value) => (prev += value), 0)\n      : 0;\n  const gradeElement = (\n    <StarRatings\n      rating={getGradeSum() | 0}\n      starRatedColor=\"rgb(224, 200, 47)\"\n      starHoverColor=\"rgb(224, 200, 47)\"\n      starEmptyColor=\"rgba(133, 133, 133, 1)\"\n      starSelectingHoverColor=\"red\"\n      numberOfStars={5}\n      name=\"workList-grade\"\n      starDimension=\"128px\"\n      starSpacing=\"16px\"\n    />\n  );\n  const tooltipElement = (\n    <div className=\"grade-tooltip-content\">\n      <div className=\"grade-tooltip-box\">test</div>\n    </div>\n  );\n\n  const getGradeBtn = <button onClick={updateInfo}> Get Grade! </button>;\n  const displayGrade = (\n    <div className=\"tooltip\">\n      {\" \"}\n      {starElement}\n      {gradeElement} {tooltipElement} | update{\" \"}\n    </div>\n  );\n  return grade ? displayGrade : getGradeBtn;\n};\n"]},"metadata":{},"sourceType":"module"}