{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useTodo = setTodoList => {\n  _s();\n\n  const [isCheck, setCheck] = useState();\n  const [content, setContent] = useState();\n  const [date, setDate] = useState();\n  const [priority, setPriority] = useState();\n\n  const onClickCheck = () => setCheck(!isCheck);\n\n  const onChangeContent = content => setContent(content);\n\n  const onChangeDate = date => setDate(date); //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n\n  const onChangePriority = event => {\n    try {\n      event.preventDefault();\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n\n_s(useTodo, \"wKLG4s8ucK8H6LsayS3y6K5TBww=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodo.js"],"names":["useState","useTodo","setTodoList","isCheck","setCheck","content","setContent","date","setDate","priority","setPriority","onClickCheck","onChangeContent","onChangeDate","onChangePriority","event","preventDefault","error","alert"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,OAAO,GAAIC,WAAD,IAAiB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,QAAQ,EAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,EAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;;AAEA,QAAMW,YAAY,GAAG,MAAMP,QAAQ,CAAC,CAACD,OAAF,CAAnC;;AACA,QAAMS,eAAe,GAAIP,OAAD,IAAaC,UAAU,CAACD,OAAD,CAA/C;;AACA,QAAMQ,YAAY,GAAIN,IAAD,IAAUC,OAAO,CAACD,IAAD,CAAtC,CARsC,CAStC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAI;AACFA,MAAAA,KAAK,CAACC,cAAN;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,GAND;;AAOA,SAAO,CAACN,YAAD,EAAeC,eAAf,EAAgCC,YAAhC,EAA8CC,gBAA9C,CAAP;AACD,CAzBM;;GAAMb,O","sourcesContent":["import { useState } from \"react\";\n\nexport const useTodo = (setTodoList) => {\n  const [isCheck, setCheck] = useState();\n  const [content, setContent] = useState();\n  const [date, setDate] = useState();\n  const [priority, setPriority] = useState();\n\n  const onClickCheck = () => setCheck(!isCheck);\n  const onChangeContent = (content) => setContent(content);\n  const onChangeDate = (date) => setDate(date);\n  //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n  const onChangePriority = (event) => {\n    try {\n      event.preventDefault();\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n"]},"metadata":{},"sourceType":"module"}