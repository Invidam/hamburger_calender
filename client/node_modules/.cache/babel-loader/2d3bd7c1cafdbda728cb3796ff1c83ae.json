{"ast":null,"code":"export const useEditTime = (recordTime, updateRecordTime, isWake, callback) => {\n  const validator = timeObj => {\n    return timeObj.hour && timeObj.minute;\n  };\n\n  const onEditRecordTime = (event, idx) => {\n    event.preventDefault();\n    const hour = event.target.hour.value;\n    const minute = parseInt(event.target.minute.value);\n    const timeObj = {\n      hour,\n      minute\n    };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(timeObj);\n\n    if (willUpdate) {\n      callback();\n      updateRecordTime(timeObj);\n    } else {\n      console.log(timeObj);\n      console.log(\"NOT CHOOSED\");\n      let errText = `${isWake ? \"WakeTime\" : \"BedTime\"} is not entered.`;\n      alert(errText);\n    }\n  };\n\n  return {\n    onEditRecordTime\n  };\n};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/useEditTime.js"],"names":["useEditTime","recordTime","updateRecordTime","isWake","callback","validator","timeObj","hour","minute","onEditRecordTime","event","idx","preventDefault","target","value","parseInt","willUpdate","console","log","errText","alert"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,UAAD,EAAaC,gBAAb,EAA+BC,MAA/B,EAAuCC,QAAvC,KAAoD;AAC7E,QAAMC,SAAS,GAAIC,OAAD,IAAa;AAC7B,WAAOA,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACE,MAA/B;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACvCD,IAAAA,KAAK,CAACE,cAAN;AACA,UAAML,IAAI,GAAGG,KAAK,CAACG,MAAN,CAAaN,IAAb,CAAkBO,KAA/B;AACA,UAAMN,MAAM,GAAGO,QAAQ,CAACL,KAAK,CAACG,MAAN,CAAaL,MAAb,CAAoBM,KAArB,CAAvB;AACA,UAAMR,OAAO,GAAG;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB;AACA,QAAIQ,UAAU,GAAG,IAAjB;AACA,QAAI,OAAOX,SAAP,KAAqB,UAAzB,EAAqCW,UAAU,GAAGX,SAAS,CAACC,OAAD,CAAtB;;AACrC,QAAIU,UAAJ,EAAgB;AACdZ,MAAAA,QAAQ;AACRF,MAAAA,gBAAgB,CAACI,OAAD,CAAhB;AACD,KAHD,MAGO;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIC,OAAO,GAAI,GAAEhB,MAAM,GAAG,UAAH,GAAgB,SAAU,kBAAjD;AACAiB,MAAAA,KAAK,CAACD,OAAD,CAAL;AACD;AACF,GAhBD;;AAiBA,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACD,CAtBM","sourcesContent":["export const useEditTime = (recordTime, updateRecordTime, isWake, callback) => {\n  const validator = (timeObj) => {\n    return timeObj.hour && timeObj.minute;\n  };\n  const onEditRecordTime = (event, idx) => {\n    event.preventDefault();\n    const hour = event.target.hour.value;\n    const minute = parseInt(event.target.minute.value);\n    const timeObj = { hour, minute };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(timeObj);\n    if (willUpdate) {\n      callback();\n      updateRecordTime(timeObj);\n    } else {\n      console.log(timeObj);\n      console.log(\"NOT CHOOSED\");\n      let errText = `${isWake ? \"WakeTime\" : \"BedTime\"} is not entered.`;\n      alert(errText);\n    }\n  };\n  return { onEditRecordTime };\n};\n"]},"metadata":{},"sourceType":"module"}