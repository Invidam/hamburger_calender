{"ast":null,"code":"const {\n  strict: assert\n} = require('assert');\n\nconst {\n  Reporter\n} = require('../base/reporter');\n\nconst {\n  DecoderBuffer,\n  EncoderBuffer\n} = require('../base/buffer'); // Supported tags\n\n\nconst tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr']; // Public methods list\n\nconst methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags); // Overrided methods list\n\nconst overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n  state.name = name;\n  state.enc = enc;\n  state.parent = parent || null;\n  state.children = null; // State\n\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state.default = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null; // Should create new instance on each method\n\n  if (!state.parent) {\n    state.children = [];\n\n    this._wrap();\n  }\n}\n\nconst stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n  assert(state.parent === null);\n  body.call(this); // Filter children\n\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState; // Filter children and args\n\n  const children = args.filter(function (arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children; // Replace parent to maintain backward link\n\n    children.forEach(function (child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) {\n        return arg;\n      }\n\n      const res = {};\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) {\n          key |= 0;\n        } // eslint-disable-line eqeqeq\n\n\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n}; //\n// Overrided methods\n//\n\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(`${method} not implemented for encoding: ${state.enc}`);\n  };\n}); //\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n  assert(state.use === null);\n  state.use = item;\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n  state.optional = true;\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n  assert(state.default === null);\n  state.default = val;\n  state.optional = true;\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n  state.obj = true;\n\n  if (args.length !== 0) {\n    this._useArgs(args);\n  }\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n  assert(state.key === null);\n  state.key = newKey;\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n  state.any = true;\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n  assert(state.choice === null);\n  state.choice = obj;\n\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n  assert(state.use === null);\n  state.contains = item;\n  return this;\n}; //\n// Decoding\n//\n\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState; // Decode root node\n\n  if (state.parent === null) {\n    return input.wrapResult(state.children[0]._decode(input, options));\n  }\n\n  let result = state.default;\n  let present = true;\n  let prevKey = null;\n\n  if (state.key !== null) {\n    prevKey = input.enterKey(state.key);\n  } // Check if tag is there\n\n\n  if (state.optional) {\n    let tag = null;\n\n    if (state.explicit !== null) {\n      tag = state.explicit;\n    } else if (state.implicit !== null) {\n      tag = state.implicit;\n    } else if (state.tag !== null) {\n      tag = state.tag;\n    }\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n\n      try {\n        if (state.choice === null) {\n          this._decodeGeneric(state.tag, input, options);\n        } else {\n          this._decodeChoice(input, options);\n        }\n\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present)) {\n        return present;\n      }\n    }\n  } // Push object on stack\n\n\n  let prevObj;\n\n  if (state.obj && present) {\n    prevObj = input.enterObject();\n  }\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n\n      if (input.isError(explicit)) {\n        return explicit;\n      }\n\n      input = explicit;\n    }\n\n    const start = input.offset; // Unwrap implicit and normal values\n\n    if (state.use === null && state.choice === null) {\n      let save;\n\n      if (state.any) {\n        save = input.save();\n      }\n\n      const body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);\n\n      if (input.isError(body)) {\n        return body;\n      }\n\n      if (state.any) {\n        result = input.raw(save);\n      } else {\n        input = body;\n      }\n    }\n\n    if (options && options.track && state.tag !== null) {\n      options.track(input.path(), start, input.length, 'tagged');\n    }\n\n    if (options && options.track && state.tag !== null) {\n      options.track(input.path(), input.offset, input.length, 'content');\n    } // Select proper method for tag\n\n\n    if (state.any) {// no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result)) {\n      return result;\n    } // Decode children\n\n\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    } // Decode contained/encoded by schema, only in bit or octet strings\n\n\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);\n    }\n  } // Pop object\n\n\n  if (state.obj && present) {\n    result = input.leaveObject(prevObj);\n  } // Set key\n\n\n  if (state.key !== null && (result !== null || present === true)) {\n    input.leaveKey(prevKey, state.key, result);\n  } else if (prevKey !== null) {\n    input.exitKey(prevKey);\n  }\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set') {\n    return null;\n  }\n\n  if (tag === 'seqof' || tag === 'setof') {\n    return this._decodeList(input, tag, state.args[0], options);\n  } else if (/str$/.test(tag)) {\n    return this._decodeStr(input, tag, options);\n  } else if (tag === 'objid' && state.args) {\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  } else if (tag === 'objid') {\n    return this._decodeObjid(input, null, null, options);\n  } else if (tag === 'gentime' || tag === 'utctime') {\n    return this._decodeTime(input, tag, options);\n  } else if (tag === 'null_') {\n    return this._decodeNull(input, options);\n  } else if (tag === 'bool') {\n    return this._decodeBool(input, options);\n  } else if (tag === 'objDesc') {\n    return this._decodeStr(input, tag, options);\n  } else if (tag === 'int' || tag === 'enum') {\n    return this._decodeInt(input, state.args && state.args[0], options);\n  }\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)._decode(input, options);\n  } else {\n    return input.error(`unknown tag: ${tag}`);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n  const state = this._baseState; // Create altered use decoder if implicit is set\n\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n  Object.keys(state.choice).some(function (key) {\n    const save = input.save();\n    const node = state.choice[key];\n\n    try {\n      const value = node._decode(input, options);\n\n      if (input.isError(value)) {\n        return false;\n      }\n\n      result = {\n        type: key,\n        value: value\n      };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n\n    return true;\n  }, this);\n\n  if (!match) {\n    return input.error('Choice not matched');\n  }\n\n  return result;\n}; //\n// Encoding\n//\n\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  if (state.default !== null && state.default === data) {\n    return;\n  }\n\n  const result = this._encodeValue(data, reporter, parent);\n\n  if (result === undefined) {\n    return;\n  }\n\n  if (this._skipDefault(result, reporter, parent)) {\n    return;\n  }\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState; // Decode root node\n\n  if (state.parent === null) {\n    return state.children[0]._encode(data, reporter || new Reporter());\n  }\n\n  let result = null; // Set reporter to share it with a child class\n\n  this.reporter = reporter; // Check if data is there\n\n  if (state.optional && data === undefined) {\n    if (state.default !== null) {\n      data = state.default;\n    } else {\n      return;\n    }\n  } // Encode children first\n\n\n  let content = null;\n  let primitive = false;\n\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') {\n        return child._encode(null, reporter, data);\n      }\n\n      if (child._baseState.key === null) {\n        return reporter.error('Child should have a key');\n      }\n\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object') {\n        return reporter.error('Child expected, but input is not object');\n      }\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n\n      reporter.leaveKey(prevKey);\n      return res;\n    }, this).filter(function (child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      if (!(state.args && state.args.length === 1)) {\n        return reporter.error(`Too many args for: ${state.tag}`);\n      }\n\n      if (!Array.isArray(data)) {\n        return reporter.error('seqof/setof, but data is not Array');\n      }\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function (item) {\n        const state = this._baseState;\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  } // Encode data itself\n\n\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null) {\n        reporter.error('Tag could be omitted only for .use()');\n      }\n    } else {\n      if (state.use === null) {\n        result = this._encodeComposite(tag, primitive, cls, content);\n      }\n    }\n  } // Wrap in explicit\n\n\n  if (state.explicit !== null) {\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n  }\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n  const node = state.choice[data.type];\n\n  if (!node) {\n    assert(false, `${data.type} not found in ${JSON.stringify(Object.keys(state.choice))}`);\n  }\n\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag)) {\n    return this._encodeStr(data, tag);\n  } else if (tag === 'objid' && state.args) {\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  } else if (tag === 'objid') {\n    return this._encodeObjid(data, null, null);\n  } else if (tag === 'gentime' || tag === 'utctime') {\n    return this._encodeTime(data, tag);\n  } else if (tag === 'null_') {\n    return this._encodeNull();\n  } else if (tag === 'int' || tag === 'enum') {\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  } else if (tag === 'bool') {\n    return this._encodeBool(data);\n  } else if (tag === 'objDesc') {\n    return this._encodeStr(data, tag);\n  } else {\n    throw new Error(`Unsupported tag: ${tag}`);\n  }\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n\nmodule.exports = Node;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/@panva/asn1.js/lib/asn1/base/node.js"],"names":["strict","assert","require","Reporter","DecoderBuffer","EncoderBuffer","tags","methods","concat","overrided","Node","enc","parent","name","state","_baseState","children","tag","args","reverseArgs","choice","optional","any","obj","use","useDecoder","key","default","explicit","implicit","contains","_wrap","stateProps","prototype","clone","cstate","forEach","prop","res","constructor","wrap","method","_wrappedMethod","push","apply","arguments","_init","init","body","call","filter","child","equal","length","_useArgs","useArgs","arg","map","Object","keys","value","_overrided","Error","_tagMethod","Array","slice","item","def","val","num","newKey","_decode","decode","input","options","wrapResult","result","present","prevKey","enterKey","save","_decodeGeneric","_decodeChoice","e","restore","_peekTag","isError","prevObj","enterObject","_decodeTag","start","offset","raw","track","path","decodeChildren","data","_getUse","_reporterState","leaveObject","leaveKey","exitKey","decodeGeneric","_decodeList","test","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeBool","_decodeInt","error","entity","_use","decodeChoice","match","some","node","type","_createEncoderBuffer","createEncoderBuffer","reporter","_encode","encode","_encodeValue","undefined","_skipDefault","content","primitive","_encodeChoice","isArray","_encodePrimitive","cls","_encodeComposite","encodeChoice","JSON","stringify","encodePrimitive","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool","_isNumstr","isNumstr","str","_isPrintstr","isPrintstr","module","exports"],"mappings":"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","sourcesContent":["const { strict: assert } = require('assert')\n\nconst { Reporter } = require('../base/reporter')\nconst { DecoderBuffer, EncoderBuffer } = require('../base/buffer')\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n]\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags)\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n]\n\nfunction Node (enc, parent, name) {\n  const state = {}\n  this._baseState = state\n\n  state.name = name\n  state.enc = enc\n\n  state.parent = parent || null\n  state.children = null\n\n  // State\n  state.tag = null\n  state.args = null\n  state.reverseArgs = null\n  state.choice = null\n  state.optional = false\n  state.any = false\n  state.obj = false\n  state.use = null\n  state.useDecoder = null\n  state.key = null\n  state.default = null\n  state.explicit = null\n  state.implicit = null\n  state.contains = null\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = []\n    this._wrap()\n  }\n}\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n]\n\nNode.prototype.clone = function clone () {\n  const state = this._baseState\n  const cstate = {}\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop]\n  })\n  const res = new this.constructor(cstate.parent)\n  res._baseState = cstate\n  return res\n}\n\nNode.prototype._wrap = function wrap () {\n  const state = this._baseState\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod () {\n      const clone = new this.constructor(this)\n      state.children.push(clone)\n      return clone[method].apply(clone, arguments)\n    }\n  }, this)\n}\n\nNode.prototype._init = function init (body) {\n  const state = this._baseState\n\n  assert(state.parent === null)\n  body.call(this)\n\n  // Filter children\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this\n  }, this)\n  assert.equal(state.children.length, 1, 'Root node can have only one child')\n}\n\nNode.prototype._useArgs = function useArgs (args) {\n  const state = this._baseState\n\n  // Filter children and args\n  const children = args.filter(function (arg) {\n    return arg instanceof this.constructor\n  }, this)\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor)\n  }, this)\n\n  if (children.length !== 0) {\n    assert(state.children === null)\n    state.children = children\n\n    // Replace parent to maintain backward link\n    children.forEach(function (child) {\n      child._baseState.parent = this\n    }, this)\n  }\n  if (args.length !== 0) {\n    assert(state.args === null)\n    state.args = args\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) { return arg }\n\n      const res = {}\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) { key |= 0 } // eslint-disable-line eqeqeq\n        const value = arg[key]\n        res[value] = key\n      })\n      return res\n    })\n  }\n}\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided () {\n    const state = this._baseState\n    throw new Error(`${method} not implemented for encoding: ${state.enc}`)\n  }\n})\n\n//\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod () {\n    const state = this._baseState\n    const args = Array.prototype.slice.call(arguments)\n\n    assert(state.tag === null)\n    state.tag = tag\n\n    this._useArgs(args)\n\n    return this\n  }\n})\n\nNode.prototype.use = function use (item) {\n  assert(item)\n  const state = this._baseState\n\n  assert(state.use === null)\n  state.use = item\n\n  return this\n}\n\nNode.prototype.optional = function optional () {\n  const state = this._baseState\n\n  state.optional = true\n\n  return this\n}\n\nNode.prototype.def = function def (val) {\n  const state = this._baseState\n\n  assert(state.default === null)\n  state.default = val\n  state.optional = true\n\n  return this\n}\n\nNode.prototype.explicit = function explicit (num) {\n  const state = this._baseState\n\n  assert(state.explicit === null && state.implicit === null)\n  state.explicit = num\n\n  return this\n}\n\nNode.prototype.implicit = function implicit (num) {\n  const state = this._baseState\n\n  assert(state.explicit === null && state.implicit === null)\n  state.implicit = num\n\n  return this\n}\n\nNode.prototype.obj = function obj () {\n  const state = this._baseState\n  const args = Array.prototype.slice.call(arguments)\n\n  state.obj = true\n\n  if (args.length !== 0) { this._useArgs(args) }\n\n  return this\n}\n\nNode.prototype.key = function key (newKey) {\n  const state = this._baseState\n\n  assert(state.key === null)\n  state.key = newKey\n\n  return this\n}\n\nNode.prototype.any = function any () {\n  const state = this._baseState\n\n  state.any = true\n\n  return this\n}\n\nNode.prototype.choice = function choice (obj) {\n  const state = this._baseState\n\n  assert(state.choice === null)\n  state.choice = obj\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key]\n  }))\n\n  return this\n}\n\nNode.prototype.contains = function contains (item) {\n  const state = this._baseState\n\n  assert(state.use === null)\n  state.contains = item\n\n  return this\n}\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode (input, options) {\n  const state = this._baseState\n\n  // Decode root node\n  if (state.parent === null) { return input.wrapResult(state.children[0]._decode(input, options)) }\n\n  let result = state.default\n  let present = true\n\n  let prevKey = null\n  if (state.key !== null) { prevKey = input.enterKey(state.key) }\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null\n    if (state.explicit !== null) { tag = state.explicit } else if (state.implicit !== null) { tag = state.implicit } else if (state.tag !== null) { tag = state.tag }\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save()\n      try {\n        if (state.choice === null) { this._decodeGeneric(state.tag, input, options) } else { this._decodeChoice(input, options) }\n        present = true\n      } catch (e) {\n        present = false\n      }\n      input.restore(save)\n    } else {\n      present = this._peekTag(input, tag, state.any)\n\n      if (input.isError(present)) { return present }\n    }\n  }\n\n  // Push object on stack\n  let prevObj\n  if (state.obj && present) { prevObj = input.enterObject() }\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit)\n      if (input.isError(explicit)) { return explicit }\n      input = explicit\n    }\n\n    const start = input.offset\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save\n      if (state.any) { save = input.save() }\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      )\n      if (input.isError(body)) { return body }\n\n      if (state.any) { result = input.raw(save) } else { input = body }\n    }\n\n    if (options && options.track && state.tag !== null) { options.track(input.path(), start, input.length, 'tagged') }\n\n    if (options && options.track && state.tag !== null) { options.track(input.path(), input.offset, input.length, 'content') }\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options)\n    } else {\n      result = this._decodeChoice(input, options)\n    }\n\n    if (input.isError(result)) { return result }\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren (child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options)\n      })\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result)\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options)\n    }\n  }\n\n  // Pop object\n  if (state.obj && present) { result = input.leaveObject(prevObj) }\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true)) { input.leaveKey(prevKey, state.key, result) } else if (prevKey !== null) { input.exitKey(prevKey) }\n\n  return result\n}\n\nNode.prototype._decodeGeneric = function decodeGeneric (tag, input, options) {\n  const state = this._baseState\n\n  if (tag === 'seq' || tag === 'set') { return null }\n  if (tag === 'seqof' || tag === 'setof') { return this._decodeList(input, tag, state.args[0], options) } else if (/str$/.test(tag)) { return this._decodeStr(input, tag, options) } else if (tag === 'objid' && state.args) { return this._decodeObjid(input, state.args[0], state.args[1], options) } else if (tag === 'objid') { return this._decodeObjid(input, null, null, options) } else if (tag === 'gentime' || tag === 'utctime') { return this._decodeTime(input, tag, options) } else if (tag === 'null_') { return this._decodeNull(input, options) } else if (tag === 'bool') { return this._decodeBool(input, options) } else if (tag === 'objDesc') { return this._decodeStr(input, tag, options) } else if (tag === 'int' || tag === 'enum') { return this._decodeInt(input, state.args && state.args[0], options) }\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options)\n  } else {\n    return input.error(`unknown tag: ${tag}`)\n  }\n}\n\nNode.prototype._getUse = function _getUse (entity, obj) {\n  const state = this._baseState\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj)\n  assert(state.useDecoder._baseState.parent === null)\n  state.useDecoder = state.useDecoder._baseState.children[0]\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone()\n    state.useDecoder._baseState.implicit = state.implicit\n  }\n  return state.useDecoder\n}\n\nNode.prototype._decodeChoice = function decodeChoice (input, options) {\n  const state = this._baseState\n  let result = null\n  let match = false\n\n  Object.keys(state.choice).some(function (key) {\n    const save = input.save()\n    const node = state.choice[key]\n    try {\n      const value = node._decode(input, options)\n      if (input.isError(value)) { return false }\n\n      result = { type: key, value: value }\n      match = true\n    } catch (e) {\n      input.restore(save)\n      return false\n    }\n    return true\n  }, this)\n\n  if (!match) { return input.error('Choice not matched') }\n\n  return result\n}\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer (data) {\n  return new EncoderBuffer(data, this.reporter)\n}\n\nNode.prototype._encode = function encode (data, reporter, parent) {\n  const state = this._baseState\n  if (state.default !== null && state.default === data) { return }\n\n  const result = this._encodeValue(data, reporter, parent)\n  if (result === undefined) { return }\n\n  if (this._skipDefault(result, reporter, parent)) { return }\n\n  return result\n}\n\nNode.prototype._encodeValue = function encode (data, reporter, parent) {\n  const state = this._baseState\n\n  // Decode root node\n  if (state.parent === null) { return state.children[0]._encode(data, reporter || new Reporter()) }\n\n  let result = null\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state.default !== null) { data = state.default } else { return }\n  }\n\n  // Encode children first\n  let content = null\n  let primitive = false\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data)\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter)\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter)\n    primitive = true\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') { return child._encode(null, reporter, data) }\n\n      if (child._baseState.key === null) { return reporter.error('Child should have a key') }\n      const prevKey = reporter.enterKey(child._baseState.key)\n\n      if (typeof data !== 'object') { return reporter.error('Child expected, but input is not object') }\n\n      const res = child._encode(data[child._baseState.key], reporter, data)\n      reporter.leaveKey(prevKey)\n\n      return res\n    }, this).filter(function (child) {\n      return child\n    })\n    content = this._createEncoderBuffer(content)\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      if (!(state.args && state.args.length === 1)) { return reporter.error(`Too many args for: ${state.tag}`) }\n\n      if (!Array.isArray(data)) { return reporter.error('seqof/setof, but data is not Array') }\n\n      const child = this.clone()\n      child._baseState.implicit = null\n      content = this._createEncoderBuffer(data.map(function (item) {\n        const state = this._baseState\n\n        return this._getUse(state.args[0], data)._encode(item, reporter)\n      }, child))\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter)\n    } else {\n      content = this._encodePrimitive(state.tag, data)\n      primitive = true\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag\n    const cls = state.implicit === null ? 'universal' : 'context'\n\n    if (tag === null) {\n      if (state.use === null) { reporter.error('Tag could be omitted only for .use()') }\n    } else {\n      if (state.use === null) { result = this._encodeComposite(tag, primitive, cls, content) }\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null) { result = this._encodeComposite(state.explicit, false, 'context', result) }\n\n  return result\n}\n\nNode.prototype._encodeChoice = function encodeChoice (data, reporter) {\n  const state = this._baseState\n\n  const node = state.choice[data.type]\n  if (!node) {\n    assert(\n      false,\n      `${data.type} not found in ${JSON.stringify(Object.keys(state.choice))}`\n    )\n  }\n  return node._encode(data.value, reporter)\n}\n\nNode.prototype._encodePrimitive = function encodePrimitive (tag, data) {\n  const state = this._baseState\n\n  if (/str$/.test(tag)) { return this._encodeStr(data, tag) } else if (tag === 'objid' && state.args) { return this._encodeObjid(data, state.reverseArgs[0], state.args[1]) } else if (tag === 'objid') { return this._encodeObjid(data, null, null) } else if (tag === 'gentime' || tag === 'utctime') { return this._encodeTime(data, tag) } else if (tag === 'null_') { return this._encodeNull() } else if (tag === 'int' || tag === 'enum') { return this._encodeInt(data, state.args && state.reverseArgs[0]) } else if (tag === 'bool') { return this._encodeBool(data) } else if (tag === 'objDesc') { return this._encodeStr(data, tag) } else { throw new Error(`Unsupported tag: ${tag}`) }\n}\n\nNode.prototype._isNumstr = function isNumstr (str) {\n  return /^[0-9 ]*$/.test(str)\n}\n\nNode.prototype._isPrintstr = function isPrintstr (str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str)\n}\n\nmodule.exports = Node\n"]},"metadata":{},"sourceType":"script"}