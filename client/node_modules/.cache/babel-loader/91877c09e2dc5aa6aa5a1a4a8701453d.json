{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\n// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useRecordTime } from \"../../hooks/workList/time/useRecordTime\";\nimport { useWorkList } from \"../../hooks/workList/work/useWorkList\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nimport { API } from \"../../tools/API\";\nimport { ListViewTemplate } from \"../listview/ListViewTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = ({\n  user,\n  updateDateHook,\n  targetSetting\n}) => {\n  _s();\n\n  // const [date, setDate] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  // const updateDateHook = useState(new Date());\n  const date = updateDateHook[0];\n  const workListHook = useWorkList(user, date); //const [workList, setWork, isWorkListLoading]\n\n  const setDate = updateDateHook[1];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: \" test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [`Hello ${user}`, /*#__PURE__*/_jsxDEV(ListViewTemplate, {\n        user: user,\n        date: date,\n        workList: workListHook[0],\n        setDate: setDate,\n        targetSetting: targetSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n        user: user,\n        date: date,\n        targetSetting: targetSetting,\n        workListHook: workListHook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"/1tInA7/xzq51ZG1TFw7NCAkxOY=\", false, function () {\n  return [useWorkList];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/pages/HomePage.js"],"names":["WorkListTemplate","CalendarTemplate","useRecordTime","useWorkList","changeFormatYYYYMMDD","API","ListViewTemplate","HomePage","user","updateDateHook","targetSetting","date","workListHook","setDate"],"mappings":";;;AAAA;AACA;AACA,SAASA,gBAAT,QAAiC,8BAAjC;AACA,OAAO,wBAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA;AAAxB,CAAD,KAA6C;AAAA;;AACnE;AACA;AACA;AACA;AACA;AACA,QAAMC,IAAI,GAAGF,cAAc,CAAC,CAAD,CAA3B;AACA,QAAMG,YAAY,GAAGT,WAAW,CAACK,IAAD,EAAOG,IAAP,CAAhC,CAPmE,CAQnE;;AACA,QAAME,OAAO,GAAGJ,cAAc,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACI,SAAQD,IAAK,EADjB,eAEE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,IAAI,EAAEG,IAFR;AAGE,QAAA,QAAQ,EAAEC,YAAY,CAAC,CAAD,CAHxB;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,aAAa,EAAEH;AALjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAEF,IADR;AAEE,QAAA,IAAI,EAAEG,IAFR;AAGE,QAAA,aAAa,EAAED,aAHjB;AAIE,QAAA,YAAY,EAAEE;AAJhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAlCM;;GAAML,Q;UAOUJ,W;;;KAPVI,Q","sourcesContent":["// import logo from '../logo.svg';\n// import \"../../css/App.css\";\nimport { WorkListTemplate } from \"../worklist/WorkListTemplate\";\nimport \"../../css/calendar.css\";\nimport { CalendarTemplate } from \"../calendar/CalendarTemplate\";\nimport { useRecordTime } from \"../../hooks/workList/time/useRecordTime\";\nimport { useWorkList } from \"../../hooks/workList/work/useWorkList\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nimport { API } from \"../../tools/API\";\nimport { ListViewTemplate } from \"../listview/ListViewTemplate\";\n\nexport const HomePage = ({ user, updateDateHook, targetSetting }) => {\n  // const [date, setDate] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  // const updateDateHook = useState(new Date());\n  const date = updateDateHook[0];\n  const workListHook = useWorkList(user, date);\n  //const [workList, setWork, isWorkListLoading]\n  const setDate = updateDateHook[1];\n\n  return (\n    <section>\n      <aside> test</aside>\n      <article>\n        {`Hello ${user}`}\n        <ListViewTemplate\n          user={user}\n          date={date}\n          workList={workListHook[0]}\n          setDate={setDate}\n          targetSetting={targetSetting}\n        />\n      </article>\n      <article>\n        <WorkListTemplate\n          user={user}\n          date={date}\n          targetSetting={targetSetting}\n          workListHook={workListHook}\n        />\n      </article>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}