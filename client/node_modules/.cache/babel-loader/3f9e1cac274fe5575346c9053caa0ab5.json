{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { getToday } from \"../../../tools/time\";\nlet cnt = 0;\n\nconst getEmptyTimeObj = () => {\n  return {\n    hour: -1,\n    minute: -1\n  };\n};\n\nconst isEmptyTimeObj = timeObj => !timeObj || timeObj.hour === -1 || timeObj.minute === -1;\n\nconst checkTimeObj = timeObj => isEmptyTimeObj(timeObj) ? getEmptyTimeObj() : timeObj;\n\nexport const useUpdateTime = (key, user, date) => {\n  _s();\n\n  const initVal = !user && window.localStorage.getItem(key) ? JSON.parse(window.localStorage.getItem(key)) : null;\n  const [recordTime, setRecordTime] = useState(); // setRecordTime(initVal);\n  // useEffect(() => {\n  //   setRecordTime(initVal);\n  // }, [date]);\n\n  const getRecordTime = async () => {\n    console.log(\"AXIOS START\");\n    const data = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\"\n      },\n      url: `/api/${user}/${date}/worklist/record-time/${key}`,\n      method: \"get\"\n    });\n    let resTimeObj = data === null || data === void 0 ? void 0 : data.data; // window.localStorage.setItem(key, JSON.stringify(data?.data));\n\n    console.log(\"SET BEF: \", resTimeObj);\n    if (isEmptyTimeObj(resTimeObj)) resTimeObj = getEmptyTimeObj();\n    console.log(\"SET AFT: \", resTimeObj);\n    setRecordTime(resTimeObj);\n  };\n\n  console.log(\"RECORDTIME BEF COND\", recordTime, !recordTime);\n  if (!recordTime && cnt++ < 10) getRecordTime();\n\n  const updateRecordTime = timeObj => {\n    if (isEmptyTimeObj(timeObj)) timeObj = getEmptyTimeObj();\n    axios.post(`/api/${user}/${date}/worklist/record-time/${key}`, {\n      value: timeObj\n    }); // window.localStorage.setItem(key, JSON.stringify(timeObj));\n\n    setRecordTime(timeObj);\n  };\n\n  const onClick = event => {\n    event.preventDefault();\n    const [hour, minute] = new Date().toTimeString().split(\":\").slice(0, 2).map(numChar => parseInt(numChar));\n    const timeObj = {\n      hour,\n      minute\n    };\n    updateRecordTime(timeObj);\n  };\n\n  return [recordTime, onClick, updateRecordTime];\n};\n\n_s(useUpdateTime, \"y7h5OVS3edi+g8/uLK0Wp1s3sL0=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/time/useUpdateTime.js"],"names":["axios","useState","useEffect","getToday","cnt","getEmptyTimeObj","hour","minute","isEmptyTimeObj","timeObj","checkTimeObj","useUpdateTime","key","user","date","initVal","window","localStorage","getItem","JSON","parse","recordTime","setRecordTime","getRecordTime","console","log","data","headers","Authorization","url","method","resTimeObj","updateRecordTime","post","value","onClick","event","preventDefault","Date","toTimeString","split","slice","map","numChar","parseInt"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { getToday } from \"../../../tools/time\";\nlet cnt = 0;\nconst getEmptyTimeObj = () => {\n  return { hour: -1, minute: -1 };\n};\nconst isEmptyTimeObj = (timeObj) =>\n  !timeObj || timeObj.hour === -1 || timeObj.minute === -1;\nconst checkTimeObj = (timeObj) =>\n  isEmptyTimeObj(timeObj) ? getEmptyTimeObj() : timeObj;\nexport const useUpdateTime = (key, user, date) => {\n  const initVal =\n    !user && window.localStorage.getItem(key)\n      ? JSON.parse(window.localStorage.getItem(key))\n      : null;\n  const [recordTime, setRecordTime] = useState();\n  // setRecordTime(initVal);\n  // useEffect(() => {\n  //   setRecordTime(initVal);\n  // }, [date]);\n  const getRecordTime = async () => {\n    console.log(\"AXIOS START\");\n    const data = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      url: `/api/${user}/${date}/worklist/record-time/${key}`,\n      method: \"get\",\n    });\n    let resTimeObj = data?.data;\n    // window.localStorage.setItem(key, JSON.stringify(data?.data));\n    console.log(\"SET BEF: \", resTimeObj);\n    if (isEmptyTimeObj(resTimeObj)) resTimeObj = getEmptyTimeObj();\n    console.log(\"SET AFT: \", resTimeObj);\n    setRecordTime(resTimeObj);\n  };\n  console.log(\"RECORDTIME BEF COND\", recordTime, !recordTime);\n  if (!recordTime && cnt++ < 10) getRecordTime();\n\n  const updateRecordTime = (timeObj) => {\n    if (isEmptyTimeObj(timeObj)) timeObj = getEmptyTimeObj();\n\n    axios.post(`/api/${user}/${date}/worklist/record-time/${key}`, {\n      value: timeObj,\n    });\n    // window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n  const onClick = (event) => {\n    event.preventDefault();\n    const [hour, minute] = new Date()\n      .toTimeString()\n      .split(\":\")\n      .slice(0, 2)\n      .map((numChar) => parseInt(numChar));\n    const timeObj = { hour, minute };\n    updateRecordTime(timeObj);\n  };\n  return [recordTime, onClick, updateRecordTime];\n};\n"]},"metadata":{},"sourceType":"module"}