{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/IngredientList.js\";\nimport \"../../../css/IngredientList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeList = new Map();\nconst cheezeTheme = {\n  backgroundColor: \"rgba(255, 166, 0, 1)\"\n};\nconst meetTheme = {\n  backgroundColor: \"rgba(69, 1, 1, 1)\"\n};\nconst vegetableTheme = {\n  backgroundColor: \"rgba(50, 199, 4, 1)\"\n};\n\nconst add = () => {\n  console.log(\"1\");\n};\n\nconst tomatoTheme = {\n  backgroundColor: \"rgba(227, 26, 0, 1)\"\n};\nthemeList[\"tomato\"] = tomatoTheme;\nthemeList[\"cheeze\"] = cheezeTheme;\nthemeList[\"meet\"] = meetTheme;\nthemeList[\"vegetable\"] = vegetableTheme;\nexport const IngredientEx = ({\n  ingredienName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: add,\n    style: themeList[ingredienName],\n    children: [\"test li\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = IngredientEx;\nexport const IngredientList = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient\",\n    children: [[1, 2, 3].map(elem => {\n      return elem;\n    }), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}; //background-color: white;\n\n/*\n방법 생각해보기\n버튼 클릭 -> () => 색상 지정 (DB에도 저장) => 색상 표시\n\n에서, 버튼 클릭에 따라 어떻게 색상을 지정할 것인지 고민해보기.\n*/\n\n_c2 = IngredientList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IngredientEx\");\n$RefreshReg$(_c2, \"IngredientList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/IngredientList.js"],"names":["themeList","Map","cheezeTheme","backgroundColor","meetTheme","vegetableTheme","add","console","log","tomatoTheme","IngredientEx","ingredienName","IngredientList","map","elem"],"mappings":";AAAA,OAAO,iCAAP;;AACA,MAAMA,SAAS,GAAG,IAAIC,GAAJ,EAAlB;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,eAAe,EAAE;AADC,CAApB;AAGA,MAAMC,SAAS,GAAG;AAChBD,EAAAA,eAAe,EAAE;AADD,CAAlB;AAIA,MAAME,cAAc,GAAG;AACrBF,EAAAA,eAAe,EAAE;AADI,CAAvB;;AAGA,MAAMG,GAAG,GAAG,MAAM;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG;AAClBN,EAAAA,eAAe,EAAE;AADC,CAApB;AAGAH,SAAS,CAAC,QAAD,CAAT,GAAsBS,WAAtB;AACAT,SAAS,CAAC,QAAD,CAAT,GAAsBE,WAAtB;AACAF,SAAS,CAAC,MAAD,CAAT,GAAoBI,SAApB;AACAJ,SAAS,CAAC,WAAD,CAAT,GAAyBK,cAAzB;AACA,OAAO,MAAMK,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACjD,sBACE;AAAI,IAAA,OAAO,EAAEL,GAAb;AAAkB,IAAA,KAAK,EAAEN,SAAS,CAACW,aAAD,CAAlC;AAAA,0BACU,GADV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CANM;KAAMD,Y;AAQb,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAeC,IAAD,IAAU;AACvB,aAAOA,IAAP;AACD,KAFA,CADH,EAGM,GAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARM,C,CASP;;AAEA;AACA;AACA;AACA;AACA;AACA;;MAhBaF,c","sourcesContent":["import \"../../../css/IngredientList.css\";\nconst themeList = new Map();\nconst cheezeTheme = {\n  backgroundColor: \"rgba(255, 166, 0, 1)\",\n};\nconst meetTheme = {\n  backgroundColor: \"rgba(69, 1, 1, 1)\",\n};\n\nconst vegetableTheme = {\n  backgroundColor: \"rgba(50, 199, 4, 1)\",\n};\nconst add = () => {\n  console.log(\"1\");\n};\n\nconst tomatoTheme = {\n  backgroundColor: \"rgba(227, 26, 0, 1)\",\n};\nthemeList[\"tomato\"] = tomatoTheme;\nthemeList[\"cheeze\"] = cheezeTheme;\nthemeList[\"meet\"] = meetTheme;\nthemeList[\"vegetable\"] = vegetableTheme;\nexport const IngredientEx = ({ ingredienName }) => {\n  return (\n    <li onClick={add} style={themeList[ingredienName]}>\n      test li{\" \"}\n    </li>\n  );\n};\n\nexport const IngredientList = () => {\n  return (\n    <div className=\"ingredient\">\n      {[1, 2, 3].map((elem) => {\n        return elem;\n      })}{\" \"}\n    </div>\n  );\n};\n//background-color: white;\n\n/*\n방법 생각해보기\n버튼 클릭 -> () => 색상 지정 (DB에도 저장) => 색상 표시\n\n에서, 버튼 클릭에 따라 어떻게 색상을 지정할 것인지 고민해보기.\n*/\n"]},"metadata":{},"sourceType":"module"}