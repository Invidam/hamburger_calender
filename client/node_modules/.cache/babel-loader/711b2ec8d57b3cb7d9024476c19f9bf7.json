{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/element/work/EmptyWork.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport \"../../../../css/modam.css\";\nimport { usePushWork } from \"../../../../hooks/workList/work/usePushWork\";\nimport { AddWorkWindow } from \"../../window/work/AddWorkWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  }\n};\nexport const EmptyWork = props => {\n  _s();\n\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n\n  const openAddModal = () => setAddModalIsOpen(true);\n\n  const closeAddModal = () => setAddModalIsOpen(false);\n\n  console.log(\"PROPS: \", props);\n  const {\n    onSubmitColor,\n    onSubmitWork\n  } = usePushWork(workList, setWorkList, closeAddModal, date);\n\n  const addWorkWindow = /*#__PURE__*/_jsxDEV(AddWorkWindow, {\n    workList: workList,\n    onSubmitColor: onSubmitColor,\n    onSubmitWork: onSubmitWork\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  const addModal = /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: addModalIsOpen,\n    onRequestClose: closeAddModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    overlayClassName: \"Overlay\",\n    children: [addWorkWindow, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modalWindow__close modalWindow__btn\",\n      onClick: closeAddModal,\n      children: \"CLOSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"empty-element workList__element-empty\",\n      onClick: openAddModal,\n      children: \"Add your work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), addModal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmptyWork, \"qadkCCUTOcRUSJrVHFwINEAgdX4=\", false, function () {\n  return [usePushWork];\n});\n\n_c = EmptyWork;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmptyWork\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/element/work/EmptyWork.js"],"names":["Modal","useState","usePushWork","AddWorkWindow","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","border","overlay","position","EmptyWork","props","addModalIsOpen","setAddModalIsOpen","openAddModal","closeAddModal","console","log","onSubmitColor","onSubmitWork","workList","setWorkList","date","addWorkWindow","addModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,2BAAP;AACA,SAASC,WAAT,QAA4B,6CAA5B;AACA,SAASC,aAAT,QAA8B,iCAA9B;;AACAH,KAAK,CAACI,aAAN,CAAoB,OAApB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,GAAG,EAAE,KAFE;AAGPC,IAAAA,IAAI,EAAE,KAHC;AAIPC,IAAAA,KAAK,EAAE,MAJA;AAKPC,IAAAA,MAAM,EAAE,MALD;AAMPC,IAAAA,WAAW,EAAE,MANN;AAOPC,IAAAA,SAAS,EAAE,uBAPJ;AAQPC,IAAAA,eAAe,EAAE,oBARV;AASPC,IAAAA,MAAM,EAAE;AATD,GADU;AAYnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,OADH;AAEPT,IAAAA,GAAG,EAAE,CAFE;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPG,IAAAA,eAAe,EAAE;AANV;AAZU,CAArB;AAqBA,OAAO,MAAMI,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;;AACA,QAAMoB,YAAY,GAAG,MAAMD,iBAAiB,CAAC,IAAD,CAA5C;;AACA,QAAME,aAAa,GAAG,MAAMF,iBAAiB,CAAC,KAAD,CAA7C;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACA,QAAM;AAAEO,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAkCxB,WAAW,CACjDyB,QADiD,EAEjDC,WAFiD,EAGjDN,aAHiD,EAIjDO,IAJiD,CAAnD;;AAOA,QAAMC,aAAa,gBACjB,QAAC,aAAD;AACE,IAAA,QAAQ,EAAEH,QADZ;AAEE,IAAA,aAAa,EAAEF,aAFjB;AAGE,IAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,QAAMK,QAAQ,gBACZ,QAAC,KAAD;AACE,IAAA,MAAM,EAAEZ,cADV;AAEE,IAAA,cAAc,EAAEG,aAFlB;AAGE,IAAA,KAAK,EAAEjB,YAHT;AAIE,IAAA,YAAY,EAAC,eAJf;AAKE,IAAA,gBAAgB,EAAC,SALnB;AAAA,eAOGyB,aAPH,eAQE;AACE,MAAA,SAAS,EAAC,qCADZ;AAEE,MAAA,OAAO,EAAER,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAE,uCADb;AAEE,MAAA,OAAO,EAAED,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGU,QAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/CM;;GAAMd,S;UAK6Bf,W;;;KAL7Be,S","sourcesContent":["import Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport \"../../../../css/modam.css\";\nimport { usePushWork } from \"../../../../hooks/workList/work/usePushWork\";\nimport { AddWorkWindow } from \"../../window/work/AddWorkWindow\";\nModal.setAppElement(\"#root\");\nconst customStyles = {\n  content: {\n    // top: \"40vh\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"rgb(245, 235, 220)\",\n    border: \"none\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\nexport const EmptyWork = (props) => {\n  const [addModalIsOpen, setAddModalIsOpen] = useState(false);\n  const openAddModal = () => setAddModalIsOpen(true);\n  const closeAddModal = () => setAddModalIsOpen(false);\n  console.log(\"PROPS: \", props);\n  const { onSubmitColor, onSubmitWork } = usePushWork(\n    workList,\n    setWorkList,\n    closeAddModal,\n    date\n  );\n\n  const addWorkWindow = (\n    <AddWorkWindow\n      workList={workList}\n      onSubmitColor={onSubmitColor}\n      onSubmitWork={onSubmitWork}\n    />\n  );\n  const addModal = (\n    <Modal\n      isOpen={addModalIsOpen}\n      onRequestClose={closeAddModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      overlayClassName=\"Overlay\"\n    >\n      {addWorkWindow}\n      <button\n        className=\"modalWindow__close modalWindow__btn\"\n        onClick={closeAddModal}\n      >\n        CLOSE\n      </button>\n    </Modal>\n  );\n  return (\n    <div>\n      <li\n        className={\"empty-element workList__element-empty\"}\n        onClick={openAddModal}\n      >\n        Add your work\n      </li>\n      {addModal}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}