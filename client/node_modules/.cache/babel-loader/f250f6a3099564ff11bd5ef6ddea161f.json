{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\n// import axios from \"axios\";\n// import { useState } from \"react\";\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\"; // import { useAxios } from \"./hooks/example/useAxios\";\n// import \"react-calendar/dist/Calendar.css\";\n\nimport \"./css/calendar.css\"; // import { changeFormatYYYYMMDD, UTCtoKTC } from \"./tools/time\";\n\nimport { CalendarTemplate } from \"./components/calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"./hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"./hooks/workList/work/useUpdateWork\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const wakeTimeHook = useUpdateTime(\"wakeTime\");\n  const bedTimeHook = useUpdateTime(\"bedTime\");\n  const updateWorkHook = useUpdateWork([]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hamburger App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(CalendarTemplate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n          wakeTimeHook: wakeTimeHook,\n          bedTimeHook: bedTimeHook,\n          updateWorkHook: updateWorkHook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ap1HKJiqoHi8Kksl5ltRV3m6Qk0=\", false, function () {\n  return [useUpdateTime, useUpdateTime, useUpdateWork];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/App.js"],"names":["WorkListTemplate","CalendarTemplate","useUpdateTime","useUpdateWork","App","wakeTimeHook","bedTimeHook","updateWorkHook"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAO,eAAP;AACA,SAASA,gBAAT,QAAiC,wCAAjC,C,CACA;AACA;;AACA,OAAO,oBAAP,C,CACA;;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,aAAT,QAA8B,qCAA9B;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA,QAAMC,YAAY,GAAGH,aAAa,CAAC,UAAD,CAAlC;AACA,QAAMI,WAAW,GAAGJ,aAAa,CAAC,SAAD,CAAjC;AACA,QAAMK,cAAc,GAAGJ,aAAa,CAAC,EAAD,CAApC;AACA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE,QAAC,gBAAD;AACE,UAAA,YAAY,EAAEE,YADhB;AAEE,UAAA,WAAW,EAAEC,WAFf;AAGE,UAAA,cAAc,EAAEC;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA5BQH,G;UAKcF,a,EACDA,a,EACGC,a;;;KAPhBC,G;AA8BT,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\n// import axios from \"axios\";\n// import { useState } from \"react\";\nimport \"./css/App.css\";\nimport { WorkListTemplate } from \"./components/worklist/WorkListTemplate\";\n// import { useAxios } from \"./hooks/example/useAxios\";\n// import \"react-calendar/dist/Calendar.css\";\nimport \"./css/calendar.css\";\n// import { changeFormatYYYYMMDD, UTCtoKTC } from \"./tools/time\";\nimport { CalendarTemplate } from \"./components/calendar/CalendarTemplate\";\nimport { useUpdateTime } from \"./hooks/workList/time/useUpdateTime\";\nimport { useUpdateWork } from \"./hooks/workList/work/useUpdateWork\";\nfunction App() {\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const wakeTimeHook = useUpdateTime(\"wakeTime\");\n  const bedTimeHook = useUpdateTime(\"bedTime\");\n  const updateWorkHook = useUpdateWork([]);\n  return (\n    <main>\n      <header>\n        <h1>Hamburger App</h1>\n      </header>\n      <section>\n        <article>\n          <CalendarTemplate />\n        </article>\n        <article>\n          <WorkListTemplate\n            wakeTimeHook={wakeTimeHook}\n            bedTimeHook={bedTimeHook}\n            updateWorkHook={updateWorkHook}\n          />\n        </article>\n      </section>\n      <footer>footer</footer>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}