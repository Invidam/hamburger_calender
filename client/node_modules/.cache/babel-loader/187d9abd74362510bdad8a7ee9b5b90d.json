{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport randomToken from \"rand-token\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nexport const useTodo = (setTodo, todoItem, _isEditMode, id) => {\n  _s();\n\n  const [isEditMode, setEditMode] = useState(_isEditMode);\n  const [isCheck, setCheck] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.check);\n  const [text, setText] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.text);\n  const [date, setDate] = useState((todoItem === null || todoItem === void 0 ? void 0 : todoItem.date) ? todoItem === null || todoItem === void 0 ? void 0 : todoItem.date : undefined);\n  const [priority, setPriority] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.priority);\n  const [isStopPriority, setStopPriortiy] = useState(false);\n\n  const onClickCheck = () => setCheck(!isCheck);\n\n  const onChangeText = text => {\n    console.log(\"TEXT: \", text);\n    setText(text);\n  };\n\n  const onChangeDate = date => setDate(changeFormatYYYYMMDD(date, false));\n\n  const onChangePriority = rating => setPriority(rating); //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n\n  const onChangeStopPriority = () => setStopPriortiy(!isStopPriority);\n\n  const validator = todoItem => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n\n  const getErrText = () => {\n    let errText = `[ERROR] In, TodoList ${text ? \"\" : \" Text\"}${!date + !priority > 0 && !text ? \", \" : \"\"}${date ? \"\" : \" Date\"}${!priority > 0 && !date ? \", \" : \"\"}${priority ? \"\" : \" Prioirty\"} ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n\n  const onSubmitTodo = event => {\n    try {\n      event.preventDefault();\n      const id = Date.now().toString(16) + randomToken.generate(5);\n      const todoItem = {\n        isCheck,\n        text,\n        date,\n        priority,\n        id\n      };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n\n      if (willUpdate) {\n        setTodo(todoItem).create();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onEditTodo = event => {\n    try {\n      event.preventDefault();\n      let willUpdate = true;\n      const id = todoItem === null || todoItem === void 0 ? void 0 : todoItem.id;\n      const _todoItem = {\n        isCheck,\n        text,\n        date,\n        priority,\n        id\n      };\n      if (typeof validator === \"function\") willUpdate = validator(_todoItem);\n\n      if (willUpdate) {\n        setTodo(_todoItem).edit();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const onDeleteTodo = event => {\n    try {\n      event.preventDefault();\n\n      const deleteAction = () => setTodo(todoItem).delete();\n\n      const cancelAction = () => console.log(\"CANCEL DELETE WORK\");\n\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\n        deleteAction();\n      } else {\n        cancelAction();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return [isEditMode, isCheck, date, onClickCheck, onChangeText, onChangeDate, onChangePriority, onSubmitTodo, onEditTodo, onDeleteTodo, isStopPriority, onChangeStopPriority];\n};\n\n_s(useTodo, \"R2UHQ7+cPo6vKkQdGk5zX9ED0oE=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodo.js"],"names":["useState","randomToken","changeFormatYYYYMMDD","useTodo","setTodo","todoItem","_isEditMode","id","isEditMode","setEditMode","isCheck","setCheck","check","text","setText","date","setDate","undefined","priority","setPriority","isStopPriority","setStopPriortiy","onClickCheck","onChangeText","console","log","onChangeDate","onChangePriority","rating","onChangeStopPriority","validator","getErrText","errText","onSubmitTodo","event","preventDefault","Date","now","toString","generate","willUpdate","create","Error","error","alert","onEditTodo","_todoItem","edit","onDeleteTodo","deleteAction","delete","cancelAction","window","confirm"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport randomToken from \"rand-token\";\nimport { changeFormatYYYYMMDD } from \"../../tools/time\";\nexport const useTodo = (setTodo, todoItem, _isEditMode, id) => {\n  const [isEditMode, setEditMode] = useState(_isEditMode);\n  const [isCheck, setCheck] = useState(todoItem?.check);\n  const [text, setText] = useState(todoItem?.text);\n  const [date, setDate] = useState(todoItem?.date ? todoItem?.date : undefined);\n  const [priority, setPriority] = useState(todoItem?.priority);\n  const [isStopPriority, setStopPriortiy] = useState(false);\n\n  const onClickCheck = () => setCheck(!isCheck);\n  const onChangeText = (text) => {\n    console.log(\"TEXT: \", text);\n    setText(text);\n  };\n  const onChangeDate = (date) => setDate(changeFormatYYYYMMDD(date, false));\n  const onChangePriority = (rating) => setPriority(rating);\n  //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n  const onChangeStopPriority = () => setStopPriortiy(!isStopPriority);\n  const validator = (todoItem) => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n  const getErrText = () => {\n    let errText = `[ERROR] In, TodoList ${text ? \"\" : \" Text\"}${\n      !date + !priority > 0 && !text ? \", \" : \"\"\n    }${date ? \"\" : \" Date\"}${!priority > 0 && !date ? \", \" : \"\"}${\n      priority ? \"\" : \" Prioirty\"\n    } ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n  const onSubmitTodo = (event) => {\n    try {\n      event.preventDefault();\n      const id = Date.now().toString(16) + randomToken.generate(5);\n      const todoItem = { isCheck, text, date, priority, id };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(todoItem);\n      if (willUpdate) {\n        setTodo(todoItem).create();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onEditTodo = (event) => {\n    try {\n      event.preventDefault();\n      let willUpdate = true;\n      const id = todoItem?.id;\n      const _todoItem = { isCheck, text, date, priority, id };\n      if (typeof validator === \"function\") willUpdate = validator(_todoItem);\n      if (willUpdate) {\n        setTodo(_todoItem).edit();\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const onDeleteTodo = (event) => {\n    try {\n      event.preventDefault();\n      const deleteAction = () => setTodo(todoItem).delete();\n      const cancelAction = () => console.log(\"CANCEL DELETE WORK\");\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\n        deleteAction();\n      } else {\n        cancelAction();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return [\n    isEditMode,\n    isCheck,\n    date,\n    onClickCheck,\n    onChangeText,\n    onChangeDate,\n    onChangePriority,\n    onSubmitTodo,\n    onEditTodo,\n    onDeleteTodo,\n    isStopPriority,\n    onChangeStopPriority,\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}