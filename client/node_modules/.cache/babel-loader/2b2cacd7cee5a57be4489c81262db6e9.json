{"ast":null,"code":"import axios from \"axios\";\nimport { LocalStroage } from \"./LocalStorage\";\nimport qs from \"qs\";\nexport const getCustomConfig = () => {\n  var _LocalStroage$accessT;\n\n  const token = (_LocalStroage$accessT = LocalStroage.accessToken().get()) === null || _LocalStroage$accessT === void 0 ? void 0 : _LocalStroage$accessT.token;\n  const date = LocalStroage.date().get();\n  console.log(\"REQ HEADER2: \", token, date);\n  const config = {\n    headers: {\n      \"x-access-token\": JSON.stringify(token),\n      \"x-access-date\": JSON.stringify(date)\n    }\n  };\n  return config;\n};\nexport let customAxios = axios.create(getCustomConfig());\ncustomAxios.interceptors.response.use(res => {\n  return res;\n}, e => {\n  var _e$response;\n\n  console.log(\"ERROR IN AXIOS CUSTOM, \", e);\n\n  if ((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 401) {\n    var _e$response2, _e$response3;\n\n    // alert();\n    console.log(e.response.data);\n    console.log(\"401, \", (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data);\n    throw new Error(`401 - Unauthorized\\n${(_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : _e$response3.data}`);\n  } // alert(\"other err\");\n\n\n  throw new Error(e); // return Promise.reject(e);\n}); // 로그인 parm: 소셜타입, 유저 정보\n// jwt 토큰 parm: 토큰\n// 사인업 / 유저정보 객체\n// 유저세팅 입력 겟 parms: 유저명\n\nexport const updateAPIHeader = () => {\n  customAxios = axios.create(getCustomConfig());\n};\nexport class API {\n  static updateHeader() {\n    customAxios = axios.create(getCustomConfig());\n  }\n\n  static userSetting(user) {\n    try {\n      const url = `/auth/setting/${user}`;\n      return {\n        get: async () => {\n          return await customAxios.get(url);\n        },\n        edit: async (targetWorkTime, targetWakeTime, targetBedTime) => {\n          return await customAxios.post(url, {\n            targetWorkTime,\n            targetWakeTime,\n            targetBedTime\n          });\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static auth() {\n    try {\n      return {\n        // githubLogin: async (userInfo) => {\n        //   return await customAxios.post(\"/auth/login/github\", { value: userInfo });\n        // },\n        login: async (socialType, userInfo) => {\n          return await customAxios.post(`/auth/login/${socialType}`, {\n            value: userInfo\n          });\n        },\n        signup: async userInfo => {\n          return await customAxios.post(\"/auth/signup\", {\n            value: userInfo\n          });\n        },\n        verifyToken: async token => {\n          return await customAxios.post(\"/auth/jwt/verify\", {\n            token\n          });\n        }\n      }; // eslint-disable-next-line no-unreachable\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static recordTime(user, date, key) {\n    try {\n      const url = `/api/${user}/worklist/${date}/record-time/${key}`;\n      return {\n        get: async () => {\n          return await customAxios.get(url);\n        },\n        create: async data => {\n          return await customAxios.put(url, {\n            value: data\n          });\n        },\n        edit: async data => {\n          return await customAxios.post(url, {\n            value: data\n          });\n        },\n        delete: async () => {\n          return await customAxios.delete(url);\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static workList(user, date) {\n    try {\n      const url = `/api/${user}/worklist/${date}`;\n      return {\n        grade: async () => {\n          return await customAxios.get(url + \"/grade\");\n        },\n        get: async () => {\n          return await customAxios.get(url);\n        },\n        dataInfo: async () => {\n          return await customAxios.get(url + \"/date-info\");\n        },\n        edit: async data => {\n          return await customAxios.post(url, {\n            value: data\n          });\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static work(user, date) {\n    try {\n      const url = `/api/${user}/worklist/${date}/work`;\n      return {\n        create: async data => {\n          return await customAxios.put(url, {\n            value: data\n          });\n        },\n        edit: async data => {\n          return await customAxios.post(url, {\n            value: data\n          });\n        },\n        delete: async data => {\n          return await customAxios.delete(url, {\n            data: {\n              value: data\n            }\n          });\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static listView(user, startDate, endDate) {\n    try {\n      const url = `/api/${user}/listview`;\n      const queryObj = {\n        startDate,\n        endDate\n      };\n      const queryString = qs.stringify(queryObj);\n      console.log(\"QS: \", queryObj, queryString);\n      return {\n        get: async () => {\n          return await customAxios.get(url + `?${queryString}`);\n        } // create: async (data) => {\n        //   return await customAxios.put(url, { value: data });\n        // },\n        // edit: async (data) => {\n        //   return await customAxios.post(url, { value: data });\n        // },\n        // delete: async () => {\n        //   return await customAxios.delete(url);\n        // },\n\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static todoList(user) {\n    try {\n      const url = `/api/${user}/todolist`;\n      return {\n        get: async sortTypeStr => {\n          const queryObj = sortTypeStr;\n          const queryString = qs.stringify(queryObj);\n          console.log(\"QS: \", queryString);\n          return await customAxios.get(url + `?${queryString}`);\n        },\n        edit: async data => {\n          return await customAxios.post(url, {\n            value: data\n          });\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  static todo(user) {\n    try {\n      const url = `/api/${user}/todolist/todo`;\n      return {\n        create: async data => {\n          return await customAxios.put(url, {\n            value: data\n          });\n        },\n        edit: async data => {\n          return await customAxios.post(url, {\n            value: data\n          });\n        },\n        delete: async data => {\n          return await customAxios.delete(url, {\n            data: {\n              value: data\n            }\n          });\n        }\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n} //api.workList(\"SR\",\"1212-12-12\").create({ab:\"c\"});\n//SetWork({123:213}).delete();\n//Work().delte();","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/tools/API.js"],"names":["axios","LocalStroage","qs","getCustomConfig","token","accessToken","get","date","console","log","config","headers","JSON","stringify","customAxios","create","interceptors","response","use","res","e","status","data","Error","updateAPIHeader","API","updateHeader","userSetting","user","url","edit","targetWorkTime","targetWakeTime","targetBedTime","post","error","auth","login","socialType","userInfo","value","signup","verifyToken","recordTime","key","put","delete","workList","grade","dataInfo","work","listView","startDate","endDate","queryObj","queryString","todoList","sortTypeStr","todo"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { LocalStroage } from \"./LocalStorage\";\nimport qs from \"qs\";\n\nexport const getCustomConfig = () => {\n  const token = LocalStroage.accessToken().get()?.token;\n  const date = LocalStroage.date().get();\n  console.log(\"REQ HEADER2: \", token, date);\n  const config = {\n    headers: {\n      \"x-access-token\": JSON.stringify(token),\n      \"x-access-date\": JSON.stringify(date),\n    },\n  };\n  return config;\n};\n\nexport let customAxios = axios.create(getCustomConfig());\n\ncustomAxios.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (e) => {\n    console.log(\"ERROR IN AXIOS CUSTOM, \", e);\n    if (e?.response?.status === 401) {\n      // alert();\n      console.log(e.response.data);\n      console.log(\"401, \", e.response?.data);\n      throw new Error(`401 - Unauthorized\\n${e.response?.data}`);\n    }\n    // alert(\"other err\");\n    throw new Error(e);\n    // return Promise.reject(e);\n  }\n);\n// 로그인 parm: 소셜타입, 유저 정보\n\n// jwt 토큰 parm: 토큰\n// 사인업 / 유저정보 객체\n// 유저세팅 입력 겟 parms: 유저명\n\nexport const updateAPIHeader = () => {\n  customAxios = axios.create(getCustomConfig());\n};\nexport class API {\n  static updateHeader() {\n    customAxios = axios.create(getCustomConfig());\n  }\n  static userSetting(user) {\n    try {\n      const url = `/auth/setting/${user}`;\n      return {\n        get: async () => {\n          return await customAxios.get(url);\n        },\n        edit: async (targetWorkTime, targetWakeTime, targetBedTime) => {\n          return await customAxios.post(url, {\n            targetWorkTime,\n            targetWakeTime,\n            targetBedTime,\n          });\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static auth() {\n    try {\n      return {\n        // githubLogin: async (userInfo) => {\n        //   return await customAxios.post(\"/auth/login/github\", { value: userInfo });\n        // },\n        login: async (socialType, userInfo) => {\n          return await customAxios.post(`/auth/login/${socialType}`, {\n            value: userInfo,\n          });\n        },\n        signup: async (userInfo) => {\n          return await customAxios.post(\"/auth/signup\", { value: userInfo });\n        },\n        verifyToken: async (token) => {\n          return await customAxios.post(\"/auth/jwt/verify\", { token });\n        },\n      };\n      // eslint-disable-next-line no-unreachable\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static recordTime(user, date, key) {\n    try {\n      const url = `/api/${user}/worklist/${date}/record-time/${key}`;\n      return {\n        get: async () => {\n          return await customAxios.get(url);\n        },\n        create: async (data) => {\n          return await customAxios.put(url, { value: data });\n        },\n        edit: async (data) => {\n          return await customAxios.post(url, { value: data });\n        },\n        delete: async () => {\n          return await customAxios.delete(url);\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static workList(user, date) {\n    try {\n      const url = `/api/${user}/worklist/${date}`;\n      return {\n        grade: async () => {\n          return await customAxios.get(url + \"/grade\");\n        },\n        get: async () => {\n          return await customAxios.get(url);\n        },\n        dataInfo: async () => {\n          return await customAxios.get(url + \"/date-info\");\n        },\n        edit: async (data) => {\n          return await customAxios.post(url, { value: data });\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static work(user, date) {\n    try {\n      const url = `/api/${user}/worklist/${date}/work`;\n      return {\n        create: async (data) => {\n          return await customAxios.put(url, { value: data });\n        },\n        edit: async (data) => {\n          return await customAxios.post(url, { value: data });\n        },\n        delete: async (data) => {\n          return await customAxios.delete(url, { data: { value: data } });\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static listView(user, startDate, endDate) {\n    try {\n      const url = `/api/${user}/listview`;\n      const queryObj = { startDate, endDate };\n      const queryString = qs.stringify(queryObj);\n      console.log(\"QS: \", queryObj, queryString);\n      return {\n        get: async () => {\n          return await customAxios.get(url + `?${queryString}`);\n        },\n        // create: async (data) => {\n        //   return await customAxios.put(url, { value: data });\n        // },\n        // edit: async (data) => {\n        //   return await customAxios.post(url, { value: data });\n        // },\n        // delete: async () => {\n        //   return await customAxios.delete(url);\n        // },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static todoList(user) {\n    try {\n      const url = `/api/${user}/todolist`;\n      return {\n        get: async (sortTypeStr) => {\n          const queryObj = sortTypeStr;\n          const queryString = qs.stringify(queryObj);\n          console.log(\"QS: \", queryString);\n          return await customAxios.get(url + `?${queryString}`);\n        },\n        edit: async (data) => {\n          return await customAxios.post(url, { value: data });\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  static todo(user) {\n    try {\n      const url = `/api/${user}/todolist/todo`;\n      return {\n        create: async (data) => {\n          return await customAxios.put(url, { value: data });\n        },\n        edit: async (data) => {\n          return await customAxios.post(url, { value: data });\n        },\n        delete: async (data) => {\n          return await customAxios.delete(url, { data: { value: data } });\n        },\n      };\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n//api.workList(\"SR\",\"1212-12-12\").create({ab:\"c\"});\n//SetWork({123:213}).delete();\n//Work().delte();\n"]},"metadata":{},"sourceType":"module"}