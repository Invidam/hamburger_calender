{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/elements/TodoDisplay.js\",\n    _s = $RefreshSig$();\n\nimport StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\"; // import es from \"da\"\n\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon__check\",\n  icon: faCheck,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\nexport const TodoDisplay = ({\n  setTodo,\n  _isEditMode,\n  todoItem,\n  id\n}) => {\n  _s();\n\n  const [isEditMode, isCheck, date, onClickCheck,,,,,, onDeleteTodo,,, onClickEditBtn] = useTodo(setTodo, todoItem, _isEditMode, id);\n\n  const displayBtn = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo__btn-box todo__btn-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo__btn todo__btn-edit\",\n      onClick: onClickEditBtn,\n      children: \"E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo__btn todo__btn-delete\",\n      onClick: onDeleteTodo,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  const displayElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: `todo__checkbox_${id}`,\n      className: \"todo__checkbox todo__checkbox todo__content todo-display__content\",\n      type: \"checkbox\",\n      name: \"todoCheck\",\n      defaultValue: todoItem === null || todoItem === void 0 ? void 0 : todoItem.isCheck,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => onClickCheck(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo__label\",\n      htmlFor: `todo__checkbox_${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todo__label-icon\",\n        children: isCheck ? checkElement : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo__text todo-display__text todo__content todo-display__content\",\n      children: todoItem === null || todoItem === void 0 ? void 0 : todoItem.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePick, {\n      date: date,\n      isEditMode: isEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `todo__star-rating todo-display__star}`,\n      children: [/*#__PURE__*/_jsxDEV(StarRatings, {\n        starRatedColor: \"rgba(241, 196, 15,1.0)\",\n        starEmptyColor: \"rgba(151, 151, 151, 0.707)\",\n        starHoverColor: \"rgba(241, 196, 15,0.9)\",\n        starSelectingHoverColor: \"red\",\n        numberOfStars: 5,\n        name: \"rating\",\n        starDimension: \"12px\",\n        starSpacing: \"0px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), displayBtn]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  return displayElement;\n};\n\n_s(TodoDisplay, \"znALrt5wKIeqIBkmHcvLMsMj1wc=\", false, function () {\n  return [useTodo];\n});\n\n_c = TodoDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoDisplay\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/elements/TodoDisplay.js"],"names":["StarRatings","DatePicker","registerLocale","setDefaultLocale","useTodo","getToday","DatePick","useState","faCheck","FontAwesomeIcon","checkElement","TodoDisplay","setTodo","_isEditMode","todoItem","id","isEditMode","isCheck","date","onClickCheck","onDeleteTodo","onClickEditBtn","displayBtn","displayElement","target","value","text"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD,C,CACA;;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AACA,MAAMC,YAAY,gBAChB,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,kBAA3B;AAA8C,EAAA,IAAI,EAAEF,OAApD;AAA6D,EAAA,IAAI,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,QADF;;AAGA,OAAO,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAA4C;AAAA;;AACrE,QAAM,CACJC,UADI,EAEJC,OAFI,EAGJC,IAHI,EAIJC,YAJI,OAUJC,YAVI,IAaJC,cAbI,IAcFjB,OAAO,CAACQ,OAAD,EAAUE,QAAV,EAAoBD,WAApB,EAAiCE,EAAjC,CAdX;;AAeA,QAAMO,UAAU,gBACd;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAED,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AAA+C,MAAA,OAAO,EAAED,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,QAAMG,cAAc,gBAClB;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AACE,MAAA,EAAE,EAAG,kBAAiBR,EAAG,EAD3B;AAEE,MAAA,SAAS,EAAC,mEAFZ;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,YAAY,EAAED,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEG,OAL1B;AAME,MAAA,QAAQ,EAAE,CAAC;AAAEO,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAD,KAA2BN,YAAY,CAACM,KAAD;AANnD;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAG,kBAAiBV,EAAG,EAA7D;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,kBAAoCE,OAAO,GAAGP,YAAH,GAAkB;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAYE;AAAM,MAAA,SAAS,EAAC,mEAAhB;AAAA,gBACGI,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEY;AADb;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAER,IAAhB;AAAsB,MAAA,UAAU,EAAEF;AAAlC;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAK,MAAA,SAAS,EAAG,uCAAjB;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,cAAc,EAAC,wBADjB;AAEE,QAAA,cAAc,EAAC,4BAFjB;AAGE,QAAA,cAAc,EAAC,wBAHjB;AAIE,QAAA,uBAAuB,EAAC,KAJ1B;AAKE,QAAA,aAAa,EAAE,CALjB;AAME,QAAA,IAAI,EAAC,QANP;AAOE,QAAA,aAAa,EAAC,MAPhB;AAQE,QAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,cADF,EAUK,GAVL;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EA4BGM,UA5BH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAgCA,SAAOC,cAAP;AACD,CA3DM;;GAAMZ,W;UAePP,O;;;KAfOO,W","sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\n\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\n// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst checkElement = (\n  <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n);\nexport const TodoDisplay = ({ setTodo, _isEditMode, todoItem, id }) => {\n  const [\n    isEditMode,\n    isCheck,\n    date,\n    onClickCheck,\n    ,\n    ,\n    ,\n    ,\n    ,\n    onDeleteTodo,\n    ,\n    ,\n    onClickEditBtn,\n  ] = useTodo(setTodo, todoItem, _isEditMode, id);\n  const displayBtn = (\n    <div className=\"todo__btn-box todo__btn-box\">\n      <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n        E\n      </button>\n      <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n        X\n      </button>\n    </div>\n  );\n  const displayElement = (\n    <div className=\"todo\">\n      <input\n        id={`todo__checkbox_${id}`}\n        className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n        type=\"checkbox\"\n        name=\"todoCheck\"\n        defaultValue={todoItem?.isCheck}\n        onChange={({ target: { value } }) => onClickCheck(value)}\n      ></input>\n      <label className=\"todo__label\" htmlFor={`todo__checkbox_${id}`}>\n        <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n      </label>\n      <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n        {todoItem?.text}\n      </span>\n      <DatePick date={date} isEditMode={isEditMode} />\n      <div className={`todo__star-rating todo-display__star}`}>\n        <StarRatings\n          starRatedColor=\"rgba(241, 196, 15,1.0)\"\n          starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n          starHoverColor=\"rgba(241, 196, 15,0.9)\"\n          starSelectingHoverColor=\"red\"\n          numberOfStars={5}\n          name=\"rating\"\n          starDimension=\"12px\"\n          starSpacing=\"0px\"\n        />{\" \"}\n      </div>\n      {displayBtn}\n    </div>\n  );\n  return displayElement;\n};\n"]},"metadata":{},"sourceType":"module"}