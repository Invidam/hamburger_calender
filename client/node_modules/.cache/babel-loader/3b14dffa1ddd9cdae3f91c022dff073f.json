{"ast":null,"code":"/* global BigInt */\nconst {\n  inherits\n} = require('util');\n\nconst Node = require('../base/node');\n\nconst der = require('../constants/der');\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity; // Construct base tree\n\n  this.tree = new DERNode();\n\n  this.tree._init(entity.body);\n}\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n}; // Tree methods\n\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\n\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter); // Short form\n\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([header, content]);\n  } // Long form\n  // Count octets required to store length\n\n\n  let lenOctets = 1;\n\n  for (let i = content.length; i >= 0x100; i >>= 8) {\n    lenOctets++;\n  }\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) {\n    header[i] = j & 0xff;\n  }\n\n  return this._createEncoderBuffer([header, content]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([str.unused | 0, str.data]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports only digits and space');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error(`Encoding of string type: ${tag} unsupported`);\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values) {\n      return this.reporter.error('string objid given, but no values map found');\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(values, id)) {\n      return this.reporter.error('objid not found in values map');\n    }\n\n    id = values[id].split(/[\\s.]+/g);\n\n    for (let i = 0; i < id.length; i++) {\n      id[i] |= 0;\n    }\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n\n    for (let i = 0; i < id.length; i++) {\n      id[i] |= 0;\n    }\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error(`objid() should be either array or string, got: ${JSON.stringify(id)}`);\n  }\n\n  if (!relative) {\n    if (id[1] >= 40) {\n      return this.reporter.error('Second objid identifier OOB');\n    }\n\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  } // Count number of octets\n\n\n  let size = 0;\n\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n\n    for (size++; ident >= 0x80; ident >>= 7) {\n      size++;\n    }\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n\n    while ((ident >>= 7) > 0) {\n      objid[offset--] = 0x80 | ident & 0x7f;\n    }\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10) {\n    return `0${num}`;\n  } else {\n    return num;\n  }\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [two(date.getUTCFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else if (tag === 'utctime') {\n    str = [two(date.getUTCFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else {\n    this.reporter.error(`Encoding ${tag} time is not supported yet`);\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nfunction bnToBuf(bn) {\n  var hex = BigInt(bn).toString(16);\n\n  if (hex.length % 2) {\n    hex = '0' + hex;\n  }\n\n  var len = hex.length / 2;\n  var u8 = new Uint8Array(len);\n  var i = 0;\n  var j = 0;\n\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16);\n    i += 1;\n    j += 2;\n  }\n\n  return u8;\n}\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values) {\n      return this.reporter.error('String int or enum given, but no values map');\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(values, num)) {\n      return this.reporter.error(`Values map doesn't contain: ${JSON.stringify(num)}`);\n    }\n\n    num = values[num];\n  }\n\n  if (typeof num === 'bigint') {\n    const numArray = [...bnToBuf(num)];\n\n    if (numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n\n    if (num.length === 0) {\n      size++;\n    }\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n\n    if (num.length === 0) {\n      out[0] = 0;\n    }\n\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80) {\n    return this._createEncoderBuffer(num);\n  }\n\n  if (num < 0x100) {\n    return this._createEncoderBuffer([0, num]);\n  }\n\n  let size = 1;\n\n  for (let i = num; i >= 0x100; i >>= 8) {\n    size++;\n  }\n\n  const out = new Array(size);\n\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n\n  if (out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function') {\n    entity = entity(obj);\n  }\n\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n\n  if (state.default === null) {\n    return false;\n  }\n\n  const data = dataBuffer.join();\n\n  if (state.defaultBuffer === undefined) {\n    state.defaultBuffer = this._encodeValue(state.default, reporter, parent).join();\n  }\n\n  if (data.length !== state.defaultBuffer.length) {\n    return false;\n  }\n\n  for (i = 0; i < data.length; i++) {\n    if (data[i] !== state.defaultBuffer[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}; // Utility methods\n\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof') {\n    tag = 'seq';\n  } else if (tag === 'setof') {\n    tag = 'set';\n  }\n\n  if (Object.prototype.hasOwnProperty.call(der.tagByName, tag)) {\n    res = der.tagByName[tag];\n  } else if (typeof tag === 'number' && (tag | 0) === tag) {\n    res = tag;\n  } else {\n    return reporter.error(`Unknown tag: ${tag}`);\n  }\n\n  if (res >= 0x1f) {\n    return reporter.error('Multi-octet tag encoding unsupported');\n  }\n\n  if (!primitive) {\n    res |= 0x20;\n  }\n\n  res |= der.tagClassByName[cls || 'universal'] << 6;\n  return res;\n}\n\nmodule.exports = DEREncoder;","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/@panva/asn1.js/lib/asn1/encoders/der.js"],"names":["inherits","require","Node","der","DEREncoder","entity","enc","name","tree","DERNode","_init","body","prototype","encode","data","reporter","_encode","join","parent","call","_encodeComposite","encodeComposite","tag","primitive","cls","content","encodedTag","encodeTag","length","header","Buffer","alloc","_createEncoderBuffer","lenOctets","i","j","_encodeStr","encodeStr","str","unused","buf","writeUInt16BE","charCodeAt","_isNumstr","error","_isPrintstr","test","_encodeObjid","encodeObjid","id","values","relative","Object","hasOwnProperty","split","Array","isArray","slice","JSON","stringify","splice","size","ident","objid","offset","two","num","_encodeTime","encodeTime","time","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_encodeNull","encodeNull","bnToBuf","bn","hex","BigInt","toString","len","u8","Uint8Array","parseInt","_encodeInt","encodeInt","numArray","unshift","from","isBuffer","out","copy","_encodeBool","encodeBool","value","_use","use","obj","_getEncoder","_skipDefault","skipDefault","dataBuffer","state","_baseState","default","defaultBuffer","undefined","_encodeValue","res","tagByName","tagClassByName","module","exports"],"mappings":"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","sourcesContent":["/* global BigInt */\nconst { inherits } = require('util')\n\nconst Node = require('../base/node')\nconst der = require('../constants/der')\n\nfunction DEREncoder (entity) {\n  this.enc = 'der'\n  this.name = entity.name\n  this.entity = entity\n\n  // Construct base tree\n  this.tree = new DERNode()\n  this.tree._init(entity.body)\n}\n\nDEREncoder.prototype.encode = function encode (data, reporter) {\n  return this.tree._encode(data, reporter).join()\n}\n\n// Tree methods\n\nfunction DERNode (parent) {\n  Node.call(this, 'der', parent)\n}\ninherits(DERNode, Node)\n\nDERNode.prototype._encodeComposite = function encodeComposite (tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter)\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2)\n    header[0] = encodedTag\n    header[1] = content.length\n    return this._createEncoderBuffer([header, content])\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1\n  for (let i = content.length; i >= 0x100; i >>= 8) { lenOctets++ }\n\n  const header = Buffer.alloc(1 + 1 + lenOctets)\n  header[0] = encodedTag\n  header[1] = 0x80 | lenOctets\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) { header[i] = j & 0xff }\n\n  return this._createEncoderBuffer([header, content])\n}\n\nDERNode.prototype._encodeStr = function encodeStr (str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([str.unused | 0, str.data])\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2)\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2)\n    }\n    return this._createEncoderBuffer(buf)\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports only digits and space')\n    }\n    return this._createEncoderBuffer(str)\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark')\n    }\n    return this._createEncoderBuffer(str)\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str)\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str)\n  } else {\n    return this.reporter.error(`Encoding of string type: ${tag} unsupported`)\n  }\n}\n\nDERNode.prototype._encodeObjid = function encodeObjid (id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values) { return this.reporter.error('string objid given, but no values map found') }\n    if (!Object.prototype.hasOwnProperty.call(values, id)) { return this.reporter.error('objid not found in values map') }\n    id = values[id].split(/[\\s.]+/g)\n    for (let i = 0; i < id.length; i++) { id[i] |= 0 }\n  } else if (Array.isArray(id)) {\n    id = id.slice()\n    for (let i = 0; i < id.length; i++) { id[i] |= 0 }\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error(`objid() should be either array or string, got: ${JSON.stringify(id)}`)\n  }\n\n  if (!relative) {\n    if (id[1] >= 40) { return this.reporter.error('Second objid identifier OOB') }\n    id.splice(0, 2, id[0] * 40 + id[1])\n  }\n\n  // Count number of octets\n  let size = 0\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i]\n    for (size++; ident >= 0x80; ident >>= 7) { size++ }\n  }\n\n  const objid = Buffer.alloc(size)\n  let offset = objid.length - 1\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i]\n    objid[offset--] = ident & 0x7f\n    while ((ident >>= 7) > 0) { objid[offset--] = 0x80 | (ident & 0x7f) }\n  }\n\n  return this._createEncoderBuffer(objid)\n}\n\nfunction two (num) {\n  if (num < 10) { return `0${num}` } else { return num }\n}\n\nDERNode.prototype._encodeTime = function encodeTime (time, tag) {\n  let str\n  const date = new Date(time)\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('')\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('')\n  } else {\n    this.reporter.error(`Encoding ${tag} time is not supported yet`)\n  }\n\n  return this._encodeStr(str, 'octstr')\n}\n\nDERNode.prototype._encodeNull = function encodeNull () {\n  return this._createEncoderBuffer('')\n}\n\nfunction bnToBuf (bn) {\n  var hex = BigInt(bn).toString(16)\n  if (hex.length % 2) { hex = '0' + hex }\n\n  var len = hex.length / 2\n  var u8 = new Uint8Array(len)\n\n  var i = 0\n  var j = 0\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16)\n    i += 1\n    j += 2\n  }\n\n  return u8\n}\n\nDERNode.prototype._encodeInt = function encodeInt (num, values) {\n  if (typeof num === 'string') {\n    if (!values) { return this.reporter.error('String int or enum given, but no values map') }\n    if (!Object.prototype.hasOwnProperty.call(values, num)) {\n      return this.reporter.error(`Values map doesn't contain: ${JSON.stringify(num)}`)\n    }\n    num = values[num]\n  }\n\n  if (typeof num === 'bigint') {\n    const numArray = [...bnToBuf(num)]\n    if (numArray[0] & 0x80) {\n      numArray.unshift(0)\n    }\n    num = Buffer.from(numArray)\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length\n    if (num.length === 0) { size++ }\n\n    const out = Buffer.alloc(size)\n    num.copy(out)\n    if (num.length === 0) { out[0] = 0 }\n    return this._createEncoderBuffer(out)\n  }\n\n  if (num < 0x80) { return this._createEncoderBuffer(num) }\n\n  if (num < 0x100) { return this._createEncoderBuffer([0, num]) }\n\n  let size = 1\n  for (let i = num; i >= 0x100; i >>= 8) { size++ }\n\n  const out = new Array(size)\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff\n    num >>= 8\n  }\n  if (out[0] & 0x80) {\n    out.unshift(0)\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out))\n}\n\nDERNode.prototype._encodeBool = function encodeBool (value) {\n  return this._createEncoderBuffer(value ? 0xff : 0)\n}\n\nDERNode.prototype._use = function use (entity, obj) {\n  if (typeof entity === 'function') { entity = entity(obj) }\n  return entity._getEncoder('der').tree\n}\n\nDERNode.prototype._skipDefault = function skipDefault (dataBuffer, reporter, parent) {\n  const state = this._baseState\n  let i\n  if (state.default === null) { return false }\n\n  const data = dataBuffer.join()\n  if (state.defaultBuffer === undefined) { state.defaultBuffer = this._encodeValue(state.default, reporter, parent).join() }\n\n  if (data.length !== state.defaultBuffer.length) { return false }\n\n  for (i = 0; i < data.length; i++) {\n    if (data[i] !== state.defaultBuffer[i]) { return false }\n  }\n\n  return true\n}\n\n// Utility methods\n\nfunction encodeTag (tag, primitive, cls, reporter) {\n  let res\n\n  if (tag === 'seqof') { tag = 'seq' } else if (tag === 'setof') { tag = 'set' }\n\n  if (Object.prototype.hasOwnProperty.call(der.tagByName, tag)) { res = der.tagByName[tag] } else if (typeof tag === 'number' && (tag | 0) === tag) { res = tag } else { return reporter.error(`Unknown tag: ${tag}`) }\n\n  if (res >= 0x1f) { return reporter.error('Multi-octet tag encoding unsupported') }\n\n  if (!primitive) { res |= 0x20 }\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6)\n\n  return res\n}\n\nmodule.exports = DEREncoder\n"]},"metadata":{},"sourceType":"script"}