{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport randomToken from \"rand-token\";\nexport const useTodo = (setTodo, todoItem) => {\n  _s();\n\n  const [isCheck, setCheck] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.check);\n  const [text, setContent] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.text);\n  const [date, setDate] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.date);\n  const [priority, setPriority] = useState(todoItem === null || todoItem === void 0 ? void 0 : todoItem.priority);\n\n  const onClickCheck = () => setCheck(!isCheck);\n\n  const onChangeContent = text => setContent(text);\n\n  const onChangeDate = date => setDate(date); //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n\n\n  const validator = todoItem => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n\n  const getErrText = () => {\n    let errText = `[ERROR] ${text ? \"\" : \"Todo Text\"}${!date + !priority > 0 && !text ? \", \" : \"\"}${date ? \"\" : \"Todo Date\"}${!priority > 0 && !date ? \", \" : \"\"}${priority ? \"\" : \"Todo Prioirty\"} ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n\n  const onChangePriority = value => setPriority(value);\n\n  const onSubmitTodo = event => {\n    event.preventDefault();\n    const id = Date.now().toString(16) + randomToken.generate(5);\n    const todoItem = {\n      isCheck,\n      text,\n      date,\n      priority,\n      id\n    };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(todoItem);\n\n    if (willUpdate) {\n      setTodo(todoItem).create();\n    } else {\n      throw new Error(getErrText());\n    }\n  };\n\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n\n_s(useTodo, \"7uw8nPDi0d6j657GwIuqgCNda8Q=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodo.js"],"names":["useState","randomToken","useTodo","setTodo","todoItem","isCheck","setCheck","check","text","setContent","date","setDate","priority","setPriority","onClickCheck","onChangeContent","onChangeDate","validator","getErrText","errText","onChangePriority","value","onSubmitTodo","event","preventDefault","id","Date","now","toString","generate","willUpdate","create","Error"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAAA;;AAC5C,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBN,QAAQ,CAACI,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEG,KAAX,CAApC;AACA,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBT,QAAQ,CAACI,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEI,IAAX,CAAnC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACI,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEM,IAAX,CAAhC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACI,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEQ,QAAX,CAAxC;;AAEA,QAAME,YAAY,GAAG,MAAMR,QAAQ,CAAC,CAACD,OAAF,CAAnC;;AACA,QAAMU,eAAe,GAAIP,IAAD,IAAUC,UAAU,CAACD,IAAD,CAA5C;;AACA,QAAMQ,YAAY,GAAIN,IAAD,IAAUC,OAAO,CAACD,IAAD,CAAtC,CAR4C,CAS5C;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAMO,SAAS,GAAIb,QAAD,IAAc;AAC9B,WAAOA,QAAQ,CAACI,IAAT,IAAiBJ,QAAQ,CAACM,IAA1B,IAAkCN,QAAQ,CAACQ,QAAlD;AACD,GAFD;;AAGA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAIC,OAAO,GAAI,WAAUX,IAAI,GAAG,EAAH,GAAQ,WAAY,GAC/C,CAACE,IAAD,GAAQ,CAACE,QAAT,GAAoB,CAApB,IAAyB,CAACJ,IAA1B,GAAiC,IAAjC,GAAwC,EACzC,GAAEE,IAAI,GAAG,EAAH,GAAQ,WAAY,GAAE,CAACE,QAAD,GAAY,CAAZ,IAAiB,CAACF,IAAlB,GAAyB,IAAzB,GAAgC,EAAG,GAC9DE,QAAQ,GAAG,EAAH,GAAQ,eACjB,IAAG,CAACJ,IAAD,GAAQ,CAACE,IAAT,GAAgB,CAACE,QAAjB,GAA4B,CAA5B,GAAgC,KAAhC,GAAwC,IAAK,eAJjD;AAKA,WAAOO,OAAP;AACD,GAPD;;AAQA,QAAMC,gBAAgB,GAAIC,KAAD,IAAWR,WAAW,CAACQ,KAAD,CAA/C;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,GAAWC,QAAX,CAAoB,EAApB,IAA0B3B,WAAW,CAAC4B,QAAZ,CAAqB,CAArB,CAArC;AACA,UAAMzB,QAAQ,GAAG;AAAEC,MAAAA,OAAF;AAAWG,MAAAA,IAAX;AAAiBE,MAAAA,IAAjB;AAAuBE,MAAAA,QAAvB;AAAiCa,MAAAA;AAAjC,KAAjB;AACA,QAAIK,UAAU,GAAG,IAAjB;AACA,QAAI,OAAOb,SAAP,KAAqB,UAAzB,EAAqCa,UAAU,GAAGb,SAAS,CAACb,QAAD,CAAtB;;AACrC,QAAI0B,UAAJ,EAAgB;AACd3B,MAAAA,OAAO,CAACC,QAAD,CAAP,CAAkB2B,MAAlB;AACD,KAFD,MAEO;AACL,YAAM,IAAIC,KAAJ,CAAUd,UAAU,EAApB,CAAN;AACD;AACF,GAXD;;AAYA,SAAO,CAACJ,YAAD,EAAeC,eAAf,EAAgCC,YAAhC,EAA8CI,gBAA9C,CAAP;AACD,CAzCM;;GAAMlB,O","sourcesContent":["import { useState } from \"react\";\nimport randomToken from \"rand-token\";\nexport const useTodo = (setTodo, todoItem) => {\n  const [isCheck, setCheck] = useState(todoItem?.check);\n  const [text, setContent] = useState(todoItem?.text);\n  const [date, setDate] = useState(todoItem?.date);\n  const [priority, setPriority] = useState(todoItem?.priority);\n\n  const onClickCheck = () => setCheck(!isCheck);\n  const onChangeContent = (text) => setContent(text);\n  const onChangeDate = (date) => setDate(date);\n  //   const onCheck = (event) => {\n  //     try {\n  //       event.preventDefault();\n  //     } catch (error) {\n  //       alert(error);\n  //     }\n  //   };\n  const validator = (todoItem) => {\n    return todoItem.text && todoItem.date && todoItem.priority;\n  };\n  const getErrText = () => {\n    let errText = `[ERROR] ${text ? \"\" : \"Todo Text\"}${\n      !date + !priority > 0 && !text ? \", \" : \"\"\n    }${date ? \"\" : \"Todo Date\"}${!priority > 0 && !date ? \", \" : \"\"}${\n      priority ? \"\" : \"Todo Prioirty\"\n    } ${!text + !date + !priority > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n  const onChangePriority = (value) => setPriority(value);\n  const onSubmitTodo = (event) => {\n    event.preventDefault();\n    const id = Date.now().toString(16) + randomToken.generate(5);\n    const todoItem = { isCheck, text, date, priority, id };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(todoItem);\n    if (willUpdate) {\n      setTodo(todoItem).create();\n    } else {\n      throw new Error(getErrText());\n    }\n  };\n  return [onClickCheck, onChangeContent, onChangeDate, onChangePriority];\n};\n"]},"metadata":{},"sourceType":"module"}