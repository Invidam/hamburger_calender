{"ast":null,"code":"const {\n  inspect\n} = require('util');\n\nconst isObject = require('../help/is_object');\n\nconst {\n  generate,\n  generateSync\n} = require('../jwk/generate');\n\nconst {\n  USES_MAPPING\n} = require('../help/consts');\n\nconst {\n  isKey,\n  asKey: importKey\n} = require('../jwk');\n\nconst keyscore = (key, {\n  alg,\n  use,\n  ops\n}) => {\n  let score = 0;\n\n  if (alg && key.alg) {\n    score++;\n  }\n\n  if (use && key.use) {\n    score++;\n  }\n\n  if (ops && key.key_ops) {\n    score++;\n  }\n\n  return score;\n};\n\nclass KeyStore {\n  constructor(...keys) {\n    while (keys.some(Array.isArray)) {\n      keys = keys.flat ? keys.flat() : keys.reduce((acc, val) => {\n        if (Array.isArray(val)) {\n          return [...acc, ...val];\n        }\n\n        acc.push(val);\n        return acc;\n      }, []);\n    }\n\n    if (keys.some(k => !isKey(k) || !k.kty)) {\n      throw new TypeError('all keys must be instances of a key instantiated by JWK.asKey');\n    }\n\n    this._keys = new Set(keys);\n  }\n\n  all({\n    alg,\n    kid,\n    thumbprint,\n    use,\n    kty,\n    key_ops: ops,\n    x5t,\n    'x5t#S256': x5t256,\n    crv\n  } = {}) {\n    if (ops !== undefined && (!Array.isArray(ops) || !ops.length || ops.some(x => typeof x !== 'string'))) {\n      throw new TypeError('`key_ops` must be a non-empty array of strings');\n    }\n\n    const search = {\n      alg,\n      use,\n      ops\n    };\n    return [...this._keys].filter(key => {\n      let candidate = true;\n\n      if (candidate && kid !== undefined && key.kid !== kid) {\n        candidate = false;\n      }\n\n      if (candidate && thumbprint !== undefined && key.thumbprint !== thumbprint) {\n        candidate = false;\n      }\n\n      if (candidate && x5t !== undefined && key.x5t !== x5t) {\n        candidate = false;\n      }\n\n      if (candidate && x5t256 !== undefined && key['x5t#S256'] !== x5t256) {\n        candidate = false;\n      }\n\n      if (candidate && kty !== undefined && key.kty !== kty) {\n        candidate = false;\n      }\n\n      if (candidate && crv !== undefined && key.crv !== crv) {\n        candidate = false;\n      }\n\n      if (alg !== undefined && !key.algorithms().has(alg)) {\n        candidate = false;\n      }\n\n      if (candidate && use !== undefined && key.use !== undefined && key.use !== use) {\n        candidate = false;\n      } // TODO:\n\n\n      if (candidate && ops !== undefined && (key.key_ops !== undefined || key.use !== undefined)) {\n        let keyOps;\n\n        if (key.key_ops) {\n          keyOps = new Set(key.key_ops);\n        } else {\n          keyOps = USES_MAPPING[key.use];\n        }\n\n        if (ops.some(x => !keyOps.has(x))) {\n          candidate = false;\n        }\n      }\n\n      return candidate;\n    }).sort((first, second) => keyscore(second, search) - keyscore(first, search));\n  }\n\n  get(...args) {\n    return this.all(...args)[0];\n  }\n\n  add(key) {\n    if (!isKey(key) || !key.kty) {\n      throw new TypeError('key must be an instance of a key instantiated by JWK.asKey');\n    }\n\n    this._keys.add(key);\n  }\n\n  remove(key) {\n    if (!isKey(key)) {\n      throw new TypeError('key must be an instance of a key instantiated by JWK.asKey');\n    }\n\n    this._keys.delete(key);\n  }\n\n  toJWKS(priv = false) {\n    return {\n      keys: [...this._keys.values()].map(key => key.toJWK(priv && (key.private || key.secret && key.k)))\n    };\n  }\n\n  async generate(...args) {\n    this._keys.add(await generate(...args));\n  }\n\n  generateSync(...args) {\n    this._keys.add(generateSync(...args));\n  }\n\n  get size() {\n    return this._keys.size;\n  }\n  /* c8 ignore next 8 */\n\n\n  [inspect.custom]() {\n    return `${this.constructor.name} ${inspect(this.toJWKS(false), {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    })}`;\n  }\n\n  *[Symbol.iterator]() {\n    for (const key of this._keys) {\n      yield key;\n    }\n  }\n\n}\n\nfunction asKeyStore(jwks, {\n  ignoreErrors = false,\n  calculateMissingRSAPrimes = false\n} = {}) {\n  if (!isObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some(k => !isObject(k) || !('kty' in k))) {\n    throw new TypeError('jwks must be a JSON Web Key Set formatted object');\n  }\n\n  const keys = jwks.keys.map(jwk => {\n    try {\n      return importKey(jwk, {\n        calculateMissingRSAPrimes\n      });\n    } catch (err) {\n      if (!ignoreErrors) {\n        throw err;\n      }\n\n      return undefined;\n    }\n  }).filter(Boolean);\n  return new KeyStore(...keys);\n}\n\nmodule.exports = {\n  KeyStore,\n  asKeyStore\n};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/jose/lib/jwks/keystore.js"],"names":["inspect","require","isObject","generate","generateSync","USES_MAPPING","isKey","asKey","importKey","keyscore","key","alg","use","ops","score","key_ops","KeyStore","constructor","keys","some","Array","isArray","flat","reduce","acc","val","push","k","kty","TypeError","_keys","Set","all","kid","thumbprint","x5t","x5t256","crv","undefined","length","x","search","filter","candidate","algorithms","has","keyOps","sort","first","second","get","args","add","remove","delete","toJWKS","priv","values","map","toJWK","private","secret","size","custom","name","depth","Infinity","colors","process","stdout","isTTY","compact","sorted","Symbol","iterator","asKeyStore","jwks","ignoreErrors","calculateMissingRSAPrimes","jwk","err","Boolean","module","exports"],"mappings":"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","sourcesContent":["const { inspect } = require('util')\n\nconst isObject = require('../help/is_object')\nconst { generate, generateSync } = require('../jwk/generate')\nconst { USES_MAPPING } = require('../help/consts')\nconst { isKey, asKey: importKey } = require('../jwk')\n\nconst keyscore = (key, { alg, use, ops }) => {\n  let score = 0\n\n  if (alg && key.alg) {\n    score++\n  }\n\n  if (use && key.use) {\n    score++\n  }\n\n  if (ops && key.key_ops) {\n    score++\n  }\n\n  return score\n}\n\nclass KeyStore {\n  constructor (...keys) {\n    while (keys.some(Array.isArray)) {\n      keys = keys.flat\n        ? keys.flat()\n        : keys.reduce((acc, val) => {\n          if (Array.isArray(val)) {\n            return [...acc, ...val]\n          }\n\n          acc.push(val)\n          return acc\n        }, [])\n    }\n    if (keys.some(k => !isKey(k) || !k.kty)) {\n      throw new TypeError('all keys must be instances of a key instantiated by JWK.asKey')\n    }\n\n    this._keys = new Set(keys)\n  }\n\n  all ({ alg, kid, thumbprint, use, kty, key_ops: ops, x5t, 'x5t#S256': x5t256, crv } = {}) {\n    if (ops !== undefined && (!Array.isArray(ops) || !ops.length || ops.some(x => typeof x !== 'string'))) {\n      throw new TypeError('`key_ops` must be a non-empty array of strings')\n    }\n\n    const search = { alg, use, ops }\n    return [...this._keys]\n      .filter((key) => {\n        let candidate = true\n\n        if (candidate && kid !== undefined && key.kid !== kid) {\n          candidate = false\n        }\n\n        if (candidate && thumbprint !== undefined && key.thumbprint !== thumbprint) {\n          candidate = false\n        }\n\n        if (candidate && x5t !== undefined && key.x5t !== x5t) {\n          candidate = false\n        }\n\n        if (candidate && x5t256 !== undefined && key['x5t#S256'] !== x5t256) {\n          candidate = false\n        }\n\n        if (candidate && kty !== undefined && key.kty !== kty) {\n          candidate = false\n        }\n\n        if (candidate && crv !== undefined && (key.crv !== crv)) {\n          candidate = false\n        }\n\n        if (alg !== undefined && !key.algorithms().has(alg)) {\n          candidate = false\n        }\n\n        if (candidate && use !== undefined && (key.use !== undefined && key.use !== use)) {\n          candidate = false\n        }\n\n        // TODO:\n        if (candidate && ops !== undefined && (key.key_ops !== undefined || key.use !== undefined)) {\n          let keyOps\n          if (key.key_ops) {\n            keyOps = new Set(key.key_ops)\n          } else {\n            keyOps = USES_MAPPING[key.use]\n          }\n          if (ops.some(x => !keyOps.has(x))) {\n            candidate = false\n          }\n        }\n\n        return candidate\n      })\n      .sort((first, second) => keyscore(second, search) - keyscore(first, search))\n  }\n\n  get (...args) {\n    return this.all(...args)[0]\n  }\n\n  add (key) {\n    if (!isKey(key) || !key.kty) {\n      throw new TypeError('key must be an instance of a key instantiated by JWK.asKey')\n    }\n\n    this._keys.add(key)\n  }\n\n  remove (key) {\n    if (!isKey(key)) {\n      throw new TypeError('key must be an instance of a key instantiated by JWK.asKey')\n    }\n\n    this._keys.delete(key)\n  }\n\n  toJWKS (priv = false) {\n    return {\n      keys: [...this._keys.values()].map(\n        key => key.toJWK(priv && (key.private || (key.secret && key.k)))\n      )\n    }\n  }\n\n  async generate (...args) {\n    this._keys.add(await generate(...args))\n  }\n\n  generateSync (...args) {\n    this._keys.add(generateSync(...args))\n  }\n\n  get size () {\n    return this._keys.size\n  }\n\n  /* c8 ignore next 8 */\n  [inspect.custom] () {\n    return `${this.constructor.name} ${inspect(this.toJWKS(false), {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    })}`\n  }\n\n  * [Symbol.iterator] () {\n    for (const key of this._keys) {\n      yield key\n    }\n  }\n}\n\nfunction asKeyStore (jwks, { ignoreErrors = false, calculateMissingRSAPrimes = false } = {}) {\n  if (!isObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some(k => !isObject(k) || !('kty' in k))) {\n    throw new TypeError('jwks must be a JSON Web Key Set formatted object')\n  }\n\n  const keys = jwks.keys.map((jwk) => {\n    try {\n      return importKey(jwk, { calculateMissingRSAPrimes })\n    } catch (err) {\n      if (!ignoreErrors) {\n        throw err\n      }\n      return undefined\n    }\n  }).filter(Boolean)\n\n  return new KeyStore(...keys)\n}\n\nmodule.exports = { KeyStore, asKeyStore }\n"]},"metadata":{},"sourceType":"script"}