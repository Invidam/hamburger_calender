{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { API, APIv2, updateAPIHeader } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { getToday } from \"../../tools/time\";\n\nconst verifyToken = async () => {\n  const {\n    token\n  } = LocalStroage.accessToken().get();\n  const response = await APIv2.auth().verifyToken(token); //await API.post(\"/api/jwt/verify\", { token });\n\n  return response.data.decode;\n};\n\nexport const useLogin = () => {\n  _s();\n\n  const [user, setUser] = useState();\n  const [isLoginHookLoading, setLoad] = useState(true);\n\n  const setUserInToken = async () => {\n    try {\n      if (!LocalStroage.accessToken().isEmpty) {\n        console.log(\"user FIND! \");\n        localStorage.setItem(\"access_token\", \"undefined\"); // throw new Error(\"access_token not exists.\");\n      } else {\n        const {\n          username\n        } = await verifyToken();\n        console.log(\"user find! \", username);\n        setUser(username);\n      }\n\n      if (isLoginHookLoading) setLoad(false);\n    } catch (error) {\n      alert(error);\n      setUser(undefined);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"USE EFFECT APPROACH\");\n    setUserInToken();\n  }, []);\n\n  const setDataInLocal = user => {\n    try {\n      const date = getToday();\n      updateAPIHeader();\n\n      if (LocalStroage.recordTime(\"wakeTime\").isEmpty()) {\n        const wakeTime = LocalStroage.recordTime(\"wakeTime\").get();\n        APIv2.recordTime(user, date, \"wakeTime\").edit(wakeTime);\n        LocalStroage.recordTime(\"wakeTime\").remove();\n      }\n\n      if (LocalStroage.recordTime(\"bedTime\").isEmpty()) {\n        const bedTime = LocalStroage.recordTime(\"bedTime\").get();\n        APIv2.recordTime(user, date, \"bedTime\").edit(bedTime);\n        LocalStroage.recordTime(\"bedTime\").remove();\n      }\n\n      if (LocalStroage.workList().isEmpty()) {\n        const workList = LocalStroage.workList(\"workList\").get();\n        APIv2.workList(user, date, \"workList\").update(workList);\n        LocalStroage.workList(\"workList\").remove();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const authenticated = user != null;\n\n  const login = async (userInfo, socialType) => {\n    // setUser(signIn({ email, password }));\n    try {\n      setLoad(true); // const response = await API.post(`/auth/login/${socialType}`, {\n      //   userInfo,\n      // });\n\n      const response = await APIv2.auth().login(socialType, userInfo);\n      const {\n        access_token,\n        username\n      } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n      setLoad(false);\n      if (!LocalStroage.accessToken().isEmpty()) setDataInLocal(username);\n    } catch (error) {\n      setLoad(false);\n      console.log(\"WHY NOT ERR\");\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n    updateAPIHeader();\n  };\n\n  return [user, setUser, authenticated, login, logout, isLoginHookLoading];\n};\n\n_s(useLogin, \"q416jX24rdkNbEkLioJ9Ybd388k=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useLogin.js"],"names":["useEffect","useState","API","APIv2","updateAPIHeader","LocalStroage","getToday","verifyToken","token","accessToken","get","response","auth","data","decode","useLogin","user","setUser","isLoginHookLoading","setLoad","setUserInToken","isEmpty","console","log","localStorage","setItem","username","error","alert","undefined","setDataInLocal","date","recordTime","wakeTime","edit","remove","bedTime","workList","update","authenticated","login","userInfo","socialType","access_token","JSON","stringify","logout","removeItem"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { API, APIv2, updateAPIHeader } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { getToday } from \"../../tools/time\";\n\nconst verifyToken = async () => {\n  const { token } = LocalStroage.accessToken().get();\n  const response = await APIv2.auth().verifyToken(token); //await API.post(\"/api/jwt/verify\", { token });\n  return response.data.decode;\n};\n\nexport const useLogin = () => {\n  const [user, setUser] = useState();\n  const [isLoginHookLoading, setLoad] = useState(true);\n  const setUserInToken = async () => {\n    try {\n      if (!LocalStroage.accessToken().isEmpty) {\n        console.log(\"user FIND! \");\n        localStorage.setItem(\"access_token\", \"undefined\");\n        // throw new Error(\"access_token not exists.\");\n      } else {\n        const { username } = await verifyToken();\n        console.log(\"user find! \", username);\n        setUser(username);\n      }\n      if (isLoginHookLoading) setLoad(false);\n    } catch (error) {\n      alert(error);\n      setUser(undefined);\n    }\n  };\n  useEffect(() => {\n    console.log(\"USE EFFECT APPROACH\");\n    setUserInToken();\n  }, []);\n  const setDataInLocal = (user) => {\n    try {\n      const date = getToday();\n      updateAPIHeader();\n      if (LocalStroage.recordTime(\"wakeTime\").isEmpty()) {\n        const wakeTime = LocalStroage.recordTime(\"wakeTime\").get();\n        APIv2.recordTime(user, date, \"wakeTime\").edit(wakeTime);\n        LocalStroage.recordTime(\"wakeTime\").remove();\n      }\n      if (LocalStroage.recordTime(\"bedTime\").isEmpty()) {\n        const bedTime = LocalStroage.recordTime(\"bedTime\").get();\n        APIv2.recordTime(user, date, \"bedTime\").edit(bedTime);\n        LocalStroage.recordTime(\"bedTime\").remove();\n      }\n      if (LocalStroage.workList().isEmpty()) {\n        const workList = LocalStroage.workList(\"workList\").get();\n        APIv2.workList(user, date, \"workList\").update(workList);\n        LocalStroage.workList(\"workList\").remove();\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const authenticated = user != null;\n  const login = async (userInfo, socialType) => {\n    // setUser(signIn({ email, password }));\n    try {\n      setLoad(true);\n      // const response = await API.post(`/auth/login/${socialType}`, {\n      //   userInfo,\n      // });\n      const response = await APIv2.auth().login(socialType, userInfo);\n      const { access_token, username } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n      setLoad(false);\n      if (!LocalStroage.accessToken().isEmpty()) setDataInLocal(username);\n    } catch (error) {\n      setLoad(false);\n      console.log(\"WHY NOT ERR\");\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n    updateAPIHeader();\n  };\n\n  return [user, setUser, authenticated, login, logout, isLoginHookLoading];\n};\n"]},"metadata":{},"sourceType":"module"}