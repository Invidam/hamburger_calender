{"ast":null,"code":"export const useEditWork = (workList, setWorkList, idx, callback) => {\n  const validator = workObj => {\n    return workObj.workName && workObj.workTime && workObj.workColor;\n  };\n\n  let workColor = workList.length > idx ? workList[idx].workColor : undefined;\n\n  const hexToRgba = color => {\n    const r = parseInt(color.substr(1, 2), 16);\n    const g = parseInt(color.substr(3, 2), 16);\n    const b = parseInt(color.substr(5, 2), 16);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \", 1)\";\n  };\n\n  const onSubmitColor = color => {\n    if (!color) {\n      console.log(\"NO\", color);\n    } else if (color.substr(0, 1) === \"#\") {\n      color = hexToRgba(color);\n      console.log(\"HEX TO RGBA : \", color);\n    }\n\n    workColor = color;\n  };\n\n  const onEditWork = (event, idx) => {\n    event.preventDefault();\n    const workName = event.target.workName.value;\n    const workTime = parseInt(event.target.workTime.value);\n    const workObj = {\n      workName,\n      workTime,\n      workColor\n    };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(workObj);\n\n    if (willUpdate) {\n      callback();\n      const workListTemp = [...workList];\n      workListTemp.splice(idx, 1, workObj);\n      setWorkList(workListTemp);\n    } else {\n      console.log(workObj);\n      console.log(\"NOT CHOOSED\");\n      let errText = `[ERROR] ${workName ? \"\" : \"WorkName\"}${!workTime + !workColor > 0 && !workName ? \", \" : \"\"}${workTime ? \"\" : \"WorkTime\"}${!workColor > 0 && !workTime ? \", \" : \"\"}${workColor ? \"\" : \"WorkColor\"} ${!workName + !workTime + !workColor > 1 ? \"are\" : \"is\"} not entered.`;\n      alert(errText);\n    }\n  };\n\n  return {\n    onSubmitColor,\n    onEditWork\n  };\n};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/useEditWork.js"],"names":["useEditWork","workList","setWorkList","idx","callback","validator","workObj","workName","workTime","workColor","length","undefined","hexToRgba","color","r","parseInt","substr","g","b","onSubmitColor","console","log","onEditWork","event","preventDefault","target","value","willUpdate","workListTemp","splice","errText","alert"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBC,GAAxB,EAA6BC,QAA7B,KAA0C;AACnE,QAAMC,SAAS,GAAIC,OAAD,IAAa;AAC7B,WAAOA,OAAO,CAACC,QAAR,IAAoBD,OAAO,CAACE,QAA5B,IAAwCF,OAAO,CAACG,SAAvD;AACD,GAFD;;AAGA,MAAIA,SAAS,GAAGR,QAAQ,CAACS,MAAT,GAAkBP,GAAlB,GAAwBF,QAAQ,CAACE,GAAD,CAAR,CAAcM,SAAtC,GAAkDE,SAAlE;;AACA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,UAAMC,CAAC,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAlB;AACA,UAAMC,CAAC,GAAGF,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAlB;AACA,UAAME,CAAC,GAAGH,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAlB;AACA,WAAO,UAAUF,CAAV,GAAc,GAAd,GAAoBG,CAApB,GAAwB,GAAxB,GAA8BC,CAA9B,GAAkC,MAAzC;AACD,GALD;;AAMA,QAAMC,aAAa,GAAIN,KAAD,IAAW;AAC/B,QAAI,CAACA,KAAL,EAAY;AACVO,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBR,KAAlB;AACD,KAFD,MAEO,IAAIA,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,CAAhB,MAAuB,GAA3B,EAAgC;AACrCH,MAAAA,KAAK,GAAGD,SAAS,CAACC,KAAD,CAAjB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,KAA9B;AACD;;AACDJ,IAAAA,SAAS,GAAGI,KAAZ;AACD,GARD;;AASA,QAAMS,UAAU,GAAG,CAACC,KAAD,EAAQpB,GAAR,KAAgB;AACjCoB,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMjB,QAAQ,GAAGgB,KAAK,CAACE,MAAN,CAAalB,QAAb,CAAsBmB,KAAvC;AACA,UAAMlB,QAAQ,GAAGO,QAAQ,CAACQ,KAAK,CAACE,MAAN,CAAajB,QAAb,CAAsBkB,KAAvB,CAAzB;AACA,UAAMpB,OAAO,GAAG;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAAhB;AACA,QAAIkB,UAAU,GAAG,IAAjB;AACA,QAAI,OAAOtB,SAAP,KAAqB,UAAzB,EAAqCsB,UAAU,GAAGtB,SAAS,CAACC,OAAD,CAAtB;;AACrC,QAAIqB,UAAJ,EAAgB;AACdvB,MAAAA,QAAQ;AACR,YAAMwB,YAAY,GAAG,CAAC,GAAG3B,QAAJ,CAArB;AACA2B,MAAAA,YAAY,CAACC,MAAb,CAAoB1B,GAApB,EAAyB,CAAzB,EAA4BG,OAA5B;AACAJ,MAAAA,WAAW,CAAC0B,YAAD,CAAX;AACD,KALD,MAKO;AACLR,MAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIS,OAAO,GAAI,WAAUvB,QAAQ,GAAG,EAAH,GAAQ,UAAW,GAClD,CAACC,QAAD,GAAY,CAACC,SAAb,GAAyB,CAAzB,IAA8B,CAACF,QAA/B,GAA0C,IAA1C,GAAiD,EAClD,GAAEC,QAAQ,GAAG,EAAH,GAAQ,UAAW,GAAE,CAACC,SAAD,GAAa,CAAb,IAAkB,CAACD,QAAnB,GAA8B,IAA9B,GAAqC,EAAG,GACtEC,SAAS,GAAG,EAAH,GAAQ,WAClB,IAAG,CAACF,QAAD,GAAY,CAACC,QAAb,GAAwB,CAACC,SAAzB,GAAqC,CAArC,GAAyC,KAAzC,GAAiD,IAAK,eAJ1D;AAKAsB,MAAAA,KAAK,CAACD,OAAD,CAAL;AACD;AACF,GAtBD;;AAuBA,SAAO;AAAEX,IAAAA,aAAF;AAAiBG,IAAAA;AAAjB,GAAP;AACD,CA5CM","sourcesContent":["export const useEditWork = (workList, setWorkList, idx, callback) => {\n  const validator = (workObj) => {\n    return workObj.workName && workObj.workTime && workObj.workColor;\n  };\n  let workColor = workList.length > idx ? workList[idx].workColor : undefined;\n  const hexToRgba = (color) => {\n    const r = parseInt(color.substr(1, 2), 16);\n    const g = parseInt(color.substr(3, 2), 16);\n    const b = parseInt(color.substr(5, 2), 16);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \", 1)\";\n  };\n  const onSubmitColor = (color) => {\n    if (!color) {\n      console.log(\"NO\", color);\n    } else if (color.substr(0, 1) === \"#\") {\n      color = hexToRgba(color);\n      console.log(\"HEX TO RGBA : \", color);\n    }\n    workColor = color;\n  };\n  const onEditWork = (event, idx) => {\n    event.preventDefault();\n    const workName = event.target.workName.value;\n    const workTime = parseInt(event.target.workTime.value);\n    const workObj = { workName, workTime, workColor };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(workObj);\n    if (willUpdate) {\n      callback();\n      const workListTemp = [...workList];\n      workListTemp.splice(idx, 1, workObj);\n      setWorkList(workListTemp);\n    } else {\n      console.log(workObj);\n      console.log(\"NOT CHOOSED\");\n      let errText = `[ERROR] ${workName ? \"\" : \"WorkName\"}${\n        !workTime + !workColor > 0 && !workName ? \", \" : \"\"\n      }${workTime ? \"\" : \"WorkTime\"}${!workColor > 0 && !workTime ? \", \" : \"\"}${\n        workColor ? \"\" : \"WorkColor\"\n      } ${!workName + !workTime + !workColor > 1 ? \"are\" : \"is\"} not entered.`;\n      alert(errText);\n    }\n  };\n  return { onSubmitColor, onEditWork };\n};\n"]},"metadata":{},"sourceType":"module"}