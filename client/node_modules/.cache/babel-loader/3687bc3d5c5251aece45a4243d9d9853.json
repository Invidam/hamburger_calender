{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/WorkList.js\",\n    _s = $RefreshSig$();\n\nimport { useClick } from \"../../hooks/useClick\";\nimport { usePushWork } from \"../../hooks/usePushWork\";\nimport { onRecordTime } from \"./window/AddWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet wakeTime, bedTime;\nconst workList = [];\nexport const isUploadWakeTime = () => wakeTime;\nexport const uploadWakeTime = timeObj => {\n  wakeTime = timeObj;\n};\nexport const uploadBedTime = timeObj => {\n  bedTime = timeObj;\n};\nexport const WorkList = () => {\n  _s();\n\n  const validatorFun = workObj => {\n    return workObj.workName && workObj.workTime;\n  };\n\n  const {\n    workList,\n    onSubmitWork\n  } = usePushWork(validatorFun);\n  const wakeTimeElem = useClick(onRecordTime);\n  const bedTimeElem = useClick(onRecordTime);\n\n  const testf = () => console.log(\"TEST\");\n\n  const makeWorkItem = workItem => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [workItem.workName, \" \", workItem.workTime, \"h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <button ref={wakeTimeElem}>SUBMIT</button>\n    //   <button ref={bedTimeElem}>SUBMIT</button>\n    //   <form onSubmit={onSubmitWork}>\n    //     <input type=\"text\" name=\"workName\" placeholder=\"추가할 작업명\"></input>\n    //     <input type=\"number\" name=\"workTime\" placeholder=\"작업 시간\"></input>\n    //     <button type=\"submit\">SUBMIT</button>\n    //   </form>\n    _jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), workList && workList.map(workItem => {\n        return makeWorkItem(workItem);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this) // </div>\n\n  );\n};\n\n_s(WorkList, \"lRDoSdgRprtojyiG1XeHqn5MQgo=\", false, function () {\n  return [usePushWork, useClick, useClick];\n});\n\n_c = WorkList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/WorkList.js"],"names":["useClick","usePushWork","onRecordTime","wakeTime","bedTime","workList","isUploadWakeTime","uploadWakeTime","timeObj","uploadBedTime","WorkList","validatorFun","workObj","workName","workTime","onSubmitWork","wakeTimeElem","bedTimeElem","testf","console","log","makeWorkItem","workItem","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,sBAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,IAAIC,QAAJ,EAAcC,OAAd;AACA,MAAMC,QAAQ,GAAG,EAAjB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAMH,QAA/B;AAEP,OAAO,MAAMI,cAAc,GAAIC,OAAD,IAAa;AACzCL,EAAAA,QAAQ,GAAGK,OAAX;AACD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAID,OAAD,IAAa;AACxCJ,EAAAA,OAAO,GAAGI,OAAV;AACD,CAFM;AAIP,OAAO,MAAME,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,YAAY,GAAIC,OAAD,IAAa;AAChC,WAAOA,OAAO,CAACC,QAAR,IAAoBD,OAAO,CAACE,QAAnC;AACD,GAFD;;AAGA,QAAM;AAAET,IAAAA,QAAF;AAAYU,IAAAA;AAAZ,MAA6Bd,WAAW,CAACU,YAAD,CAA9C;AACA,QAAMK,YAAY,GAAGhB,QAAQ,CAACE,YAAD,CAA7B;AACA,QAAMe,WAAW,GAAGjB,QAAQ,CAACE,YAAD,CAA5B;;AACA,QAAMgB,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAApB;;AACA,QAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,wBACE;AAAA,iBACGA,QAAQ,CAACT,QADZ,OACuBS,QAAQ,CAACR,QADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,EAIGT,QAAQ,IACPA,QAAQ,CAACkB,GAAT,CAAcD,QAAD,IAAc;AACzB,eAAOD,YAAY,CAACC,QAAD,CAAnB;AACD,OAFD,CALJ,eAQE;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CAmBE;;AAnBF;AAqBD,CArCM;;GAAMZ,Q;UAIwBT,W,EACdD,Q,EACDA,Q;;;KANTU,Q","sourcesContent":["import { useClick } from \"../../hooks/useClick\";\nimport { usePushWork } from \"../../hooks/usePushWork\";\nimport { onRecordTime } from \"./window/AddWindow\";\n\nlet wakeTime, bedTime;\nconst workList = [];\n\nexport const isUploadWakeTime = () => wakeTime;\n\nexport const uploadWakeTime = (timeObj) => {\n  wakeTime = timeObj;\n};\n\nexport const uploadBedTime = (timeObj) => {\n  bedTime = timeObj;\n};\n\nexport const WorkList = () => {\n  const validatorFun = (workObj) => {\n    return workObj.workName && workObj.workTime;\n  };\n  const { workList, onSubmitWork } = usePushWork(validatorFun);\n  const wakeTimeElem = useClick(onRecordTime);\n  const bedTimeElem = useClick(onRecordTime);\n  const testf = () => console.log(\"TEST\");\n  const makeWorkItem = (workItem) => {\n    return (\n      <li>\n        {workItem.workName} {workItem.workTime}h\n      </li>\n    );\n  };\n\n  return (\n    // <div>\n    //   <button ref={wakeTimeElem}>SUBMIT</button>\n    //   <button ref={bedTimeElem}>SUBMIT</button>\n    //   <form onSubmit={onSubmitWork}>\n    //     <input type=\"text\" name=\"workName\" placeholder=\"추가할 작업명\"></input>\n    //     <input type=\"number\" name=\"workTime\" placeholder=\"작업 시간\"></input>\n    //     <button type=\"submit\">SUBMIT</button>\n    //   </form>\n    <ol>\n      <li>\n        {/* {isUploadWakeTime() Wake Up at {wakeTime.hour}:{wakeTime.minute}} */}\n      </li>\n      {workList &&\n        workList.map((workItem) => {\n          return makeWorkItem(workItem);\n        })}\n      <li>{/* Sleep at {bedTime.hour}:{bedTime.minute} */}</li>\n    </ol>\n    // </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}