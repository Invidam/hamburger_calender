{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst verifyToken = async () => {\n  const {\n    token\n  } = JSON.parse(localStorage.getItem(\"access_token\"));\n  const response = await axios.post(\"/api/jwt/verify\", {\n    token\n  });\n  return response.data.decode;\n};\n\nexport const useLogin = () => {\n  _s();\n\n  const [user, setUser] = useState();\n\n  const setUserInToken = async () => {\n    try {\n      if (!localStorage.getItem(\"access_token\") || localStorage.getItem(\"access_token\") === \"undefined\") {\n        localStorage.setItem(\"access_token\", \"undefined\");\n        throw new Error(\"access_token not exists.\");\n      }\n\n      console.log(localStorage.getItem(\"access_token\"), typeof localStorage.getItem(\"access_token\"));\n      const {\n        username\n      } = await verifyToken();\n      setUser(username);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    setUserInToken();\n  }, []);\n  const authenticated = user != null;\n\n  const login = async ({\n    email,\n    password\n  }) => {\n    // setUser(signIn({ email, password }));\n    try {\n      const response = await axios.post(`/auth/login/notSocial`, {\n        email,\n        password\n      });\n      const {\n        access_token,\n        username\n      } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, setUser, authenticated, login, logout];\n};\n\n_s(useLogin, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/user/useLogin.js"],"names":["axios","useEffect","useState","verifyToken","token","JSON","parse","localStorage","getItem","response","post","data","decode","useLogin","user","setUser","setUserInToken","setItem","Error","console","log","username","error","authenticated","login","email","password","access_token","stringify","alert","logout","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAG,YAAY;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAlB;AACA,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,iBAAX,EAA8B;AAAEN,IAAAA;AAAF,GAA9B,CAAvB;AACA,SAAOK,QAAQ,CAACE,IAAT,CAAcC,MAArB;AACD,CAJD;;AAMA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;;AACA,QAAMc,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,UACE,CAACT,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,IACAD,YAAY,CAACC,OAAb,CAAqB,cAArB,MAAyC,WAF3C,EAGE;AACAD,QAAAA,YAAY,CAACU,OAAb,CAAqB,cAArB,EAAqC,WAArC;AACA,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CACEb,YAAY,CAACC,OAAb,CAAqB,cAArB,CADF,EAEE,OAAOD,YAAY,CAACC,OAAb,CAAqB,cAArB,CAFT;AAIA,YAAM;AAAEa,QAAAA;AAAF,UAAe,MAAMlB,WAAW,EAAtC;AACAY,MAAAA,OAAO,CAACM,QAAD,CAAP;AACD,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD;AACF,GAlBD;;AAmBArB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMO,aAAa,GAAGT,IAAI,IAAI,IAA9B;;AACA,QAAMU,KAAK,GAAG,OAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AAC3C;AACA,QAAI;AACF,YAAMjB,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,uBAAZ,EAAoC;AACzDe,QAAAA,KADyD;AAEzDC,QAAAA;AAFyD,OAApC,CAAvB;AAIA,YAAM;AAAEC,QAAAA,YAAF;AAAgBN,QAAAA;AAAhB,UAA6BZ,QAAQ,CAACE,IAA5C;AACAJ,MAAAA,YAAY,CAACU,OAAb,CAAqB,cAArB,EAAqCZ,IAAI,CAACuB,SAAL,CAAeD,YAAf,CAArC;AACAZ,MAAAA,OAAO,CAACM,QAAD,CAAP;AACD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdO,MAAAA,KAAK,CAACP,KAAD,CAAL;AACD;AACF,GAbD;;AAcA,QAAMQ,MAAM,GAAG,MAAM;AACnBf,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAR,IAAAA,YAAY,CAACwB,UAAb,CAAwB,cAAxB;AACD,GAHD;;AAKA,SAAO,CAACjB,IAAD,EAAOC,OAAP,EAAgBQ,aAAhB,EAA+BC,KAA/B,EAAsCM,MAAtC,CAAP;AACD,CA7CM;;GAAMjB,Q","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst verifyToken = async () => {\n  const { token } = JSON.parse(localStorage.getItem(\"access_token\"));\n  const response = await axios.post(\"/api/jwt/verify\", { token });\n  return response.data.decode;\n};\n\nexport const useLogin = () => {\n  const [user, setUser] = useState();\n  const setUserInToken = async () => {\n    try {\n      if (\n        !localStorage.getItem(\"access_token\") ||\n        localStorage.getItem(\"access_token\") === \"undefined\"\n      ) {\n        localStorage.setItem(\"access_token\", \"undefined\");\n        throw new Error(\"access_token not exists.\");\n      }\n      console.log(\n        localStorage.getItem(\"access_token\"),\n        typeof localStorage.getItem(\"access_token\")\n      );\n      const { username } = await verifyToken();\n      setUser(username);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    setUserInToken();\n  }, []);\n  const authenticated = user != null;\n  const login = async ({ email, password }) => {\n    // setUser(signIn({ email, password }));\n    try {\n      const response = await axios.post(`/auth/login/notSocial`, {\n        email,\n        password,\n      });\n      const { access_token, username } = response.data;\n      localStorage.setItem(\"access_token\", JSON.stringify(access_token));\n      setUser(username);\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"access_token\");\n  };\n\n  return [user, setUser, authenticated, login, logout];\n};\n"]},"metadata":{},"sourceType":"module"}