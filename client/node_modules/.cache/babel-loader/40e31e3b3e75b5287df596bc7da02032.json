{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/todoList/elements/Todo.js\",\n    _s = $RefreshSig$();\n\nimport StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\"; // import es from \"da\"\n\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { TodoInput } from \"./TodoInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkElement = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"todo-icon__check\",\n  icon: faCheck,\n  size: \"1x\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n\nexport const Todo = ({\n  setTodo,\n  _isEditMode,\n  todoItem,\n  id\n}) => {\n  _s();\n\n  const todoHook = useTodo(setTodo, todoItem, _isEditMode, id); // const inputBtn = (\n  //   <div className=\"todo__btn-box todo__btn-box\">\n  //     <button\n  //       className=\"todo__btn todo__btn-add\"\n  //       onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n  //     >\n  //       {isSubmitMode ? \"+\" : \"Save\"}\n  //     </button>\n  //   </div>\n  // );\n  // const displayBtn = (\n  //   <div className=\"todo__btn-box todo__btn-box\">\n  //     <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n  //       E\n  //     </button>\n  //     <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n  //       X\n  //     </button>\n  //   </div>\n  // );\n  // const inputElement = (\n  //   <div className=\"todo\">\n  //     <input\n  //       id={`todo__checkbox_${id}`}\n  //       className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n  //       type=\"checkbox\"\n  //       name=\"todoCheck\"\n  //       defaultValue={todoItem?.isCheck}\n  //       onChange={({ target: { value } }) => onClickCheck(value)}\n  //     ></input>\n  //     <label className=\"todo__label\" for={`todo__checkbox_${id}`}>\n  //       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n  //     </label>\n  //     {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n  //     <input\n  //       className=\"todo__text todo-input__text todo__content todo-input__content\"\n  //       type=\"text\"\n  //       autocomplete=\"off\"\n  //       name=\"todoText\"\n  //       defaultValue={todoItem?.text}\n  //       onChange={({ target: { value } }) => onChangeText(value)}\n  //     ></input>\n  //     {/* <input\n  //       className=\"todo-input__date todo-input__content\"\n  //       type=\"date\"\n  //       name=\"todoDate\"\n  //       lang=\"en-us\"\n  //       required\n  //       pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n  //       defaultValue={isEditMode ? todoItem?.date : undefined}\n  //       min={getToday()}\n  //       onChange={({ target: { value } }) => onChangeDate(value)}\n  //     ></input> */}\n  //     <DatePick\n  //       isEditMode={isEditMode}\n  //       date={date}\n  //       onChangeDate={onChangeDate}\n  //     />\n  //     {/* <input\n  //       className=\"todo-input__priority todo-input__content\"\n  //       type=\"text\"\n  //       name=\"todoPriority\"\n  //       defaultValue={todoItem?.priority}\n  //       onChange={({ target: { value } }) => onChangePriority(value)}\n  //     ></input> */}\n  //     <div className={`todo__star-rating todo-input__star `}>\n  //       <StarRatings\n  //         // rating={todoItem?.priority}\n  //         starRatedColor=\"rgba(241, 196, 15,0.8)\"\n  //         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n  //         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n  //         starSelectingHoverColor=\"red\"\n  //         changeRating={onChangePriority}\n  //         numberOfStars={5}\n  //         name=\"rating\"\n  //         starDimension=\"12px\"\n  //         starSpacing=\"0px\"\n  //       />{\" \"}\n  //     </div>\n  //     {inputBtn}\n  //   </div>\n  // );\n  // const displayElement = (\n  //   <div className=\"todo\">\n  //     <input\n  //       id={`todo__checkbox_${id}`}\n  //       className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n  //       type=\"checkbox\"\n  //       name=\"todoCheck\"\n  //       defaultValue={todoItem?.isCheck}\n  //       onChange={({ target: { value } }) => onClickCheck(value)}\n  //     ></input>\n  //     <label className=\"todo__label\" for={`todo__checkbox_${id}`}>\n  //       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n  //     </label>\n  //     <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n  //       {todoItem?.text}\n  //     </span>\n  //     <DatePick date={date} isEditMode={isEditMode} />\n  //     <div className={`todo__star-rating todo-display__star}`}>\n  //       <StarRatings\n  //         starRatedColor=\"rgba(241, 196, 15,1.0)\"\n  //         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n  //         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n  //         starSelectingHoverColor=\"red\"\n  //         numberOfStars={5}\n  //         name=\"rating\"\n  //         starDimension=\"12px\"\n  //         starSpacing=\"0px\"\n  //       />{\" \"}\n  //     </div>\n  //     {displayBtn}\n  //   </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditMode ? /*#__PURE__*/_jsxDEV(TodoInput, {\n      setTodo: setTodo,\n      _isEditMode: true,\n      todoItem: todoItem,\n      id: idx + 1\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : displayElement\n  }, \"_\" + (todoItem === null || todoItem === void 0 ? void 0 : todoItem.id), false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"v48Rar5zPE6lqWK7EzYMrH/vDWM=\", false, function () {\n  return [useTodo];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/todoList/elements/Todo.js"],"names":["StarRatings","DatePicker","registerLocale","setDefaultLocale","useTodo","getToday","DatePick","useState","faCheck","FontAwesomeIcon","TodoInput","checkElement","Todo","setTodo","_isEditMode","todoItem","id","todoHook","isEditMode","idx","displayElement"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD,C,CACA;;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AACA,MAAMC,YAAY,gBAChB,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,kBAA3B;AAA8C,EAAA,IAAI,EAAEH,OAApD;AAA6D,EAAA,IAAI,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,QADF;;AAGA,OAAO,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAA4C;AAAA;;AAC9D,QAAMC,QAAQ,GAAGb,OAAO,CAACS,OAAD,EAAUE,QAAV,EAAoBD,WAApB,EAAiCE,EAAjC,CAAxsBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cACGE,UAAU,gBACT,QAAC,SAAD;AACE,MAAA,OAAO,EAAEL,OADX;AAEE,MAAA,WAAW,EAAE,IAFf;AAGE,MAAA,QAAQ,EAAEE,QAHZ;AAKE,MAAA,EAAE,EAAEI,GAAG,GAAG;AALZ,OAIOA,GAJP;AAAA;AAAA;AAAA;AAAA,YADS,GASTC;AAVJ,KAA0B,OAAML,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAEC,EAAhB,CAA1B;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArIM;;GAAMJ,I;UACMR,O;;;KADNQ,I","sourcesContent":["import StarRatings from \"react-star-ratings\";\nimport DatePicker from \"react-datepicker\";\n\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\n// import es from \"da\"\nimport { useTodo } from \"../../../hooks/todolist/useTodo\";\nimport { getToday } from \"../../../tools/time\";\nimport { DatePick } from \"./DatePick\";\nimport { useState } from \"react\";\n\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { TodoInput } from \"./TodoInput\";\nconst checkElement = (\n  <FontAwesomeIcon className=\"todo-icon__check\" icon={faCheck} size=\"1x\" />\n);\nexport const Todo = ({ setTodo, _isEditMode, todoItem, id }) => {\n  const todoHook = useTodo(setTodo, todoItem, _isEditMode, id);\n\n  // const inputBtn = (\n  //   <div className=\"todo__btn-box todo__btn-box\">\n  //     <button\n  //       className=\"todo__btn todo__btn-add\"\n  //       onClick={isSubmitMode ? onSubmitTodo : onEditTodo}\n  //     >\n  //       {isSubmitMode ? \"+\" : \"Save\"}\n  //     </button>\n  //   </div>\n  // );\n  // const displayBtn = (\n  //   <div className=\"todo__btn-box todo__btn-box\">\n  //     <button className=\"todo__btn todo__btn-edit\" onClick={onClickEditBtn}>\n  //       E\n  //     </button>\n  //     <button className=\"todo__btn todo__btn-delete\" onClick={onDeleteTodo}>\n  //       X\n  //     </button>\n  //   </div>\n  // );\n  // const inputElement = (\n  //   <div className=\"todo\">\n  //     <input\n  //       id={`todo__checkbox_${id}`}\n  //       className=\"todo__checkbox todo__checkbox todo__content todo-input__content\"\n  //       type=\"checkbox\"\n  //       name=\"todoCheck\"\n  //       defaultValue={todoItem?.isCheck}\n  //       onChange={({ target: { value } }) => onClickCheck(value)}\n  //     ></input>\n  //     <label className=\"todo__label\" for={`todo__checkbox_${id}`}>\n  //       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n  //     </label>\n  //     {/* <input type=\"checkbox\" name=\"TEST\"></input> */}\n  //     <input\n  //       className=\"todo__text todo-input__text todo__content todo-input__content\"\n  //       type=\"text\"\n  //       autocomplete=\"off\"\n  //       name=\"todoText\"\n  //       defaultValue={todoItem?.text}\n  //       onChange={({ target: { value } }) => onChangeText(value)}\n  //     ></input>\n  //     {/* <input\n  //       className=\"todo-input__date todo-input__content\"\n  //       type=\"date\"\n  //       name=\"todoDate\"\n  //       lang=\"en-us\"\n  //       required\n  //       pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n  //       defaultValue={isEditMode ? todoItem?.date : undefined}\n  //       min={getToday()}\n  //       onChange={({ target: { value } }) => onChangeDate(value)}\n  //     ></input> */}\n  //     <DatePick\n  //       isEditMode={isEditMode}\n  //       date={date}\n  //       onChangeDate={onChangeDate}\n  //     />\n  //     {/* <input\n  //       className=\"todo-input__priority todo-input__content\"\n  //       type=\"text\"\n  //       name=\"todoPriority\"\n  //       defaultValue={todoItem?.priority}\n  //       onChange={({ target: { value } }) => onChangePriority(value)}\n  //     ></input> */}\n  //     <div className={`todo__star-rating todo-input__star `}>\n  //       <StarRatings\n  //         // rating={todoItem?.priority}\n  //         starRatedColor=\"rgba(241, 196, 15,0.8)\"\n  //         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n  //         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n  //         starSelectingHoverColor=\"red\"\n  //         changeRating={onChangePriority}\n  //         numberOfStars={5}\n  //         name=\"rating\"\n  //         starDimension=\"12px\"\n  //         starSpacing=\"0px\"\n  //       />{\" \"}\n  //     </div>\n  //     {inputBtn}\n  //   </div>\n  // );\n\n  // const displayElement = (\n  //   <div className=\"todo\">\n  //     <input\n  //       id={`todo__checkbox_${id}`}\n  //       className=\"todo__checkbox todo__checkbox todo__content todo-display__content\"\n  //       type=\"checkbox\"\n  //       name=\"todoCheck\"\n  //       defaultValue={todoItem?.isCheck}\n  //       onChange={({ target: { value } }) => onClickCheck(value)}\n  //     ></input>\n  //     <label className=\"todo__label\" for={`todo__checkbox_${id}`}>\n  //       <span className=\"todo__label-icon\">{isCheck ? checkElement : \"\"}</span>\n  //     </label>\n  //     <span className=\"todo__text todo-display__text todo__content todo-display__content\">\n  //       {todoItem?.text}\n  //     </span>\n  //     <DatePick date={date} isEditMode={isEditMode} />\n  //     <div className={`todo__star-rating todo-display__star}`}>\n  //       <StarRatings\n  //         starRatedColor=\"rgba(241, 196, 15,1.0)\"\n  //         starEmptyColor=\"rgba(151, 151, 151, 0.707)\"\n  //         starHoverColor=\"rgba(241, 196, 15,0.9)\"\n  //         starSelectingHoverColor=\"red\"\n  //         numberOfStars={5}\n  //         name=\"rating\"\n  //         starDimension=\"12px\"\n  //         starSpacing=\"0px\"\n  //       />{\" \"}\n  //     </div>\n  //     {displayBtn}\n  //   </div>\n  // );\n  return (\n    <li className=\"todo\" key={\"_\" + todoItem?.id}>\n      {isEditMode ? (\n        <TodoInput\n          setTodo={setTodo}\n          _isEditMode={true}\n          todoItem={todoItem}\n          key={idx}\n          id={idx + 1}\n        />\n      ) : (\n        displayElement\n      )}\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}