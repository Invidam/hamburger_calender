{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport qs from \"qs\";\nimport { useEffect } from \"react\";\nexport const useAttemptGithubLogin = ({\n  history,\n  location,\n  customLoginHook\n}) => {\n  _s();\n\n  const login = customLoginHook[3];\n\n  const getToken = async () => {\n    const {\n      code\n    } = qs.parse(location === null || location === void 0 ? void 0 : location.search, {\n      ignoreQueryPrefix: true\n    });\n\n    try {\n      const userInfo = {\n        code\n      };\n      await login(userInfo, \"github\");\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      history.push(\"/login\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"ATT GITHUB LOGIN EFFECT\", location, history);\n    getToken();\n  }, [location, history]);\n};\n\n_s(useAttemptGithubLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/src/hooks/user/useAttemptGithubLogin.js"],"names":["qs","useEffect","useAttemptGithubLogin","history","location","customLoginHook","login","getToken","code","parse","search","ignoreQueryPrefix","userInfo","push","error","alert","console","log"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAAC;AACpCC,EAAAA,OADoC;AAEpCC,EAAAA,QAFoC;AAGpCC,EAAAA;AAHoC,CAAD,KAI/B;AAAA;;AACJ,QAAMC,KAAK,GAAGD,eAAe,CAAC,CAAD,CAA7B;;AACA,QAAME,QAAQ,GAAG,YAAY;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAWR,EAAE,CAACS,KAAH,CAASL,QAAT,aAASA,QAAT,uBAASA,QAAQ,CAAEM,MAAnB,EAA2B;AAC1CC,MAAAA,iBAAiB,EAAE;AADuB,KAA3B,CAAjB;;AAGA,QAAI;AACF,YAAMC,QAAQ,GAAG;AAAEJ,QAAAA;AAAF,OAAjB;AACA,YAAMF,KAAK,CAACM,QAAD,EAAW,QAAX,CAAX;AACAT,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACAX,MAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACD;AACF,GAZD;;AAaAZ,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCb,QAAvC,EAAiDD,OAAjD;AACAI,IAAAA,QAAQ;AACT,GAHQ,EAGN,CAACH,QAAD,EAAWD,OAAX,CAHM,CAAT;AAID,CAvBM;;GAAMD,qB","sourcesContent":["import qs from \"qs\";\nimport { useEffect } from \"react\";\nexport const useAttemptGithubLogin = ({\n  history,\n  location,\n  customLoginHook,\n}) => {\n  const login = customLoginHook[3];\n  const getToken = async () => {\n    const { code } = qs.parse(location?.search, {\n      ignoreQueryPrefix: true,\n    });\n    try {\n      const userInfo = { code };\n      await login(userInfo, \"github\");\n      history.push(\"/\");\n    } catch (error) {\n      alert(error);\n      history.push(\"/login\");\n    }\n  };\n  useEffect(() => {\n    console.log(\"ATT GITHUB LOGIN EFFECT\", location, history);\n    getToken();\n  }, [location, history]);\n};\n"]},"metadata":{},"sourceType":"module"}