{"ast":null,"code":"import _regeneratorRuntime from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";// import { API } from \"../../../tools/API\";\nexport var useEditWork=function useEditWork(workItem,setWork,callback){var id=workItem.id;var _useState=useState(workItem.workColor),_useState2=_slicedToArray(_useState,2),workColor=_useState2[0],setColor=_useState2[1];var _useState3=useState(workItem.workName),_useState4=_slicedToArray(_useState3,2),workName=_useState4[0],setWorkName=_useState4[1];var _useState5=useState(workItem.workTime),_useState6=_slicedToArray(_useState5,2),workTime=_useState6[0],setWorkTime=_useState6[1];var hexToRgba=function hexToRgba(color){var r=parseInt(color.substr(1,2),16);var g=parseInt(color.substr(3,2),16);var b=parseInt(color.substr(5,2),16);return\"rgba(\"+r+\",\"+g+\",\"+b+\", 1)\";};var onChangeWorkColor=function onChangeWorkColor(color){if(!color){}else if(color.substr(0,1)===\"#\"){color=hexToRgba(color);}setColor(color);};var onChangeWorkName=function onChangeWorkName(name){return setWorkName(name);};var onChangeWorkTime=function onChangeWorkTime(time){return setWorkTime(parseInt(time));};var validator=function validator(workItem){return workItem.workName&&workItem.workTime&&workItem.workColor;};var editWorkItem=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(workItem){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return setWork(workItem).edit();case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function editWorkItem(_x){return _ref.apply(this,arguments);};}();var getErrText=function getErrText(){var errText=\"[ERROR] \".concat(workName?\"\":\"WorkName\").concat(!workTime+!workColor>0&&!workName?\", \":\"\").concat(workTime?\"\":\"WorkTime\").concat(!workColor>0&&!workTime?\", \":\"\").concat(workColor?\"\":\"WorkColor\",\" \").concat(!workName+!workTime+!workColor>1?\"are\":\"is\",\" not entered.\");return errText;};var onEditWork=function onEditWork(event){try{event.preventDefault();var _workItem={workName:workName,workTime:workTime,workColor:workColor,id:id};var willUpdate=true;if(typeof validator===\"function\")willUpdate=validator(_workItem);if(willUpdate){callback();editWorkItem(_workItem);}else{throw new Error(getErrText());}}catch(error){alert(error);}};return{onChangeWorkColor:onChangeWorkColor,onChangeWorkName:onChangeWorkName,onChangeWorkTime:onChangeWorkTime,onEditWork:onEditWork};};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/work/useEditWork.js"],"names":["useState","useEditWork","workItem","setWork","callback","id","workColor","setColor","workName","setWorkName","workTime","setWorkTime","hexToRgba","color","r","parseInt","substr","g","b","onChangeWorkColor","onChangeWorkName","name","onChangeWorkTime","time","validator","editWorkItem","edit","getErrText","errText","onEditWork","event","preventDefault","willUpdate","Error","error","alert"],"mappings":"kcAAA,OAASA,QAAT,KAAyB,OAAzB,CACA;AAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAWC,OAAX,CAAoBC,QAApB,CAAiC,CAC1D,GAAQC,CAAAA,EAAR,CAAeH,QAAf,CAAQG,EAAR,CACA,cAA8BL,QAAQ,CAACE,QAAQ,CAACI,SAAV,CAAtC,wCAAOA,SAAP,eAAkBC,QAAlB,eACA,eAAgCP,QAAQ,CAACE,QAAQ,CAACM,QAAV,CAAxC,yCAAOA,QAAP,eAAiBC,WAAjB,eACA,eAAgCT,QAAQ,CAACE,QAAQ,CAACQ,QAAV,CAAxC,yCAAOA,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,CAAC,CAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAa,CAAb,CAAgB,CAAhB,CAAD,CAAqB,EAArB,CAAlB,CACA,GAAMC,CAAAA,CAAC,CAAGF,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAa,CAAb,CAAgB,CAAhB,CAAD,CAAqB,EAArB,CAAlB,CACA,GAAME,CAAAA,CAAC,CAAGH,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAa,CAAb,CAAgB,CAAhB,CAAD,CAAqB,EAArB,CAAlB,CACA,MAAO,QAAUF,CAAV,CAAc,GAAd,CAAoBG,CAApB,CAAwB,GAAxB,CAA8BC,CAA9B,CAAkC,MAAzC,CACD,CALD,CAMA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACN,KAAD,CAAW,CACnC,GAAI,CAACA,KAAL,CAAY,CACX,CADD,IACO,IAAIA,KAAK,CAACG,MAAN,CAAa,CAAb,CAAgB,CAAhB,IAAuB,GAA3B,CAAgC,CACrCH,KAAK,CAAGD,SAAS,CAACC,KAAD,CAAjB,CACD,CACDN,QAAQ,CAACM,KAAD,CAAR,CACD,CAND,CAOA,GAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,QAAUZ,CAAAA,WAAW,CAACY,IAAD,CAArB,EAAzB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,QAAUZ,CAAAA,WAAW,CAACI,QAAQ,CAACQ,IAAD,CAAT,CAArB,EAAzB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACtB,QAAD,CAAc,CAC9B,MAAOA,CAAAA,QAAQ,CAACM,QAAT,EAAqBN,QAAQ,CAACQ,QAA9B,EAA0CR,QAAQ,CAACI,SAA1D,CACD,CAFD,CAGA,GAAMmB,CAAAA,YAAY,0FAAG,iBAAOvB,QAAP,wIAA0BC,CAAAA,OAAO,CAACD,QAAD,CAAP,CAAkBwB,IAAlB,EAA1B,6GAAH,kBAAZD,CAAAA,YAAY,4CAAlB,CAEA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIC,CAAAA,OAAO,mBAAcpB,QAAQ,CAAG,EAAH,CAAQ,UAA9B,SACT,CAACE,QAAD,CAAY,CAACJ,SAAb,CAAyB,CAAzB,EAA8B,CAACE,QAA/B,CAA0C,IAA1C,CAAiD,EADxC,SAERE,QAAQ,CAAG,EAAH,CAAQ,UAFR,SAEqB,CAACJ,SAAD,CAAa,CAAb,EAAkB,CAACI,QAAnB,CAA8B,IAA9B,CAAqC,EAF1D,SAGTJ,SAAS,CAAG,EAAH,CAAQ,WAHR,aAIP,CAACE,QAAD,CAAY,CAACE,QAAb,CAAwB,CAACJ,SAAzB,CAAqC,CAArC,CAAyC,KAAzC,CAAiD,IAJ1C,iBAAX,CAKA,MAAOsB,CAAAA,OAAP,CACD,CAPD,CAQA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAI,CACFA,KAAK,CAACC,cAAN,GACA,GAAM7B,CAAAA,SAAQ,CAAG,CAAEM,QAAQ,CAARA,QAAF,CAAYE,QAAQ,CAARA,QAAZ,CAAsBJ,SAAS,CAATA,SAAtB,CAAiCD,EAAE,CAAFA,EAAjC,CAAjB,CACA,GAAI2B,CAAAA,UAAU,CAAG,IAAjB,CACA,GAAI,MAAOR,CAAAA,SAAP,GAAqB,UAAzB,CAAqCQ,UAAU,CAAGR,SAAS,CAACtB,SAAD,CAAtB,CACrC,GAAI8B,UAAJ,CAAgB,CACd5B,QAAQ,GACRqB,YAAY,CAACvB,SAAD,CAAZ,CACD,CAHD,IAGO,CACL,KAAM,IAAI+B,CAAAA,KAAJ,CAAUN,UAAU,EAApB,CAAN,CACD,CACF,CAAC,MAAOO,KAAP,CAAc,CACdC,KAAK,CAACD,KAAD,CAAL,CACD,CACF,CAfD,CAgBA,MAAO,CAAEf,iBAAiB,CAAjBA,iBAAF,CAAqBC,gBAAgB,CAAhBA,gBAArB,CAAuCE,gBAAgB,CAAhBA,gBAAvC,CAAyDO,UAAU,CAAVA,UAAzD,CAAP,CACD,CAnDM","sourcesContent":["import { useState } from \"react\";\n// import { API } from \"../../../tools/API\";\n\nexport const useEditWork = (workItem, setWork, callback) => {\n  const { id } = workItem;\n  const [workColor, setColor] = useState(workItem.workColor);\n  const [workName, setWorkName] = useState(workItem.workName);\n  const [workTime, setWorkTime] = useState(workItem.workTime);\n\n  const hexToRgba = (color) => {\n    const r = parseInt(color.substr(1, 2), 16);\n    const g = parseInt(color.substr(3, 2), 16);\n    const b = parseInt(color.substr(5, 2), 16);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \", 1)\";\n  };\n  const onChangeWorkColor = (color) => {\n    if (!color) {\n    } else if (color.substr(0, 1) === \"#\") {\n      color = hexToRgba(color);\n    }\n    setColor(color);\n  };\n  const onChangeWorkName = (name) => setWorkName(name);\n  const onChangeWorkTime = (time) => setWorkTime(parseInt(time));\n  const validator = (workItem) => {\n    return workItem.workName && workItem.workTime && workItem.workColor;\n  };\n  const editWorkItem = async (workItem) => await setWork(workItem).edit();\n\n  const getErrText = () => {\n    let errText = `[ERROR] ${workName ? \"\" : \"WorkName\"}${\n      !workTime + !workColor > 0 && !workName ? \", \" : \"\"\n    }${workTime ? \"\" : \"WorkTime\"}${!workColor > 0 && !workTime ? \", \" : \"\"}${\n      workColor ? \"\" : \"WorkColor\"\n    } ${!workName + !workTime + !workColor > 1 ? \"are\" : \"is\"} not entered.`;\n    return errText;\n  };\n  const onEditWork = (event) => {\n    try {\n      event.preventDefault();\n      const workItem = { workName, workTime, workColor, id };\n      let willUpdate = true;\n      if (typeof validator === \"function\") willUpdate = validator(workItem);\n      if (willUpdate) {\n        callback();\n        editWorkItem(workItem);\n      } else {\n        throw new Error(getErrText());\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return { onChangeWorkColor, onChangeWorkName, onChangeWorkTime, onEditWork };\n};\n"]},"metadata":{},"sourceType":"module"}