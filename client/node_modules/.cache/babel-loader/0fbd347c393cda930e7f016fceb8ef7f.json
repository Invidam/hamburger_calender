{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/window/IngredientList.js\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeList = new Map(); // const Tomato = styled.li`\n//   background-color: rgba(227, 26, 0, 1);\n// `;\n// const makeTomato = (text) => <Tomato> {text}</Tomato>;\n// map[\"tomato\"] = <Tomato> MAP</Tomato>;\n// const Cheese = styled.li`\n//   background-color: rgba(255, 166, 0, 1);\n// `;\n// map[\"cheeze\"] = <Cheese> Map</Cheese>;\n\nconst cheezeTheme = {\n  backgroundColor: \"rgba(50, 199, 4, 1)\"\n};\nconst meetTheme = {\n  backgroundColor: \"rgba(69, 1, 1, 1)\"\n};\nconst vegetableTheme = {\n  backgroundColor: \"rgba(255, 166, 0, 1)\"\n};\n\nconst add = () => {\n  console.log(\"1\");\n};\n\nconst tomatoTheme = {\n  backgroundColor: \"rgba(227, 26, 0, 1)\"\n};\nthemeList[\"tomato\"] = tomatoTheme;\nthemeList[\"cheeze\"] = cheezeTheme;\nthemeList[\"meet\"] = meetTheme;\nthemeList[\"vegetable\"] = vegetableTheme;\nexport const IngredientList = ({\n  ingredienName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: add,\n    style: tomatoTheme,\n    children: [\"test li\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n  return makeTomato(\"test text\");\n  return map[ingredienName];\n  console.log(\"ING: \", ingredienName);\n  if (ingredienName === \"tomato\") return /*#__PURE__*/_jsxDEV(Tomato, {\n    children: \"TEST\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 42\n  }, this);else return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \" NOT TOM\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 15\n  }, this); // return <{ingredienName} />\n  //   return map[ingredienName];\n}; //background-color: white;\n\n/*\n방법 생각해보기\n버튼 클릭 -> () => 색상 지정 (DB에도 저장) => 색상 표시\n\n에서, 버튼 클릭에 따라 어떻게 색상을 지정할 것인지 고민해보기.\n*/\n\n_c = IngredientList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientList\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/IngredientList.js"],"names":["styled","themeList","Map","cheezeTheme","backgroundColor","meetTheme","vegetableTheme","add","console","log","tomatoTheme","IngredientList","ingredienName","makeTomato","map"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,eAAe,EAAE;AADC,CAApB;AAGA,MAAMC,SAAS,GAAG;AAChBD,EAAAA,eAAe,EAAE;AADD,CAAlB;AAIA,MAAME,cAAc,GAAG;AACrBF,EAAAA,eAAe,EAAE;AADI,CAAvB;;AAGA,MAAMG,GAAG,GAAG,MAAM;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG;AAClBN,EAAAA,eAAe,EAAE;AADC,CAApB;AAGAH,SAAS,CAAC,QAAD,CAAT,GAAsBS,WAAtB;AACAT,SAAS,CAAC,QAAD,CAAT,GAAsBE,WAAtB;AACAF,SAAS,CAAC,MAAD,CAAT,GAAoBI,SAApB;AACAJ,SAAS,CAAC,WAAD,CAAT,GAAyBK,cAAzB;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACnD,sBACE;AAAI,IAAA,OAAO,EAAEL,GAAb;AAAkB,IAAA,KAAK,EAAEG,WAAzB;AAAA,0BACU,GADV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKA,SAAOG,UAAU,CAAC,WAAD,CAAjB;AACA,SAAOC,GAAG,CAACF,aAAD,CAAV;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,aAArB;AACA,MAAIA,aAAa,KAAK,QAAtB,EAAgC,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAAhC,KACK,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAV8C,CAWnD;AACA;AACD,CAbM,C,CAcP;;AAEA;AACA;AACA;AACA;AACA;AACA;;KArBaD,c","sourcesContent":["import styled from \"styled-components\";\n\nconst themeList = new Map();\n// const Tomato = styled.li`\n//   background-color: rgba(227, 26, 0, 1);\n// `;\n// const makeTomato = (text) => <Tomato> {text}</Tomato>;\n// map[\"tomato\"] = <Tomato> MAP</Tomato>;\n// const Cheese = styled.li`\n//   background-color: rgba(255, 166, 0, 1);\n// `;\n// map[\"cheeze\"] = <Cheese> Map</Cheese>;\nconst cheezeTheme = {\n  backgroundColor: \"rgba(50, 199, 4, 1)\",\n};\nconst meetTheme = {\n  backgroundColor: \"rgba(69, 1, 1, 1)\",\n};\n\nconst vegetableTheme = {\n  backgroundColor: \"rgba(255, 166, 0, 1)\",\n};\nconst add = () => {\n  console.log(\"1\");\n};\n\nconst tomatoTheme = {\n  backgroundColor: \"rgba(227, 26, 0, 1)\",\n};\nthemeList[\"tomato\"] = tomatoTheme;\nthemeList[\"cheeze\"] = cheezeTheme;\nthemeList[\"meet\"] = meetTheme;\nthemeList[\"vegetable\"] = vegetableTheme;\nexport const IngredientList = ({ ingredienName }) => {\n  return (\n    <li onClick={add} style={tomatoTheme}>\n      test li{\" \"}\n    </li>\n  );\n  return makeTomato(\"test text\");\n  return map[ingredienName];\n  console.log(\"ING: \", ingredienName);\n  if (ingredienName === \"tomato\") return <Tomato>TEST</Tomato>;\n  else return <li> NOT TOM</li>;\n  // return <{ingredienName} />\n  //   return map[ingredienName];\n};\n//background-color: white;\n\n/*\n방법 생각해보기\n버튼 클릭 -> () => 색상 지정 (DB에도 저장) => 색상 표시\n\n에서, 버튼 클릭에 따라 어떻게 색상을 지정할 것인지 고민해보기.\n*/\n"]},"metadata":{},"sourceType":"module"}