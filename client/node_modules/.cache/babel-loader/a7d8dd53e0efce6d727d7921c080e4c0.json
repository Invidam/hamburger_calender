{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const usePushWork = callback => {\n  _s();\n\n  const initVal = window.localStorage.getItem(\"workList\") ? JSON.parse(window.localStorage.getItem(\"workList\")) : [];\n  const [workList, setWorkList] = useState(initVal);\n\n  const validator = workObj => {\n    return workObj.workName && workObj.workTime && workObj.workColor;\n  };\n\n  let workColor;\n\n  const onSubmitColor = color => {\n    if (!color) {\n      console.log(\"NO\", color);\n    } else if (color[0] === \"#\") {\n      const r = parseInt(color.substr(1, 2), 16);\n      const g = parseInt(color.substr(3, 2), 16);\n      const b = parseInt(color.substr(5, 2), 16);\n      color = \"rgba(\" + r + \",\" + g + \",\" + b + \", 1)\";\n    }\n\n    workColor = color;\n  };\n\n  const onSubmitWork = event => {\n    var _event$target, _event$target$workCol, _event$target2, _event$target2$workCo;\n\n    event.preventDefault();\n    const workName = event.target.workName.value;\n    const workTime = parseInt(event.target.workTime.value);\n    workColor = ((_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$workCol = _event$target.workColor) === null || _event$target$workCol === void 0 ? void 0 : _event$target$workCol.value) ? (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : (_event$target2$workCo = _event$target2.workColor) === null || _event$target2$workCo === void 0 ? void 0 : _event$target2$workCo.value : workColor;\n    const workObj = {\n      workName,\n      workTime,\n      workColor\n    };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(workObj);\n\n    if (willUpdate) {\n      callback();\n      setWorkList(workList => [...workList, workObj]);\n    } else {\n      console.log(workObj);\n      console.log(\"NOT CHOOSED\");\n    }\n  };\n\n  return {\n    workList,\n    onSubmitColor,\n    onSubmitWork\n  };\n};\n\n_s(usePushWork, \"YVLqEpFLgtK5mvd/A4LvT7VuxxU=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/usePushWork.js"],"names":["useState","usePushWork","callback","initVal","window","localStorage","getItem","JSON","parse","workList","setWorkList","validator","workObj","workName","workTime","workColor","onSubmitColor","color","console","log","r","parseInt","substr","g","b","onSubmitWork","event","preventDefault","target","value","willUpdate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAAA;;AACvC,QAAMC,OAAO,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,IACZC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CADY,GAEZ,EAFJ;AAGA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACG,OAAD,CAAxC;;AACA,QAAMQ,SAAS,GAAIC,OAAD,IAAa;AAC7B,WAAOA,OAAO,CAACC,QAAR,IAAoBD,OAAO,CAACE,QAA5B,IAAwCF,OAAO,CAACG,SAAvD;AACD,GAFD;;AAGA,MAAIA,SAAJ;;AACA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAI,CAACA,KAAL,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,KAAlB;AACD,KAFD,MAEO,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAC3B,YAAMG,CAAC,GAAGC,QAAQ,CAACJ,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAlB;AACA,YAAMC,CAAC,GAAGF,QAAQ,CAACJ,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAlB;AACA,YAAME,CAAC,GAAGH,QAAQ,CAACJ,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,EAArB,CAAlB;AACAL,MAAAA,KAAK,GAAG,UAAUG,CAAV,GAAc,GAAd,GAAoBG,CAApB,GAAwB,GAAxB,GAA8BC,CAA9B,GAAkC,MAA1C;AACD;;AACDT,IAAAA,SAAS,GAAGE,KAAZ;AACD,GAVD;;AAWA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMd,QAAQ,GAAGa,KAAK,CAACE,MAAN,CAAaf,QAAb,CAAsBgB,KAAvC;AACA,UAAMf,QAAQ,GAAGO,QAAQ,CAACK,KAAK,CAACE,MAAN,CAAad,QAAb,CAAsBe,KAAvB,CAAzB;AACAd,IAAAA,SAAS,GAAG,kBAAAW,KAAK,CAACE,MAAN,yFAAcb,SAAd,gFAAyBc,KAAzB,sBACRH,KAAK,CAACE,MADE,4EACR,eAAcb,SADN,0DACR,sBAAyBc,KADjB,GAERd,SAFJ;AAGA,UAAMH,OAAO,GAAG;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAAhB;AACA,QAAIe,UAAU,GAAG,IAAjB;AACA,QAAI,OAAOnB,SAAP,KAAqB,UAAzB,EAAqCmB,UAAU,GAAGnB,SAAS,CAACC,OAAD,CAAtB;;AACrC,QAAIkB,UAAJ,EAAgB;AACd5B,MAAAA,QAAQ;AACRQ,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcG,OAAd,CAAf,CAAX;AACD,KAHD,MAGO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,GAjBD;;AAkBA,SAAO;AAAEV,IAAAA,QAAF;AAAYO,IAAAA,aAAZ;AAA2BS,IAAAA;AAA3B,GAAP;AACD,CAvCM;;GAAMxB,W","sourcesContent":["import { useState } from \"react\";\n\nexport const usePushWork = (callback) => {\n  const initVal = window.localStorage.getItem(\"workList\")\n    ? JSON.parse(window.localStorage.getItem(\"workList\"))\n    : [];\n  const [workList, setWorkList] = useState(initVal);\n  const validator = (workObj) => {\n    return workObj.workName && workObj.workTime && workObj.workColor;\n  };\n  let workColor;\n  const onSubmitColor = (color) => {\n    if (!color) {\n      console.log(\"NO\", color);\n    } else if (color[0] === \"#\") {\n      const r = parseInt(color.substr(1, 2), 16);\n      const g = parseInt(color.substr(3, 2), 16);\n      const b = parseInt(color.substr(5, 2), 16);\n      color = \"rgba(\" + r + \",\" + g + \",\" + b + \", 1)\";\n    }\n    workColor = color;\n  };\n  const onSubmitWork = (event) => {\n    event.preventDefault();\n    const workName = event.target.workName.value;\n    const workTime = parseInt(event.target.workTime.value);\n    workColor = event.target?.workColor?.value\n      ? event.target?.workColor?.value\n      : workColor;\n    const workObj = { workName, workTime, workColor };\n    let willUpdate = true;\n    if (typeof validator === \"function\") willUpdate = validator(workObj);\n    if (willUpdate) {\n      callback();\n      setWorkList((workList) => [...workList, workObj]);\n    } else {\n      console.log(workObj);\n      console.log(\"NOT CHOOSED\");\n    }\n  };\n  return { workList, onSubmitColor, onSubmitWork };\n};\n"]},"metadata":{},"sourceType":"module"}