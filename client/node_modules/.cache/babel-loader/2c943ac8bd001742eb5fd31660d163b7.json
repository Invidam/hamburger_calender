{"ast":null,"code":"import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import\"../../../../../css/workList/ingredientList.css\";import{useTabs}from\"../../../../../hooks/example/useTabs\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var themeList=new Map();var cheezeTheme={backgroundColor:\"rgba(255, 166, 0, 1)\"};var meetTheme={backgroundColor:\"rgba(69, 1, 1, 1)\"};var vegetableTheme={backgroundColor:\"rgba(50, 199, 4, 1)\"};var tomatoTheme={backgroundColor:\"rgba(227, 26, 0, 1)\"};themeList.set(\"tomato\",tomatoTheme);themeList.set(\"cheeze\",cheezeTheme);themeList.set(\"meet\",meetTheme);themeList.set(\"vegetable\",vegetableTheme);export var IngredientList=function IngredientList(_ref){var onChangeWorkColor=_ref.onChangeWorkColor;var themeArray=_toConsumableArray(themeList);var isFirst=true;var _useTabs=useTabs(0,themeArray),_useTabs2=_slicedToArray(_useTabs,3),currentIdx=_useTabs2[1],setCurrentIndex=_useTabs2[2];var _onClick=function onClick(event,style,idx){isFirst=false;event.preventDefault();setCurrentIndex(idx);onChangeWorkColor(style.backgroundColor);// event.target.workColor.value = style.backgroundColor;\n};return/*#__PURE__*/_jsx(\"div\",{className:\"ingredient__list\",children:_toConsumableArray(themeList).map(function(_ref2,idx){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];return/*#__PURE__*/_jsxs(\"button\",{className:idx===currentIdx&&!isFirst?\"ingredient__item ingredient__item-focus\":\"ingredient__item\",onClick:function onClick(event){return _onClick(event,value,idx);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"ingredient__color\",style:value}),/*#__PURE__*/_jsx(\"span\",{className:\"ingredient__title\",children:key})]},idx);})});};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/window/work/tabs/IngredientList.js"],"names":["useTabs","themeList","Map","cheezeTheme","backgroundColor","meetTheme","vegetableTheme","tomatoTheme","set","IngredientList","onChangeWorkColor","themeArray","isFirst","currentIdx","setCurrentIndex","onClick","event","style","idx","preventDefault","map","key","value"],"mappings":"sTAAA,MAAO,gDAAP,CACA,OAASA,OAAT,KAAwB,sCAAxB,C,wFACA,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,GAAJ,EAAlB,CACA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,eAAe,CAAE,sBADC,CAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,CAChBD,eAAe,CAAE,mBADD,CAAlB,CAIA,GAAME,CAAAA,cAAc,CAAG,CACrBF,eAAe,CAAE,qBADI,CAAvB,CAIA,GAAMG,CAAAA,WAAW,CAAG,CAClBH,eAAe,CAAE,qBADC,CAApB,CAGAH,SAAS,CAACO,GAAV,CAAc,QAAd,CAAwBD,WAAxB,EACAN,SAAS,CAACO,GAAV,CAAc,QAAd,CAAwBL,WAAxB,EACAF,SAAS,CAACO,GAAV,CAAc,MAAd,CAAsBH,SAAtB,EACAJ,SAAS,CAACO,GAAV,CAAc,WAAd,CAA2BF,cAA3B,EAEA,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA2B,IAAxBC,CAAAA,iBAAwB,MAAxBA,iBAAwB,CACvD,GAAMC,CAAAA,UAAU,oBAAOV,SAAP,CAAhB,CACA,GAAIW,CAAAA,OAAO,CAAG,IAAd,CACA,aAAwCZ,OAAO,CAAC,CAAD,CAAIW,UAAJ,CAA/C,sCAASE,UAAT,cAAqBC,eAArB,cACA,GAAMC,CAAAA,QAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,KAAR,CAAeC,GAAf,CAAuB,CACrCN,OAAO,CAAG,KAAV,CACAI,KAAK,CAACG,cAAN,GACAL,eAAe,CAACI,GAAD,CAAf,CACAR,iBAAiB,CAACO,KAAK,CAACb,eAAP,CAAjB,CACA;AACD,CAND,CAOA,mBACE,YAAK,SAAS,CAAC,kBAAf,UACG,mBAAIH,SAAJ,EAAemB,GAAf,CAAmB,eAAeF,GAAf,CAAuB,mCAArBG,GAAqB,UAAhBC,KAAgB,UACzC,mBACE,gBACE,SAAS,CACPJ,GAAG,GAAKL,UAAR,EAAsB,CAACD,OAAvB,CACI,yCADJ,CAEI,kBAJR,CAME,OAAO,CAAE,iBAACI,KAAD,QAAWD,CAAAA,QAAO,CAACC,KAAD,CAAQM,KAAR,CAAeJ,GAAf,CAAlB,EANX,wBASE,YAAK,SAAS,CAAC,mBAAf,CAAmC,KAAK,CAAEI,KAA1C,EATF,cAUE,aAAM,SAAS,CAAC,mBAAhB,UAAqCD,GAArC,EAVF,GAOOH,GAPP,CADF,CAcD,CAfA,CADH,EADF,CAoBD,CA/BM","sourcesContent":["import \"../../../../../css/workList/ingredientList.css\";\nimport { useTabs } from \"../../../../../hooks/example/useTabs\";\nconst themeList = new Map();\nconst cheezeTheme = {\n  backgroundColor: \"rgba(255, 166, 0, 1)\",\n};\nconst meetTheme = {\n  backgroundColor: \"rgba(69, 1, 1, 1)\",\n};\n\nconst vegetableTheme = {\n  backgroundColor: \"rgba(50, 199, 4, 1)\",\n};\n\nconst tomatoTheme = {\n  backgroundColor: \"rgba(227, 26, 0, 1)\",\n};\nthemeList.set(\"tomato\", tomatoTheme);\nthemeList.set(\"cheeze\", cheezeTheme);\nthemeList.set(\"meet\", meetTheme);\nthemeList.set(\"vegetable\", vegetableTheme);\n\nexport const IngredientList = ({ onChangeWorkColor }) => {\n  const themeArray = [...themeList];\n  let isFirst = true;\n  const [, currentIdx, setCurrentIndex] = useTabs(0, themeArray);\n  const onClick = (event, style, idx) => {\n    isFirst = false;\n    event.preventDefault();\n    setCurrentIndex(idx);\n    onChangeWorkColor(style.backgroundColor);\n    // event.target.workColor.value = style.backgroundColor;\n  };\n  return (\n    <div className=\"ingredient__list\">\n      {[...themeList].map(([key, value], idx) => {\n        return (\n          <button\n            className={\n              idx === currentIdx && !isFirst\n                ? \"ingredient__item ingredient__item-focus\"\n                : \"ingredient__item\"\n            }\n            onClick={(event) => onClick(event, value, idx)}\n            key={idx}\n          >\n            <div className=\"ingredient__color\" style={value}></div>\n            <span className=\"ingredient__title\">{key}</span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}