{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { getToday } from \"../../../tools/time\";\nexport const useUpdateTime = (key, user, date) => {\n  _s();\n\n  const initVal = !user && window.localStorage.getItem(key) ? JSON.parse(window.localStorage.getItem(key)) : null;\n  const [recordTime, setRecordTime] = useState(); // setRecordTime(initVal);\n\n  useEffect(() => {// setRecordTime(initVal);\n  }, [date]);\n\n  const axiosSync = async () => {\n    console.log(\"AXIOS START\");\n    const data = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\"\n      },\n      url: `/api/${user}/${date}/worklist/record-time/${key}`,\n      method: \"get\"\n    });\n\n    if ((data === null || data === void 0 ? void 0 : data.data) && (data === null || data === void 0 ? void 0 : data.data.hour) !== -1) {\n      setRecordTime(data === null || data === void 0 ? void 0 : data.data);\n      window.localStorage.setItem(key, JSON.stringify(data === null || data === void 0 ? void 0 : data.data));\n    }\n  };\n\n  if (!recordTime || recordTime.hour === -1) axiosSync();\n\n  const updateRecordTime = timeObj => {\n    if (!timeObj) timeObj = {\n      hour: -1,\n      minute: -1\n    };\n    axios.post(`/api/${user}/${date}/worklist/record-time/${key}`, {\n      value: timeObj\n    });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n\n  const onClick = event => {\n    event.preventDefault();\n    const [hour, minute] = new Date().toTimeString().split(\":\").slice(0, 2).map(numChar => parseInt(numChar));\n    const timeObj = {\n      hour,\n      minute\n    };\n    updateRecordTime(timeObj);\n  };\n\n  return [recordTime, onClick, updateRecordTime];\n};\n\n_s(useUpdateTime, \"sN7BXTS0FFJUSwRzwyWLh97t3u0=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/workList/time/useUpdateTime.js"],"names":["axios","useState","useEffect","getToday","useUpdateTime","key","user","date","initVal","window","localStorage","getItem","JSON","parse","recordTime","setRecordTime","axiosSync","console","log","data","headers","Authorization","url","method","hour","setItem","stringify","updateRecordTime","timeObj","minute","post","value","onClick","event","preventDefault","Date","toTimeString","split","slice","map","numChar","parseInt"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { getToday } from \"../../../tools/time\";\n\nexport const useUpdateTime = (key, user, date) => {\n  const initVal =\n    !user && window.localStorage.getItem(key)\n      ? JSON.parse(window.localStorage.getItem(key))\n      : null;\n  const [recordTime, setRecordTime] = useState();\n  // setRecordTime(initVal);\n  useEffect(() => {\n    // setRecordTime(initVal);\n  }, [date]);\n  const axiosSync = async () => {\n    console.log(\"AXIOS START\");\n    const data = await axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\",\n      },\n      url: `/api/${user}/${date}/worklist/record-time/${key}`,\n      method: \"get\",\n    });\n    if (data?.data && data?.data.hour !== -1) {\n      setRecordTime(data?.data);\n      window.localStorage.setItem(key, JSON.stringify(data?.data));\n    }\n  };\n  if (!recordTime || recordTime.hour === -1) axiosSync();\n\n  const updateRecordTime = (timeObj) => {\n    if (!timeObj) timeObj = { hour: -1, minute: -1 };\n\n    axios.post(`/api/${user}/${date}/worklist/record-time/${key}`, {\n      value: timeObj,\n    });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n  const onClick = (event) => {\n    event.preventDefault();\n    const [hour, minute] = new Date()\n      .toTimeString()\n      .split(\":\")\n      .slice(0, 2)\n      .map((numChar) => parseInt(numChar));\n    const timeObj = { hour, minute };\n    updateRecordTime(timeObj);\n  };\n  return [recordTime, onClick, updateRecordTime];\n};\n"]},"metadata":{},"sourceType":"module"}