{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/workListComponent.js\",\n    _s = $RefreshSig$();\n\nimport { usePushWork } from \"../../hooks/usePushWork\";\nimport { useRecordTime } from \"../../hooks/useRecoreTime\";\nimport { AddTimeWindow, AddWorkWindow } from \"./window/AddWindow\";\nimport { WorkList } from \"./WorkList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorkListComponent = () => {\n  _s();\n\n  const [wakeTime, onClickWakeTime] = useRecordTime(\"wakeTime\");\n\n  const addWakeTimeWindow = /*#__PURE__*/_jsxDEV(AddTimeWindow, {\n    onClick: onClickWakeTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 29\n  }, this);\n\n  const [bedTime, onClickBedTime] = useRecordTime(\"bedTime\");\n\n  const addBedTimeWindow = /*#__PURE__*/_jsxDEV(AddTimeWindow, {\n    onClick: onClickBedTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 28\n  }, this);\n\n  const validatorFun = workObj => {\n    return workObj.workName && workObj.workTime;\n  };\n\n  const {\n    workList,\n    onSubmitWork\n  } = usePushWork(validatorFun);\n\n  const addWorkWindow = /*#__PURE__*/_jsxDEV(AddWorkWindow, {\n    workList: workList,\n    onSubmitWork: onSubmitWork\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this); //   const workList = JSON.parse(localStorage.getItem(\"workList\"));\n\n\n  console.log(\"In worklist, list: \", workList); //   const wakeTimeObj = JSON.parse(localStorage.getItem(\"wakeTime\"));\n  //   const bedTimeObj = JSON.parse(localStorage.getItem(\"bedTime\"));\n\n  const workListDisplay = /*#__PURE__*/_jsxDEV(WorkList, {\n    wakeTime: wakeTime,\n    bedTime: bedTime,\n    workList: workList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n    addWakeTimeWindow: addWakeTimeWindow,\n    addWorkWindow: addWorkWindow,\n    workList: workListDisplay,\n    addBedTimeWindow: addBedTimeWindow\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkListComponent, \"ZagwN0/3KR+M0Ft/JnyWBUCF164=\", false, function () {\n  return [useRecordTime, useRecordTime, usePushWork];\n});\n\n_c = WorkListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListComponent\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/workListComponent.js"],"names":["usePushWork","useRecordTime","AddTimeWindow","AddWorkWindow","WorkList","WorkListComponent","wakeTime","onClickWakeTime","addWakeTimeWindow","bedTime","onClickBedTime","addBedTimeWindow","validatorFun","workObj","workName","workTime","workList","onSubmitWork","addWorkWindow","console","log","workListDisplay"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,oBAA7C;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,eAAX,IAA8BN,aAAa,CAAC,UAAD,CAAjD;;AACA,QAAMO,iBAAiB,gBAAG,QAAC,aAAD;AAAe,IAAA,OAAO,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,UAA1B;;AACA,QAAM,CAACE,OAAD,EAAUC,cAAV,IAA4BT,aAAa,CAAC,SAAD,CAA/C;;AACA,QAAMU,gBAAgB,gBAAG,QAAC,aAAD;AAAe,IAAA,OAAO,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAzB;;AACA,QAAME,YAAY,GAAIC,OAAD,IAAa;AAChC,WAAOA,OAAO,CAACC,QAAR,IAAoBD,OAAO,CAACE,QAAnC;AACD,GAFD;;AAIA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BjB,WAAW,CAACY,YAAD,CAA9C;;AACA,QAAMM,aAAa,gBACjB,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEF,QAAzB;AAAmC,IAAA,YAAY,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,UADF,CAVqC,CAcrC;;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCJ,QAAnC,EAfqC,CAgBrC;AACA;;AACA,QAAMK,eAAe,gBACnB,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEf,QAApB;AAA8B,IAAA,OAAO,EAAEG,OAAvC;AAAgD,IAAA,QAAQ,EAAEO;AAA1D;AAAA;AAAA;AAAA;AAAA,UADF;;AAGA,sBACE,QAAC,gBAAD;AACE,IAAA,iBAAiB,EAAER,iBADrB;AAEE,IAAA,aAAa,EAAEU,aAFjB;AAGE,IAAA,QAAQ,EAAEG,eAHZ;AAIE,IAAA,gBAAgB,EAAEV;AAJpB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7BM;;GAAMN,iB;UACyBJ,a,EAEFA,a,EAMCD,W;;;KATxBK,iB","sourcesContent":["import { usePushWork } from \"../../hooks/usePushWork\";\nimport { useRecordTime } from \"../../hooks/useRecoreTime\";\nimport { AddTimeWindow, AddWorkWindow } from \"./window/AddWindow\";\nimport { WorkList } from \"./WorkList\";\n\nexport const WorkListComponent = () => {\n  const [wakeTime, onClickWakeTime] = useRecordTime(\"wakeTime\");\n  const addWakeTimeWindow = <AddTimeWindow onClick={onClickWakeTime} />;\n  const [bedTime, onClickBedTime] = useRecordTime(\"bedTime\");\n  const addBedTimeWindow = <AddTimeWindow onClick={onClickBedTime} />;\n  const validatorFun = (workObj) => {\n    return workObj.workName && workObj.workTime;\n  };\n\n  const { workList, onSubmitWork } = usePushWork(validatorFun);\n  const addWorkWindow = (\n    <AddWorkWindow workList={workList} onSubmitWork={onSubmitWork} />\n  );\n\n  //   const workList = JSON.parse(localStorage.getItem(\"workList\"));\n  console.log(\"In worklist, list: \", workList);\n  //   const wakeTimeObj = JSON.parse(localStorage.getItem(\"wakeTime\"));\n  //   const bedTimeObj = JSON.parse(localStorage.getItem(\"bedTime\"));\n  const workListDisplay = (\n    <WorkList wakeTime={wakeTime} bedTime={bedTime} workList={workList} />\n  );\n  return (\n    <WorkListTemplate\n      addWakeTimeWindow={addWakeTimeWindow}\n      addWorkWindow={addWorkWindow}\n      workList={workListDisplay}\n      addBedTimeWindow={addBedTimeWindow}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}