{"ast":null,"code":"import _slicedToArray from\"/home/invidam/hamburger_calender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"../../css/workList/workList.css\";import\"../../css/workList/tooltip.css\";import{TimeRecordDisplay}from\"./element/timeBtn/TimeDisplayBtn\";import{TimeRecordBtn}from\"./element/timeBtn/TimeRecordBtn\";import{EmptyWork}from\"./element/work/EmptyWork\";import{Work}from\"./element/work/Work\";import{isEmptyTimeObj,useRecordTime}from\"../../hooks/workList/time/useRecordTime\";import{isEmptyWork,useWorkList}from\"../../hooks/workList/work/useWorkList\";import{LoadingElement}from\"../Loading\";import{WorkListGrade}from\"./element/grade/WorkListGrade\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var WorkList=function WorkList(_ref){var _Object$values;var user=_ref.user,date=_ref.date,targetSetting=_ref.targetSetting,workListHook=_ref.workListHook;var targetWakeTime=targetSetting.targetWakeTime,targetBedTime=targetSetting.targetBedTime,targetWorkTime=targetSetting.targetWorkTime;var _useRecordTime=useRecordTime(\"wakeTime\",user,date),_useRecordTime2=_slicedToArray(_useRecordTime,4),wakeTime=_useRecordTime2[0],onClickWakeTime=_useRecordTime2[1],setWakeTime=_useRecordTime2[2],isWakeTimeLoading=_useRecordTime2[3];var _useRecordTime3=useRecordTime(\"bedTime\",user,date),_useRecordTime4=_slicedToArray(_useRecordTime3,4),bedTime=_useRecordTime4[0],onClickBedTime=_useRecordTime4[1],setBedTime=_useRecordTime4[2],isBedTimeLoading=_useRecordTime4[3];var _useWorkList=useWorkList(user,date),_useWorkList2=_slicedToArray(_useWorkList,4),workList=_useWorkList2[0],setWork=_useWorkList2[1],isWorkListLoading=_useWorkList2[2],workTimeSum=_useWorkList2[3];var isLoading=function isLoading(){return isWakeTimeLoading||isBedTimeLoading||isWorkListLoading;};var addWakeTimeWindow=/*#__PURE__*/_jsx(TimeRecordBtn,{onClick:onClickWakeTime,isWake:true});var addBedTimeWindow=/*#__PURE__*/_jsx(TimeRecordBtn,{onClick:onClickBedTime,isWake:false});var wakeTimeDisplay=/*#__PURE__*/_jsx(TimeRecordDisplay,{recordTime:wakeTime,isWake:true,setTime:setWakeTime,targetTime:targetWakeTime});var bedTimeDisplay=/*#__PURE__*/_jsx(TimeRecordDisplay,{recordTime:bedTime,isWake:false,setTime:setBedTime,targetTime:targetBedTime});console.log(\"[WORKLIST]\",workList);var wakeTimeElement=isEmptyTimeObj(wakeTime)?addWakeTimeWindow:wakeTimeDisplay;var bedTimeElemnt=isEmptyTimeObj(bedTime)?addBedTimeWindow:bedTimeDisplay;var workListElement=workList&&Object.values(workList).map(function(workItem,idx){return isEmptyWork(workItem)?undefined:/*#__PURE__*/_jsx(Work,{workItem:workItem,setWork:setWork,targetTime:targetWorkTime,workTimeSum:workTimeSum},idx);});var emptyWork=!workList||((_Object$values=Object.values(workList))===null||_Object$values===void 0?void 0:_Object$values.length)<5?/*#__PURE__*/_jsx(EmptyWork,{setWork:setWork}):\"\";return isLoading()?/*#__PURE__*/_jsx(LoadingElement,{text:\"WorkList Loading. . .\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"workList-content\",children:[/*#__PURE__*/_jsxs(\"ol\",{children:[wakeTimeElement,workListElement,emptyWork,bedTimeElemnt]}),/*#__PURE__*/_jsx(WorkListGrade,{user:user,date:date})]});// </div>\n};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/WorkList.js"],"names":["TimeRecordDisplay","TimeRecordBtn","EmptyWork","Work","isEmptyTimeObj","useRecordTime","isEmptyWork","useWorkList","LoadingElement","WorkListGrade","WorkList","user","date","targetSetting","workListHook","targetWakeTime","targetBedTime","targetWorkTime","wakeTime","onClickWakeTime","setWakeTime","isWakeTimeLoading","bedTime","onClickBedTime","setBedTime","isBedTimeLoading","workList","setWork","isWorkListLoading","workTimeSum","isLoading","addWakeTimeWindow","addBedTimeWindow","wakeTimeDisplay","bedTimeDisplay","console","log","wakeTimeElement","bedTimeElemnt","workListElement","Object","values","map","workItem","idx","undefined","emptyWork","length"],"mappings":"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","sourcesContent":["import \"../../css/workList/workList.css\";\nimport \"../../css/workList/tooltip.css\";\nimport { TimeRecordDisplay } from \"./element/timeBtn/TimeDisplayBtn\";\nimport { TimeRecordBtn } from \"./element/timeBtn/TimeRecordBtn\";\nimport { EmptyWork } from \"./element/work/EmptyWork\";\nimport { Work } from \"./element/work/Work\";\nimport {\n  isEmptyTimeObj,\n  useRecordTime,\n} from \"../../hooks/workList/time/useRecordTime\";\nimport {\n  isEmptyWork,\n  useWorkList,\n} from \"../../hooks/workList/work/useWorkList\";\nimport { LoadingElement } from \"../Loading\";\nimport { WorkListGrade } from \"./element/grade/WorkListGrade\";\nexport const WorkList = ({ user, date, targetSetting, workListHook }) => {\n  const { targetWakeTime, targetBedTime, targetWorkTime } = targetSetting;\n  const [wakeTime, onClickWakeTime, setWakeTime, isWakeTimeLoading] =\n    useRecordTime(\"wakeTime\", user, date);\n  const [bedTime, onClickBedTime, setBedTime, isBedTimeLoading] = useRecordTime(\n    \"bedTime\",\n    user,\n    date\n  );\n  const [workList, setWork, isWorkListLoading, workTimeSum] = useWorkList(\n    user,\n    date\n  );\n\n  const isLoading = () =>\n    isWakeTimeLoading || isBedTimeLoading || isWorkListLoading;\n\n  const addWakeTimeWindow = (\n    <TimeRecordBtn onClick={onClickWakeTime} isWake={true} />\n  );\n  const addBedTimeWindow = (\n    <TimeRecordBtn onClick={onClickBedTime} isWake={false} />\n  );\n  const wakeTimeDisplay = (\n    <TimeRecordDisplay\n      recordTime={wakeTime}\n      isWake={true}\n      setTime={setWakeTime}\n      targetTime={targetWakeTime}\n    />\n  );\n  const bedTimeDisplay = (\n    <TimeRecordDisplay\n      recordTime={bedTime}\n      isWake={false}\n      setTime={setBedTime}\n      targetTime={targetBedTime}\n    />\n  );\n  console.log(\"[WORKLIST]\", workList);\n  const wakeTimeElement = isEmptyTimeObj(wakeTime)\n    ? addWakeTimeWindow\n    : wakeTimeDisplay;\n  const bedTimeElemnt = isEmptyTimeObj(bedTime)\n    ? addBedTimeWindow\n    : bedTimeDisplay;\n  const workListElement =\n    workList &&\n    Object.values(workList).map((workItem, idx) => {\n      return isEmptyWork(workItem) ? undefined : (\n        <Work\n          workItem={workItem}\n          setWork={setWork}\n          key={idx}\n          targetTime={targetWorkTime}\n          workTimeSum={workTimeSum}\n        />\n      );\n    });\n  const emptyWork =\n    !workList || Object.values(workList)?.length < 5 ? (\n      <EmptyWork setWork={setWork} />\n    ) : (\n      \"\"\n    );\n\n  return isLoading() ? (\n    <LoadingElement text={\"WorkList Loading. . .\"} />\n  ) : (\n    <div className=\"workList-content\">\n      <ol>\n        {wakeTimeElement}\n        {workListElement}\n        {emptyWork}\n        {bedTimeElemnt}\n      </ol>\n      <WorkListGrade user={user} date={date} />\n    </div>\n  );\n  // </div>\n};\n"]},"metadata":{},"sourceType":"module"}