{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { getAddedDateObj, getAddedDateStr } from \"../../tools/time\";\nconst STARTDATEDIFF = 2;\n\nconst getStartDate = date => LocalStroage.startDate().isEmpty() ? getAddedDateStr(date, -1 * STARTDATEDIFF) : LocalStroage.startDate().get();\n\nexport const useListView = (user, date, setDate, workList) => {\n  _s();\n\n  const [startDate, setStratDate] = useState(getStartDate(date));\n\n  const getEndDate = startDate => getAddedDateObj(startDate, STARTDATEDIFF * 2);\n\n  const [listView, setListView] = useState();\n  const [isListViewLoading, setLoad] = useState();\n\n  const onClickLeftBtn = () => {\n    const nextDate = getAddedDateStr(startDate, -1);\n    LocalStroage.startDate().set(nextDate);\n    setStratDate(nextDate);\n  };\n\n  const onClickRightBtn = () => {\n    const nextDate = getAddedDateStr(startDate, 1);\n    LocalStroage.startDate().set(nextDate);\n    setStratDate(nextDate);\n  };\n\n  useEffect(() => {\n    setStratDate(getStartDate(date));\n  }, [date]);\n\n  const getListView = async () => {\n    try {\n      if (user && startDate) {\n        setLoad(true);\n        const data = await APIv2.listView(user, startDate).get(STARTDATEDIFF);\n        setLoad(false);\n        if (!(data === null || data === void 0 ? void 0 : data.data)) throw new Error(\"List View cann't found\");\n        console.log(\"DATA : LISTVIEW \", data === null || data === void 0 ? void 0 : data.data);\n        setListView(data === null || data === void 0 ? void 0 : data.data);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    //setListView를 좀 더 스마트하게 바꾸어야 한다.\n    console.log(\"Set list view start L or R\");\n  }, [startDate]);\n  useEffect(() => {\n    //setListView를 좀 더 스마트하게 바꾸어야 한다.\n    console.log(\"Set list view start\");\n    getListView();\n  }, [startDate]);\n  return {\n    isListViewLoading,\n    startDate,\n    listView,\n    onClickLeftBtn,\n    onClickRightBtn\n  };\n};\n\n_s(useListView, \"oyofhKgQWrPM2OCPmitO17XKVBk=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/listView/useListView.js"],"names":["useEffect","useState","APIv2","LocalStroage","getAddedDateObj","getAddedDateStr","STARTDATEDIFF","getStartDate","date","startDate","isEmpty","get","useListView","user","setDate","workList","setStratDate","getEndDate","listView","setListView","isListViewLoading","setLoad","onClickLeftBtn","nextDate","set","onClickRightBtn","getListView","data","Error","console","log","error","alert"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nimport { getAddedDateObj, getAddedDateStr } from \"../../tools/time\";\nconst STARTDATEDIFF = 2;\n\nconst getStartDate = (date) =>\n  LocalStroage.startDate().isEmpty()\n    ? getAddedDateStr(date, -1 * STARTDATEDIFF)\n    : LocalStroage.startDate().get();\nexport const useListView = (user, date, setDate, workList) => {\n  const [startDate, setStratDate] = useState(getStartDate(date));\n  const getEndDate = (startDate) =>\n    getAddedDateObj(startDate, STARTDATEDIFF * 2);\n  const [listView, setListView] = useState();\n  const [isListViewLoading, setLoad] = useState();\n\n  const onClickLeftBtn = () => {\n    const nextDate = getAddedDateStr(startDate, -1);\n    LocalStroage.startDate().set(nextDate);\n    setStratDate(nextDate);\n  };\n  const onClickRightBtn = () => {\n    const nextDate = getAddedDateStr(startDate, 1);\n    LocalStroage.startDate().set(nextDate);\n    setStratDate(nextDate);\n  };\n\n  useEffect(() => {\n    setStratDate(getStartDate(date));\n  }, [date]);\n  const getListView = async () => {\n    try {\n      if (user && startDate) {\n        setLoad(true);\n        const data = await APIv2.listView(user, startDate).get(STARTDATEDIFF);\n        setLoad(false);\n        if (!data?.data) throw new Error(\"List View cann't found\");\n        console.log(\"DATA : LISTVIEW \", data?.data);\n        setListView(data?.data);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    //setListView를 좀 더 스마트하게 바꾸어야 한다.\n    console.log(\"Set list view start L or R\");\n  }, [startDate]);\n  useEffect(() => {\n    //setListView를 좀 더 스마트하게 바꾸어야 한다.\n    console.log(\"Set list view start\");\n    getListView();\n  }, [startDate]);\n  return {\n    isListViewLoading,\n    startDate,\n    listView,\n    onClickLeftBtn,\n    onClickRightBtn,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}