{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/Loading.js\";\nimport ReactLoading from \"react-loading\";\nimport \"../css/element/loading.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoadingElement = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-bar\",\n    children: LoadingContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"loading__text\",\n    children: [\" \", text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n_c = LoadingElement;\n\nconst LoadingContent = /*#__PURE__*/_jsxDEV(ReactLoading, {\n  type: \"spinningBubbles\",\n  height: \"10em\",\n  width: \"10em\",\n  color: \"#663333\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\nexport const LoadingElementSmall = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-bar\",\n    children: LoadingContentSmall\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"loading__text\",\n    children: [\" \", text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n_c2 = LoadingElementSmall;\n\nconst LoadingContentSmall = /*#__PURE__*/_jsxDEV(ReactLoading, {\n  type: \"spinningBubbles\",\n  height: \"2em\",\n  width: \"2em\",\n  color: \"#663333\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadingElement\");\n$RefreshReg$(_c2, \"LoadingElementSmall\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/Loading.js"],"names":["ReactLoading","LoadingElement","text","LoadingContent","LoadingElementSmall","LoadingContentSmall"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,OAAO,4BAAP;;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBAC5B;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,oBAAgCD,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADK;KAAMD,c;;AAOb,MAAME,cAAc,gBAClB,QAAC,YAAD;AACE,EAAA,IAAI,EAAE,iBADR;AAEE,EAAA,MAAM,EAAE,MAFV;AAGE,EAAA,KAAK,EAAE,MAHT;AAIE,EAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA,QADF;;AAQA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,kBACjC;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cAA8BG;AAA9B;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,oBAAgCH,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADK;MAAME,mB;;AAOb,MAAMC,mBAAmB,gBACvB,QAAC,YAAD;AACE,EAAA,IAAI,EAAE,iBADR;AAEE,EAAA,MAAM,EAAE,KAFV;AAGE,EAAA,KAAK,EAAE,KAHT;AAIE,EAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import ReactLoading from \"react-loading\";\nimport \"../css/element/loading.css\";\nexport const LoadingElement = ({ text }) => (\n  <div className=\"loading\">\n    <div className=\"loading-bar\">{LoadingContent}</div>\n    <h1 className=\"loading__text\"> {text}</h1>\n  </div>\n);\n\nconst LoadingContent = (\n  <ReactLoading\n    type={\"spinningBubbles\"}\n    height={\"10em\"}\n    width={\"10em\"}\n    color={\"#663333\"}\n  ></ReactLoading>\n);\nexport const LoadingElementSmall = ({ text }) => (\n  <div className=\"loading\">\n    <div className=\"loading-bar\">{LoadingContentSmall}</div>\n    <h1 className=\"loading__text\"> {text}</h1>\n  </div>\n);\n\nconst LoadingContentSmall = (\n  <ReactLoading\n    type={\"spinningBubbles\"}\n    height={\"2em\"}\n    width={\"2em\"}\n    color={\"#663333\"}\n  ></ReactLoading>\n);\n"]},"metadata":{},"sourceType":"module"}