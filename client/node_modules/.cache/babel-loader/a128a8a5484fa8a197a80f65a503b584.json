{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport \"./css/calendar.css\";\nimport { changeFormatYYYYMMDD } from \"./tools/time\";\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { NotFoundPage } from \"./components/pages/NotFoundPage\";\nimport { LoginPage } from \"./components/pages/LoginPage\";\nimport { HomePage } from \"./components/pages/HomePage\";\nimport { Header } from \"./components/Header\";\nimport { useLogin } from \"./hooks/user/useLogin\";\nimport { useSetDate } from \"./hooks/date/useSetDate\";\nimport { GithubLoginPage } from \"./components/pages/GithubLoginPage\";\nimport { SignupPage } from \"./components/pages/SignupPage\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER = \"TEST\";\n\nfunction App(props) {\n  _s();\n\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useSetDate();\n  const date = changeFormatYYYYMMDD(updateDateHook[0], false); // const [t1, t2] = useSetDate();\n  // console.log(t1, t2);\n  //{ user, setUser, authenticated, login, logout }\n\n  const customLoginHook = useLogin();\n  const user = customLoginHook[0];\n  console.log(\"APP USER: \", user);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      date: date,\n      customLoginHook: customLoginHook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: console.log(axios.post(\"/api/jwt/verify\", localStorage.getItem(\"access_token\"))),\n        children: \"TEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(HomePage, {\n            user: user,\n            updateDateHook: updateDateHook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: ({\n            history,\n            location\n          }) => /*#__PURE__*/_jsxDEV(LoginPage, {\n            history: history,\n            location: location,\n            customLoginHook: customLoginHook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          render: ({\n            history,\n            location\n          }) => /*#__PURE__*/_jsxDEV(SignupPage, {\n            history: history,\n            location: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/github-login\" // component={GithubLoginPage}\n          ,\n          render: ({\n            history,\n            location\n          }) => /*#__PURE__*/_jsxDEV(GithubLoginPage, {\n            history: history,\n            location: location,\n            customLoginHook: customLoginHook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DErJUP+ZOuK4cY48hO+B5/rLhnE=\", false, function () {\n  return [useSetDate, useLogin];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/App.js"],"names":["changeFormatYYYYMMDD","Link","Route","Switch","BrowserRouter","Router","NotFoundPage","LoginPage","HomePage","Header","useLogin","useSetDate","GithubLoginPage","SignupPage","axios","USER","App","props","updateDateHook","date","customLoginHook","user","console","log","post","localStorage","getItem","history","location"],"mappings":";;;AAAA;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,SAASA,oBAAT,QAAqC,cAArC;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,aAAa,IAAIC,MAA/C,QAA6D,kBAA7D;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAb;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB;AACA;AACA;AACA;AACA,QAAMC,cAAc,GAAGP,UAAU,EAAjC;AACA,QAAMQ,IAAI,GAAGnB,oBAAoB,CAACkB,cAAc,CAAC,CAAD,CAAf,EAAoB,KAApB,CAAjC,CANkB,CAOlB;AACA;AACA;;AACA,QAAME,eAAe,GAAGV,QAAQ,EAAhC;AACA,QAAMW,IAAI,GAAGD,eAAe,CAAC,CAAD,CAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;AACA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF,IAAd;AAAoB,MAAA,eAAe,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,QAAA,OAAO,EAAEE,OAAO,CAACC,GAAR,CACPT,KAAK,CAACU,IAAN,CAAW,iBAAX,EAA8BC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAA9B,CADO,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,GAFP;AAGE,UAAA,MAAM,EAAE,mBACN,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEL,IAAhB;AAAsB,YAAA,cAAc,EAAEH;AAAtC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,MAAM,EAAE,CAAC;AAAES,YAAAA,OAAF;AAAWC,YAAAA;AAAX,WAAD,kBACN,QAAC,SAAD;AACE,YAAA,OAAO,EAAED,OADX;AAEE,YAAA,QAAQ,EAAEC,QAFZ;AAGE,YAAA,eAAe,EAAER;AAHnB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBARF,eAkBE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,MAAM,EAAE,CAAC;AAAEO,YAAAA,OAAF;AAAWC,YAAAA;AAAX,WAAD,kBACN,QAAC,UAAD;AAAY,YAAA,OAAO,EAAED,OAArB;AAA8B,YAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAwBE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,eADP,CAEE;AAFF;AAGE,UAAA,MAAM,EAAE,CAAC;AAAED,YAAAA,OAAF;AAAWC,YAAAA;AAAX,WAAD,kBACN,QAAC,eAAD;AACE,YAAA,OAAO,EAAED,OADX;AAEE,YAAA,QAAQ,EAAEC,QAFZ;AAGE,YAAA,eAAe,EAAER;AAHnB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAxBF,eAmCE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEd;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAgDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD;;GAjEQU,G;UAKgBL,U,EAKCD,Q;;;KAVjBM,G;AAmET,eAAeA,GAAf","sourcesContent":["// import logo from './logo.svg';\nimport \"./css/App.css\";\nimport \"./css/calendar.css\";\nimport { changeFormatYYYYMMDD } from \"./tools/time\";\n\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { NotFoundPage } from \"./components/pages/NotFoundPage\";\nimport { LoginPage } from \"./components/pages/LoginPage\";\nimport { HomePage } from \"./components/pages/HomePage\";\nimport { Header } from \"./components/Header\";\nimport { useLogin } from \"./hooks/user/useLogin\";\nimport { useSetDate } from \"./hooks/date/useSetDate\";\nimport { GithubLoginPage } from \"./components/pages/GithubLoginPage\";\nimport { SignupPage } from \"./components/pages/SignupPage\";\nimport axios from \"axios\";\n\nconst USER = \"TEST\";\nfunction App(props) {\n  // const [value, onChange] = useState(new Date());\n  // const [test, testtest] = useState(0);\n  // const clickDay = (event, value) => alert(\"Clicked day: \", value);\n  // const mark = [\"2021-09-12\", \"2021-09-13\", \"2021-09-14\"];\n  const updateDateHook = useSetDate();\n  const date = changeFormatYYYYMMDD(updateDateHook[0], false);\n  // const [t1, t2] = useSetDate();\n  // console.log(t1, t2);\n  //{ user, setUser, authenticated, login, logout }\n  const customLoginHook = useLogin();\n  const user = customLoginHook[0];\n  console.log(\"APP USER: \", user);\n  return (\n    <Router>\n      <Header date={date} customLoginHook={customLoginHook} />\n      <main>\n        <button\n          onClick={console.log(\n            axios.post(\"/api/jwt/verify\", localStorage.getItem(\"access_token\"))\n          )}\n        >\n          TEST\n        </button>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <HomePage user={user} updateDateHook={updateDateHook} />\n            )}\n          />\n          <Route\n            path=\"/login\"\n            render={({ history, location }) => (\n              <LoginPage\n                history={history}\n                location={location}\n                customLoginHook={customLoginHook}\n              />\n            )}\n          />\n          <Route\n            path=\"/signup\"\n            render={({ history, location }) => (\n              <SignupPage history={history} location={location} />\n            )}\n          />\n          <Route\n            path=\"/github-login\"\n            // component={GithubLoginPage}\n            render={({ history, location }) => (\n              <GithubLoginPage\n                history={history}\n                location={location}\n                customLoginHook={customLoginHook}\n              />\n            )}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </main>\n      <footer>footer</footer>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}