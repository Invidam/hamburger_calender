{"ast":null,"code":"var _jsxFileName = \"/home/invidam/hamburger_calender/src/components/worklist/workListComponent.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport { usePushWork } from \"../../hooks/usePushWork\";\nimport { AddWorkWindow } from \"./window/AddWindow\";\nimport { WorkList } from \"./WorkList\";\nimport { WorkListTemplate } from \"./WorkListTemplate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"blue\"\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\"\n  }\n};\nexport const WorkListComponent = () => {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    console.log(\"OPEN\", modalIsOpen);\n    setIsOpen(true);\n    console.log(\"OPEN\", modalIsOpen);\n  };\n\n  const closeModal = () => {\n    console.log(\"CLOSE1\", modalIsOpen);\n    setIsOpen(false);\n    console.log(\"CLOSE2\", modalIsOpen);\n  };\n\n  const {\n    workList,\n    onSubmitWork\n  } = usePushWork(closeModal);\n\n  const addWorkWindow = /*#__PURE__*/_jsxDEV(AddWorkWindow, {\n    workList: workList,\n    onSubmitWork: onSubmitWork\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  const modal = /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    overlayClassName: \"Overlay\",\n    children: [addWorkWindow, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: closeModal,\n      children: \" CLOSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this); //   const workList = JSON.parse(localStorage.getItem(\"workList\"));\n\n\n  console.log(\"In worklist, list: \", workList); //   const wakeTimeObj = JSON.parse(localStorage.getItem(\"wakeTime\"));\n  //   const bedTimeObj = JSON.parse(localStorage.getItem(\"bedTime\"));\n\n  const workListDisplay = /*#__PURE__*/_jsxDEV(WorkList, {\n    workList: workList,\n    addWorkWindow: addWorkWindow,\n    openModal: openModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(WorkListTemplate, {\n    workList: workListDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n\n_s(WorkListComponent, \"Fa/kNXCxR13vqJ4HU+zADqWVcKU=\", false, function () {\n  return [usePushWork];\n});\n\n_c = WorkListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkListComponent\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/components/worklist/workListComponent.js"],"names":["Modal","useState","usePushWork","AddWorkWindow","WorkList","WorkListTemplate","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","overlay","position","WorkListComponent","modalIsOpen","setIsOpen","openModal","console","log","closeModal","workList","onSubmitWork","addWorkWindow","modal","workListDisplay"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,KADE;AAEPC,IAAAA,IAAI,EAAE,KAFC;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,WAAW,EAAE,MALN;AAMPC,IAAAA,SAAS,EAAE,uBANJ;AAOPC,IAAAA,eAAe,EAAE;AAPV,GADU;AAUnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,OADH;AAEPR,IAAAA,GAAG,EAAE,CAFE;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPG,IAAAA,eAAe,EAAE;AANV;AAVU,CAArB;AAoBA,OAAO,MAAMG,iBAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BlB,QAAQ,CAAC,KAAD,CAAzC;;AACA,QAAMmB,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,WAApB;AACAC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,WAApB;AACD,GAJD;;AAKA,QAAMK,UAAU,GAAG,MAAM;AACvBF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,WAAtB;AACAC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,WAAtB;AACD,GAJD;;AAKA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BvB,WAAW,CAACqB,UAAD,CAA9C;;AACA,QAAMG,aAAa,gBACjB,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEF,QAAzB;AAAmC,IAAA,YAAY,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,UADF;;AAGA,QAAME,KAAK,gBACT,QAAC,KAAD;AACE,IAAA,MAAM,EAAET,WADV;AAEE,IAAA,cAAc,EAAEK,UAFlB;AAGE,IAAA,KAAK,EAAEjB,YAHT;AAIE,IAAA,YAAY,EAAC,eAJf;AAKE,IAAA,gBAAgB,EAAC,SALnB;AAAA,eAOGoB,aAPH,eAQE;AAAQ,MAAA,OAAO,EAAEH,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAhBqC,CA6BrC;;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,QAAnC,EA9BqC,CA+BrC;AACA;;AACA,QAAMI,eAAe,gBACnB,QAAC,QAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,aAAa,EAAEE,aAFjB;AAGE,IAAA,SAAS,EAAEN;AAHb;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,sBAAO,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEQ;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzCM;;GAAMX,iB;UAYwBf,W;;;KAZxBe,iB","sourcesContent":["import Modal from \"react-modal\";\nimport { useState } from \"react\";\nimport { usePushWork } from \"../../hooks/usePushWork\";\nimport { AddWorkWindow } from \"./window/AddWindow\";\nimport { WorkList } from \"./WorkList\";\nimport { WorkListTemplate } from \"./WorkListTemplate\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"blue\",\n  },\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n};\n\nexport const WorkListComponent = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    console.log(\"OPEN\", modalIsOpen);\n    setIsOpen(true);\n    console.log(\"OPEN\", modalIsOpen);\n  };\n  const closeModal = () => {\n    console.log(\"CLOSE1\", modalIsOpen);\n    setIsOpen(false);\n    console.log(\"CLOSE2\", modalIsOpen);\n  };\n  const { workList, onSubmitWork } = usePushWork(closeModal);\n  const addWorkWindow = (\n    <AddWorkWindow workList={workList} onSubmitWork={onSubmitWork} />\n  );\n  const modal = (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      overlayClassName=\"Overlay\"\n    >\n      {addWorkWindow}\n      <button onClick={closeModal}> CLOSE</button>\n    </Modal>\n  );\n\n  //   const workList = JSON.parse(localStorage.getItem(\"workList\"));\n  console.log(\"In worklist, list: \", workList);\n  //   const wakeTimeObj = JSON.parse(localStorage.getItem(\"wakeTime\"));\n  //   const bedTimeObj = JSON.parse(localStorage.getItem(\"bedTime\"));\n  const workListDisplay = (\n    <WorkList\n      workList={workList}\n      addWorkWindow={addWorkWindow}\n      openModal={openModal}\n    />\n  );\n  return <WorkListTemplate workList={workListDisplay} />;\n};\n"]},"metadata":{},"sourceType":"module"}