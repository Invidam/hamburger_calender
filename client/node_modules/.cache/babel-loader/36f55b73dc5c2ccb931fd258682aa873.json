{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { SORT_TYPE_CNT } from \"../../components/todoList/TodoList\"; // import { SORT_TYPE_CNT } from \"../../components/todoList/TodoListTemplate\";\n\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\n\nconst makeSortTypeStr = idx => {\n  let ret = {};\n  ret[\"type\"] = Math.floor(idx / SORT_TYPE_CNT) === 0 ? \"date\" : \"priority\";\n  ret[\"direction\"] = idx % 2 === 0 ? \"up\" : \"down\";\n  return ret;\n};\n\nexport const useTodoList = (user, initSortTypeIdx, sortTypeCnt, sortTypes) => {\n  _s();\n\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(true);\n  const [sortTypeIdx, setSortTypeIdx] = useState(initSortTypeIdx);\n\n  const getTodoListLength = () => user ? Object.keys(todoList).length : parseInt(Object.keys(todoList)[Object.keys(todoList).length - 1]) + 1;\n\n  const getNextSortType = idx => (idx + 1) % sortTypes === 0 ? idx - sortTypes + 1 : idx + 1;\n\n  const onClickByTabIdx = tabIdx => {\n    // 같은 소속이었다면\n    setLoad(true);\n    if (Math.floor(sortTypeIdx / sortTypes) === tabIdx) setSortTypeIdx(getNextSortType(sortTypeIdx));else setSortTypeIdx(tabIdx * sortTypeCnt + 1);\n  };\n\n  const getTodoList = async (user, sortTypeIdx) => {\n    try {\n      if (user) {\n        if (!isTodoListLoading) setLoad(true);\n        console.log(\"TODO SORT\", sortTypeIdx);\n        const data = await APIv2.todoList(user).get(makeSortTypeStr(sortTypeIdx));\n        const resTodoList = data === null || data === void 0 ? void 0 : data.data;\n        console.log(\"INDI, RES TODO LIST: \", resTodoList);\n        if (!data) throw new Error(\"TodoList can't found\");\n        setTodoList(resTodoList);\n        setLoad(false);\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n        setLoad(false);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getTodoList(user, sortTypeIdx);\n  }, [user, sortTypeIdx]);\n\n  const setTodo = (todoObj, idx) => {\n    console.log(\"SET TODO IDX: \", idx);\n    todoObj.idx = idx; // const id = todoObj.id;\n    // let _todoList = todoList.concat();\n    //getTodoListLength\n\n    return {\n      create: async () => {\n        // _todoList.push([id, todoObj]);\n        // _todoList.push(todoObj);\n        if (user) {\n          await APIv2.todo(user).create(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList\n          };\n          const idx = getTodoListLength();\n          _todoList[idx] = todoObj;\n          console.log(\"CREATE TODO: \", _todoList);\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n      edit: async () => {\n        // _todoList[idx] = [id, todoObj];\n        // _todoList[idx] = todoObj;\n        // setTodoList(_todoList);\n        if (user) {\n          await APIv2.todo(user).edit(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList\n          };\n          _todoList[idx] = todoObj;\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n      delete: async () => {\n        // _todoList = _todoList.filter((el, elemIdx) => elemIdx !== idx);\n        // setTodoList(_todoList);\n        if (user) {\n          await APIv2.todo(user).delete(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList\n          };\n          if (!delete _todoList[idx]) throw new Error(\"Cannot Delete TodoItem\");\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      }\n    };\n  };\n\n  return [todoList, setTodo, isTodoListLoading, sortTypeIdx, onClickByTabIdx];\n};\n\n_s(useTodoList, \"YwwhQ0ht0PuJzf1gQVNG85b1UTg=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/todolist/useTodoList.js"],"names":["useEffect","useState","SORT_TYPE_CNT","APIv2","LocalStroage","makeSortTypeStr","idx","ret","Math","floor","useTodoList","user","initSortTypeIdx","sortTypeCnt","sortTypes","todoList","setTodoList","isTodoListLoading","setLoad","sortTypeIdx","setSortTypeIdx","getTodoListLength","Object","keys","length","parseInt","getNextSortType","onClickByTabIdx","tabIdx","getTodoList","console","log","data","get","resTodoList","Error","error","alert","setTodo","todoObj","create","todo","_todoList","set","edit","delete"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { SORT_TYPE_CNT } from \"../../components/todoList/TodoList\";\n// import { SORT_TYPE_CNT } from \"../../components/todoList/TodoListTemplate\";\nimport { APIv2 } from \"../../tools/API\";\nimport { LocalStroage } from \"../../tools/LocalStorage\";\nconst makeSortTypeStr = (idx) => {\n  let ret = {};\n  ret[\"type\"] = Math.floor(idx / SORT_TYPE_CNT) === 0 ? \"date\" : \"priority\";\n  ret[\"direction\"] = idx % 2 === 0 ? \"up\" : \"down\";\n  return ret;\n};\nexport const useTodoList = (user, initSortTypeIdx, sortTypeCnt, sortTypes) => {\n  const [todoList, setTodoList] = useState();\n  const [isTodoListLoading, setLoad] = useState(true);\n  const [sortTypeIdx, setSortTypeIdx] = useState(initSortTypeIdx);\n  const getTodoListLength = () =>\n    user\n      ? Object.keys(todoList).length\n      : parseInt(Object.keys(todoList)[Object.keys(todoList).length - 1]) + 1;\n  const getNextSortType = (idx) =>\n    (idx + 1) % sortTypes === 0 ? idx - sortTypes + 1 : idx + 1;\n  const onClickByTabIdx = (tabIdx) => {\n    // 같은 소속이었다면\n    setLoad(true);\n    if (Math.floor(sortTypeIdx / sortTypes) === tabIdx)\n      setSortTypeIdx(getNextSortType(sortTypeIdx));\n    else setSortTypeIdx(tabIdx * sortTypeCnt + 1);\n  };\n  const getTodoList = async (user, sortTypeIdx) => {\n    try {\n      if (user) {\n        if (!isTodoListLoading) setLoad(true);\n        console.log(\"TODO SORT\", sortTypeIdx);\n        const data = await APIv2.todoList(user).get(\n          makeSortTypeStr(sortTypeIdx)\n        );\n        const resTodoList = data?.data;\n        console.log(\"INDI, RES TODO LIST: \", resTodoList);\n        if (!data) throw new Error(\"TodoList can't found\");\n        setTodoList(resTodoList);\n        setLoad(false);\n      } else {\n        const resTodoList = LocalStroage.todoList().get();\n        console.log(\"USEWORKLIST DATA NO CATCH [][] AFT\");\n        setTodoList(resTodoList);\n        setLoad(false);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    getTodoList(user, sortTypeIdx);\n  }, [user, sortTypeIdx]);\n  const setTodo = (todoObj, idx) => {\n    console.log(\"SET TODO IDX: \", idx);\n    todoObj.idx = idx;\n    // const id = todoObj.id;\n    // let _todoList = todoList.concat();\n    //getTodoListLength\n    return {\n      create: async () => {\n        // _todoList.push([id, todoObj]);\n        // _todoList.push(todoObj);\n        if (user) {\n          await APIv2.todo(user).create(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList };\n          const idx = getTodoListLength();\n          _todoList[idx] = todoObj;\n          console.log(\"CREATE TODO: \", _todoList);\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n      edit: async () => {\n        // _todoList[idx] = [id, todoObj];\n\n        // _todoList[idx] = todoObj;\n        // setTodoList(_todoList);\n        if (user) {\n          await APIv2.todo(user).edit(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList };\n          _todoList[idx] = todoObj;\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n      delete: async () => {\n        // _todoList = _todoList.filter((el, elemIdx) => elemIdx !== idx);\n        // setTodoList(_todoList);\n        if (user) {\n          await APIv2.todo(user).delete(todoObj);\n          await getTodoList(user, sortTypeIdx);\n        } else {\n          const _todoList = { ...todoList };\n          if (!delete _todoList[idx]) throw new Error(\"Cannot Delete TodoItem\");\n          LocalStroage.todoList().set(_todoList);\n          setTodoList(_todoList);\n        }\n      },\n    };\n  };\n  return [todoList, setTodo, isTodoListLoading, sortTypeIdx, onClickByTabIdx];\n};\n"]},"metadata":{},"sourceType":"module"}