{"ast":null,"code":"import { Node } from \"./Node.js\";\n\nconst arrToDeque = initArr => {\n  let head, tail;\n  initArr.reduce((prev, curr, idx, arr) => {\n    if (idx === 0) {\n      curr = new Node(curr);\n      head = curr;\n    } else {\n      curr = new Node(curr, prev);\n      prev.next = curr;\n\n      if (idx === arr.length - 1) {\n        tail = curr;\n      }\n    }\n\n    return curr;\n  }, undefined);\n  return {\n    head,\n    tail\n  };\n};\n\nexport class Deque {\n  constructor(initArr, displayLength) {\n    this.startDateIdx = Math.floor((initArr.length - displayLength) / 2); // 11 / 2 - 2 = 3\n    // 11 - 5 / 3\n    // this.head\n    // this.tail\n    // initArr.reduce((prev, curr, idx, arr) => {}, undefined);\n\n    const {\n      head,\n      tail\n    } = arrToDeque(initArr);\n    this.head = head;\n    this.tail = tail;\n    this.length = initArr.length;\n    this.displayLength = displayLength;\n  }\n\n  print(text) {\n    let itr = this.head;\n    const ret = [];\n\n    while (itr !== undefined) {\n      ret.push(itr.value);\n      itr = itr.next;\n    }\n  }\n\n  pop_front(cnt = 1) {\n    while (cnt--) {\n      this.head = this.head.next;\n      this.head.prev = undefined;\n      this.length--;\n    }\n  }\n\n  pop_back(cnt = 1) {\n    while (cnt--) {\n      this.tail = this.tail.prev;\n      this.tail.next = undefined;\n      this.length--;\n    }\n  }\n\n  push_front(node) {\n    node.next = this.head;\n    this.head.prev = node;\n    this.head = node;\n    this.length++;\n  }\n\n  push_back(node) {\n    node.prev = this.tail;\n    this.tail.next = node;\n    this.tail = node;\n    this.length++;\n  }\n\n  getInRange(from, length) {\n    try {\n      if (from + length > this.length || from < 0 || length < 1) throw new Error(`Unexpected arguments ${from} and ${length} in ${this.length}`);\n      let itr = this.head;\n      let idx = 0;\n      const ret = [];\n\n      while (idx++ !== from) itr = itr.next;\n\n      while (length--) {\n        if (itr === undefined) throw new Error(\"Deque is not linked well\");\n        ret.push(itr.value);\n        itr = itr.next;\n      }\n\n      return ret;\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  get() {\n    return this.getInRange(this.startDateIdx, this.displayLength);\n  }\n\n} // const arr = [1, 2, 3, 4, 5];\n// const deq = new Deque(arr, 2);\n// deq.print();\n// deq.push_back(new Node(6));\n// deq.print();\n// deq.push_front(new Node(0));\n// deq.print();\n// deq.pop_back();\n// deq.print();\n// deq.pop_front();\n// deq.print();","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/classes/Deque.js"],"names":["Node","arrToDeque","initArr","head","tail","reduce","prev","curr","idx","arr","next","length","undefined","Deque","constructor","displayLength","startDateIdx","Math","floor","print","text","itr","ret","push","value","pop_front","cnt","pop_back","push_front","node","push_back","getInRange","from","Error","error","alert","get"],"mappings":"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","sourcesContent":["import { Node } from \"./Node.js\";\n\nconst arrToDeque = (initArr) => {\n  let head, tail;\n  initArr.reduce((prev, curr, idx, arr) => {\n    if (idx === 0) {\n      curr = new Node(curr);\n      head = curr;\n    } else {\n      curr = new Node(curr, prev);\n      prev.next = curr;\n      if (idx === arr.length - 1) {\n        tail = curr;\n      }\n    }\n    return curr;\n  }, undefined);\n  return { head, tail };\n};\nexport class Deque {\n  constructor(initArr, displayLength) {\n    this.startDateIdx = Math.floor((initArr.length - displayLength) / 2);\n    // 11 / 2 - 2 = 3\n    // 11 - 5 / 3\n    // this.head\n    // this.tail\n    // initArr.reduce((prev, curr, idx, arr) => {}, undefined);\n    const { head, tail } = arrToDeque(initArr);\n    this.head = head;\n    this.tail = tail;\n    this.length = initArr.length;\n    this.displayLength = displayLength;\n  }\n  print(text) {\n    let itr = this.head;\n    const ret = [];\n    while (itr !== undefined) {\n      ret.push(itr.value);\n      itr = itr.next;\n    }\n  }\n  pop_front(cnt = 1) {\n    while (cnt--) {\n      this.head = this.head.next;\n      this.head.prev = undefined;\n      this.length--;\n    }\n  }\n  pop_back(cnt = 1) {\n    while (cnt--) {\n      this.tail = this.tail.prev;\n      this.tail.next = undefined;\n      this.length--;\n    }\n  }\n  push_front(node) {\n    node.next = this.head;\n    this.head.prev = node;\n    this.head = node;\n    this.length++;\n  }\n  push_back(node) {\n    node.prev = this.tail;\n    this.tail.next = node;\n    this.tail = node;\n    this.length++;\n  }\n  getInRange(from, length) {\n    try {\n      if (from + length > this.length || from < 0 || length < 1)\n        throw new Error(\n          `Unexpected arguments ${from} and ${length} in ${this.length}`\n        );\n      let itr = this.head;\n      let idx = 0;\n      const ret = [];\n      while (idx++ !== from) itr = itr.next;\n      while (length--) {\n        if (itr === undefined) throw new Error(\"Deque is not linked well\");\n        ret.push(itr.value);\n        itr = itr.next;\n      }\n      return ret;\n    } catch (error) {\n      alert(error);\n    }\n  }\n  get() {\n    return this.getInRange(this.startDateIdx, this.displayLength);\n  }\n}\n\n// const arr = [1, 2, 3, 4, 5];\n\n// const deq = new Deque(arr, 2);\n\n// deq.print();\n\n// deq.push_back(new Node(6));\n// deq.print();\n// deq.push_front(new Node(0));\n// deq.print();\n\n// deq.pop_back();\n// deq.print();\n// deq.pop_front();\n// deq.print();\n"]},"metadata":{},"sourceType":"module"}