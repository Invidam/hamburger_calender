{"ast":null,"code":"import axios from \"axios\";\nexport const getCustomConfig = () => {\n  const token = localStorage.getItem(\"access_token\");\n  const date = localStorage.getItem(\"date\");\n  const config = {\n    headers: {\n      \"x-access-token\": token,\n      \"x-access-date\": date\n    }\n  };\n  return config;\n};\nlet customAxios = axios.create(getCustomConfig());\ncustomAxios.interceptors.response.use(res => {\n  return res;\n}, e => {\n  var _e$response;\n\n  console.log(\"ERR\", e === null || e === void 0 ? void 0 : e.response);\n\n  if ((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 401) {\n    var _e$response2;\n\n    console.log(\"ER1ROR: \", e.response); // alert();\n\n    throw new Error(`401 - Unauthorized\\n${(_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.data}`);\n  }\n\n  return Promise.reject(e);\n});\nexport const updateAPIHeader = () => {\n  customAxios = axios.create(getCustomConfig());\n};\n\nclass API {\n  static updateHeader() {\n    customAxios = axios.create(getCustomConfig());\n  }\n\n  static workList(user, date) {\n    const url = `/api/${user}/${date}/worklist/worklist`;\n    return {\n      get: data => {\n        customAxios.get(url);\n      },\n      create: data => {\n        customAxios.put(url, data);\n      },\n      edit: data => {\n        customAxios.post(url, data);\n      },\n      delete: data => {\n        customAxios.delete(url, data);\n      }\n    };\n  }\n\n} //API.workList(\"SR\",\"1212-12-12\").create({ab:\"c\"});","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/tools/axiosSetting.js"],"names":["axios","getCustomConfig","token","localStorage","getItem","date","config","headers","customAxios","create","interceptors","response","use","res","e","console","log","status","Error","data","Promise","reject","updateAPIHeader","API","updateHeader","workList","user","url","get","put","edit","post","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,QAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAME,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,wBAAkBL,KAApB;AAA2B,uBAAiBG;AAA5C;AADI,GAAf;AAGA,SAAOC,MAAP;AACD,CAPM;AASP,IAAIE,WAAW,GAAGR,KAAK,CAACS,MAAN,CAAaR,eAAe,EAA5B,CAAlB;AAEAO,WAAW,CAACE,YAAZ,CAAyBC,QAAzB,CAAkCC,GAAlC,CACGC,GAAD,IAAS;AACP,SAAOA,GAAP;AACD,CAHH,EAIGC,CAAD,IAAO;AAAA;;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,CAAnB,aAAmBA,CAAnB,uBAAmBA,CAAC,CAAEH,QAAtB;;AACA,MAAI,CAAAG,CAAC,SAAD,IAAAA,CAAC,WAAD,2BAAAA,CAAC,CAAEH,QAAH,4DAAaM,MAAb,MAAwB,GAA5B,EAAiC;AAAA;;AAC/BF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,CAAC,CAACH,QAA1B,EAD+B,CAE/B;;AACA,UAAM,IAAIO,KAAJ,CAAW,uBAAD,gBAAuBJ,CAAC,CAACH,QAAzB,iDAAuB,aAAYQ,IAAK,EAAlD,CAAN;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeP,CAAf,CAAP;AACD,CAZH;AAeA,OAAO,MAAMQ,eAAe,GAAG,MAAM;AACnCd,EAAAA,WAAW,GAAGR,KAAK,CAACS,MAAN,CAAaR,eAAe,EAA5B,CAAd;AACD,CAFM;;AAGP,MAAMsB,GAAN,CAAU;AACW,SAAZC,YAAY,GAAG;AACpBhB,IAAAA,WAAW,GAAGR,KAAK,CAACS,MAAN,CAAaR,eAAe,EAA5B,CAAd;AACD;;AACc,SAARwB,QAAQ,CAACC,IAAD,EAAOrB,IAAP,EAAa;AAC1B,UAAMsB,GAAG,GAAI,QAAOD,IAAK,IAAGrB,IAAK,oBAAjC;AACA,WAAO;AACLuB,MAAAA,GAAG,EAAGT,IAAD,IAAU;AACbX,QAAAA,WAAW,CAACoB,GAAZ,CAAgBD,GAAhB;AACD,OAHI;AAILlB,MAAAA,MAAM,EAAGU,IAAD,IAAU;AAChBX,QAAAA,WAAW,CAACqB,GAAZ,CAAgBF,GAAhB,EAAqBR,IAArB;AACD,OANI;AAOLW,MAAAA,IAAI,EAAGX,IAAD,IAAU;AACdX,QAAAA,WAAW,CAACuB,IAAZ,CAAiBJ,GAAjB,EAAsBR,IAAtB;AACD,OATI;AAULa,MAAAA,MAAM,EAAGb,IAAD,IAAU;AAChBX,QAAAA,WAAW,CAACwB,MAAZ,CAAmBL,GAAnB,EAAwBR,IAAxB;AACD;AAZI,KAAP;AAcD;;AApBO,C,CAuBV","sourcesContent":["import axios from \"axios\";\n\nexport const getCustomConfig = () => {\n  const token = localStorage.getItem(\"access_token\");\n  const date = localStorage.getItem(\"date\");\n  const config = {\n    headers: { \"x-access-token\": token, \"x-access-date\": date },\n  };\n  return config;\n};\n\nlet customAxios = axios.create(getCustomConfig());\n\ncustomAxios.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (e) => {\n    console.log(\"ERR\", e?.response);\n    if (e?.response?.status === 401) {\n      console.log(\"ER1ROR: \", e.response);\n      // alert();\n      throw new Error(`401 - Unauthorized\\n${e.response?.data}`);\n    }\n    return Promise.reject(e);\n  }\n);\n\nexport const updateAPIHeader = () => {\n  customAxios = axios.create(getCustomConfig());\n};\nclass API {\n  static updateHeader() {\n    customAxios = axios.create(getCustomConfig());\n  }\n  static workList(user, date) {\n    const url = `/api/${user}/${date}/worklist/worklist`;\n    return {\n      get: (data) => {\n        customAxios.get(url);\n      },\n      create: (data) => {\n        customAxios.put(url, data);\n      },\n      edit: (data) => {\n        customAxios.post(url, data);\n      },\n      delete: (data) => {\n        customAxios.delete(url, data);\n      },\n    };\n  }\n}\n\n//API.workList(\"SR\",\"1212-12-12\").create({ab:\"c\"});\n"]},"metadata":{},"sourceType":"module"}