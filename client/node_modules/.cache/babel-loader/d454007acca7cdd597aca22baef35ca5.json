{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nexport const useRecordTime = async key => {\n  _s();\n\n  var _res$data;\n\n  const syncAxios = () => {\n    return new Promise(resolve => axios({\n      headers: {\n        Authorization: \"\",\n        \"Content-Type\": \"application/json\"\n      },\n      url: \"/api/get-time\",\n      method: \"post\",\n      data: {\n        key\n      }\n    }).then(data => {\n      console.log(\"[1]AXIOS RET\", data);\n      resolve(data);\n    }));\n  };\n\n  const res = await syncAxios();\n  console.log(\"[2]HOOK DATA: \", key, res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.timeObj);\n  const initVal = res.data ? res.data.timeObj : window.localStorage.getItem(key) ? JSON.parse(window.localStorage.getItem(key)) : null;\n  console.log(\"INIT VAL: \", initVal);\n  const [recordTime, setRecordTime] = useState(initVal);\n\n  const onClick = event => {\n    event.preventDefault();\n    const [hour, minute] = new Date().toTimeString().split(\":\").slice(0, 2).map(numChar => parseInt(numChar));\n    console.log(\"on CLick, \", hour, minute);\n    const timeObj = {\n      hour,\n      minute\n    };\n    axios.post(\"api/record-time\", {\n      user: \"TEST\",\n      key,\n      value: timeObj\n    });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n\n  return [recordTime, onClick];\n};\n\n_s(useRecordTime, \"4aDt5VS2nQ1vijZ0/WcWOYBhy/A=\");","map":{"version":3,"sources":["/home/invidam/hamburger_calender/src/hooks/useRecoreTime.js"],"names":["axios","useState","useRecordTime","key","syncAxios","Promise","resolve","headers","Authorization","url","method","data","then","console","log","res","timeObj","initVal","window","localStorage","getItem","JSON","parse","recordTime","setRecordTime","onClick","event","preventDefault","hour","minute","Date","toTimeString","split","slice","map","numChar","parseInt","post","user","value","setItem","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,GAAP,IAAe;AAAA;;AAAA;;AAC1C,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IACjBN,KAAK,CAAC;AACJO,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,EADR;AAEP,wBAAgB;AAFT,OADL;AAKJC,MAAAA,GAAG,EAAE,eALD;AAMJC,MAAAA,MAAM,EAAE,MANJ;AAOJC,MAAAA,IAAI,EAAE;AAAER,QAAAA;AAAF;AAPF,KAAD,CAAL,CAQGS,IARH,CAQSD,IAAD,IAAU;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,IAA5B;AACAL,MAAAA,OAAO,CAACK,IAAD,CAAP;AACD,KAXD,CADK,CAAP;AAcD,GAfD;;AAiBA,QAAMI,GAAG,GAAG,MAAMX,SAAS,EAA3B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BX,GAA9B,EAAmCY,GAAnC,aAAmCA,GAAnC,oCAAmCA,GAAG,CAAEJ,IAAxC,8CAAmC,UAAWK,OAA9C;AACA,QAAMC,OAAO,GAAGF,GAAG,CAACJ,IAAJ,GACZI,GAAG,CAACJ,IAAJ,CAASK,OADG,GAEZE,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BjB,GAA5B,IACAkB,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BjB,GAA5B,CAAX,CADA,GAEA,IAJJ;AAKAU,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,OAA1B;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAACgB,OAAD,CAA5C;;AACA,QAAMQ,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM,CAACC,IAAD,EAAOC,MAAP,IAAiB,IAAIC,IAAJ,GACpBC,YADoB,GAEpBC,KAFoB,CAEd,GAFc,EAGpBC,KAHoB,CAGd,CAHc,EAGX,CAHW,EAIpBC,GAJoB,CAIfC,OAAD,IAAaC,QAAQ,CAACD,OAAD,CAJL,CAAvB;AAKAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,IAA1B,EAAgCC,MAAhC;AACA,UAAMb,OAAO,GAAG;AAAEY,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB;AACA7B,IAAAA,KAAK,CAACqC,IAAN,CAAW,iBAAX,EAA8B;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBnC,MAAAA,GAAhB;AAAqBoC,MAAAA,KAAK,EAAEvB;AAA5B,KAA9B;AACAE,IAAAA,MAAM,CAACC,YAAP,CAAoBqB,OAApB,CAA4BrC,GAA5B,EAAiCkB,IAAI,CAACoB,SAAL,CAAezB,OAAf,CAAjC;AACAQ,IAAAA,aAAa,CAACR,OAAD,CAAb;AACD,GAZD;;AAaA,SAAO,CAACO,UAAD,EAAaE,OAAb,CAAP;AACD,CAzCM;;GAAMvB,a","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\n\nexport const useRecordTime = async (key) => {\n  const syncAxios = () => {\n    return new Promise((resolve) =>\n      axios({\n        headers: {\n          Authorization: \"\",\n          \"Content-Type\": \"application/json\",\n        },\n        url: \"/api/get-time\",\n        method: \"post\",\n        data: { key },\n      }).then((data) => {\n        console.log(\"[1]AXIOS RET\", data);\n        resolve(data);\n      })\n    );\n  };\n\n  const res = await syncAxios();\n  console.log(\"[2]HOOK DATA: \", key, res?.data?.timeObj);\n  const initVal = res.data\n    ? res.data.timeObj\n    : window.localStorage.getItem(key)\n    ? JSON.parse(window.localStorage.getItem(key))\n    : null;\n  console.log(\"INIT VAL: \", initVal);\n  const [recordTime, setRecordTime] = useState(initVal);\n  const onClick = (event) => {\n    event.preventDefault();\n    const [hour, minute] = new Date()\n      .toTimeString()\n      .split(\":\")\n      .slice(0, 2)\n      .map((numChar) => parseInt(numChar));\n    console.log(\"on CLick, \", hour, minute);\n    const timeObj = { hour, minute };\n    axios.post(\"api/record-time\", { user: \"TEST\", key, value: timeObj });\n    window.localStorage.setItem(key, JSON.stringify(timeObj));\n    setRecordTime(timeObj);\n  };\n  return [recordTime, onClick];\n};\n"]},"metadata":{},"sourceType":"module"}