{"ast":null,"code":"const errors = require('../errors');\n\nconst Key = require('../jwk/key/base');\n\nconst importKey = require('../jwk/import');\n\nconst {\n  KeyStore\n} = require('../jwks/keystore');\n\nmodule.exports = (input, keyStoreAllowed = false) => {\n  if (input instanceof Key) {\n    return input;\n  }\n\n  if (input instanceof KeyStore) {\n    if (!keyStoreAllowed) {\n      throw new TypeError('key argument for this operation must not be a JWKS.KeyStore instance');\n    }\n\n    return input;\n  }\n\n  try {\n    return importKey(input);\n  } catch (err) {\n    if (err instanceof errors.JOSEError && !(err instanceof errors.JWKImportFailed)) {\n      throw err;\n    }\n\n    let msg;\n\n    if (keyStoreAllowed) {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, a valid JWK.asKey input, or a JWKS.KeyStore instance';\n    } else {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, or a valid JWK.asKey input';\n    }\n\n    throw new TypeError(msg);\n  }\n};","map":{"version":3,"sources":["/home/invidam/hamburger_calender/client/node_modules/jose/lib/help/get_key.js"],"names":["errors","require","Key","importKey","KeyStore","module","exports","input","keyStoreAllowed","TypeError","err","JOSEError","JWKImportFailed","msg"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAeH,OAAO,CAAC,kBAAD,CAA5B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,CAACC,KAAD,EAAQC,eAAe,GAAG,KAA1B,KAAoC;AACnD,MAAID,KAAK,YAAYL,GAArB,EAA0B;AACxB,WAAOK,KAAP;AACD;;AAED,MAAIA,KAAK,YAAYH,QAArB,EAA+B;AAC7B,QAAI,CAACI,eAAL,EAAsB;AACpB,YAAM,IAAIC,SAAJ,CAAc,sEAAd,CAAN;AACD;;AAED,WAAOF,KAAP;AACD;;AAED,MAAI;AACF,WAAOJ,SAAS,CAACI,KAAD,CAAhB;AACD,GAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,QAAIA,GAAG,YAAYV,MAAM,CAACW,SAAtB,IAAmC,EAAED,GAAG,YAAYV,MAAM,CAACY,eAAxB,CAAvC,EAAiF;AAC/E,YAAMF,GAAN;AACD;;AAED,QAAIG,GAAJ;;AACA,QAAIL,eAAJ,EAAqB;AACnBK,MAAAA,GAAG,GAAG,kHAAN;AACD,KAFD,MAEO;AACLA,MAAAA,GAAG,GAAG,wFAAN;AACD;;AAED,UAAM,IAAIJ,SAAJ,CAAcI,GAAd,CAAN;AACD;AACF,CA7BD","sourcesContent":["const errors = require('../errors')\nconst Key = require('../jwk/key/base')\nconst importKey = require('../jwk/import')\nconst { KeyStore } = require('../jwks/keystore')\n\nmodule.exports = (input, keyStoreAllowed = false) => {\n  if (input instanceof Key) {\n    return input\n  }\n\n  if (input instanceof KeyStore) {\n    if (!keyStoreAllowed) {\n      throw new TypeError('key argument for this operation must not be a JWKS.KeyStore instance')\n    }\n\n    return input\n  }\n\n  try {\n    return importKey(input)\n  } catch (err) {\n    if (err instanceof errors.JOSEError && !(err instanceof errors.JWKImportFailed)) {\n      throw err\n    }\n\n    let msg\n    if (keyStoreAllowed) {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, a valid JWK.asKey input, or a JWKS.KeyStore instance'\n    } else {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, or a valid JWK.asKey input'\n    }\n\n    throw new TypeError(msg)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}